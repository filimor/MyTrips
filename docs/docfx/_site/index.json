{
  "api/MyTrips.Application.Dtos.CreateClientDto.html": {
    "href": "api/MyTrips.Application.Dtos.CreateClientDto.html",
    "title": "Class CreateClientDto | MyTrips",
    "keywords": "Class CreateClientDto Namespace MyTrips.Application.Dtos Assembly MyTrips.Application.dll public class CreateClientDto Inheritance object CreateClientDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string Email { get; set; } Property Value string Name public string Name { get; set; } Property Value string"
  },
  "api/MyTrips.Application.Dtos.ResponseClientDto.html": {
    "href": "api/MyTrips.Application.Dtos.ResponseClientDto.html",
    "title": "Class ResponseClientDto | MyTrips",
    "keywords": "Class ResponseClientDto Namespace MyTrips.Application.Dtos Assembly MyTrips.Application.dll public class ResponseClientDto Inheritance object ResponseClientDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string Email { get; set; } Property Value string Id public int Id { get; set; } Property Value int Name public string Name { get; set; } Property Value string"
  },
  "api/MyTrips.Application.Dtos.UpdateClientDto.html": {
    "href": "api/MyTrips.Application.Dtos.UpdateClientDto.html",
    "title": "Class UpdateClientDto | MyTrips",
    "keywords": "Class UpdateClientDto Namespace MyTrips.Application.Dtos Assembly MyTrips.Application.dll public class UpdateClientDto Inheritance object UpdateClientDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string Email { get; set; } Property Value string Id public int Id { get; set; } Property Value int Name public string Name { get; set; } Property Value string"
  },
  "api/MyTrips.Application.Dtos.html": {
    "href": "api/MyTrips.Application.Dtos.html",
    "title": "Namespace MyTrips.Application.Dtos | MyTrips",
    "keywords": "Namespace MyTrips.Application.Dtos Classes CreateClientDto ResponseClientDto UpdateClientDto"
  },
  "api/MyTrips.Application.Errors.ConflictError.html": {
    "href": "api/MyTrips.Application.Errors.ConflictError.html",
    "title": "Class ConflictError | MyTrips",
    "keywords": "Class ConflictError Namespace MyTrips.Application.Errors Assembly MyTrips.Application.dll public class ConflictError : Error, IError, IReason Inheritance object Error ConflictError Implements IError IReason Inherited Members Error.CausedBy(IError) Error.CausedBy(Exception) Error.CausedBy(string, Exception) Error.CausedBy(string) Error.CausedBy(IEnumerable<IError>) Error.CausedBy(IEnumerable<string>) Error.WithMetadata(string, object) Error.WithMetadata(Dictionary<string, object>) Error.ToString() Error.Message Error.Metadata Error.Reasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConflictError(string) public ConflictError(string message) Parameters message string"
  },
  "api/MyTrips.Application.Errors.NotFoundError.html": {
    "href": "api/MyTrips.Application.Errors.NotFoundError.html",
    "title": "Class NotFoundError | MyTrips",
    "keywords": "Class NotFoundError Namespace MyTrips.Application.Errors Assembly MyTrips.Application.dll public class NotFoundError : Error, IError, IReason Inheritance object Error NotFoundError Implements IError IReason Inherited Members Error.CausedBy(IError) Error.CausedBy(Exception) Error.CausedBy(string, Exception) Error.CausedBy(string) Error.CausedBy(IEnumerable<IError>) Error.CausedBy(IEnumerable<string>) Error.WithMetadata(string, object) Error.WithMetadata(Dictionary<string, object>) Error.ToString() Error.Message Error.Metadata Error.Reasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotFoundError(string) public NotFoundError(string message) Parameters message string"
  },
  "api/MyTrips.Application.Errors.html": {
    "href": "api/MyTrips.Application.Errors.html",
    "title": "Namespace MyTrips.Application.Errors | MyTrips",
    "keywords": "Namespace MyTrips.Application.Errors Classes ConflictError NotFoundError"
  },
  "api/MyTrips.Application.Interfaces.IAuthService.html": {
    "href": "api/MyTrips.Application.Interfaces.IAuthService.html",
    "title": "Interface IAuthService | MyTrips",
    "keywords": "Interface IAuthService Namespace MyTrips.Application.Interfaces Assembly MyTrips.Application.dll public interface IAuthService Methods GetToken(LoginInfo) string GetToken(LoginInfo loginInfo) Parameters loginInfo LoginInfo Returns string"
  },
  "api/MyTrips.Application.Interfaces.IClientsService.html": {
    "href": "api/MyTrips.Application.Interfaces.IClientsService.html",
    "title": "Interface IClientsService | MyTrips",
    "keywords": "Interface IClientsService Namespace MyTrips.Application.Interfaces Assembly MyTrips.Application.dll public interface IClientsService Methods AddNewClientAsync(CreateClientDto) Task<Result<ResponseClientDto>> AddNewClientAsync(CreateClientDto createClientDto) Parameters createClientDto CreateClientDto Returns Task<Result<ResponseClientDto>> GetClientByIdAsync(int) Task<Result<ResponseClientDto>> GetClientByIdAsync(int id) Parameters id int Returns Task<Result<ResponseClientDto>> GetClientsAsync() Task<Result<IEnumerable<ResponseClientDto>>> GetClientsAsync() Returns Task<Result<IEnumerable<ResponseClientDto>>> GetClientsAsync(ClientParameters) Task<Result<PagedList<ResponseClientDto>>> GetClientsAsync(ClientParameters parameters) Parameters parameters ClientParameters Returns Task<Result<PagedList<ResponseClientDto>>> RemoveClientAsync(int) Task<Result> RemoveClientAsync(int id) Parameters id int Returns Task<Result> UpdateClientAsync(UpdateClientDto) Task<Result<ResponseClientDto>> UpdateClientAsync(UpdateClientDto updateClientDto) Parameters updateClientDto UpdateClientDto Returns Task<Result<ResponseClientDto>>"
  },
  "api/MyTrips.Application.Interfaces.html": {
    "href": "api/MyTrips.Application.Interfaces.html",
    "title": "Namespace MyTrips.Application.Interfaces | MyTrips",
    "keywords": "Namespace MyTrips.Application.Interfaces Interfaces IAuthService IClientsService"
  },
  "api/MyTrips.Application.Mappings.Converters.PagedListTypeConverter-2.html": {
    "href": "api/MyTrips.Application.Mappings.Converters.PagedListTypeConverter-2.html",
    "title": "Class PagedListTypeConverter<TSource, TDestination> | MyTrips",
    "keywords": "Class PagedListTypeConverter<TSource, TDestination> Namespace MyTrips.Application.Mappings.Converters Assembly MyTrips.Application.dll public class PagedListTypeConverter<TSource, TDestination> : ITypeConverter<PagedList<TSource>, PagedList<TDestination>> Type Parameters TSource TDestination Inheritance object PagedListTypeConverter<TSource, TDestination> Implements ITypeConverter<PagedList<TSource>, PagedList<TDestination>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Convert(PagedList<TSource>, PagedList<TDestination>, ResolutionContext) Performs conversion from source to destination type public PagedList<TDestination> Convert(PagedList<TSource> source, PagedList<TDestination> destination, ResolutionContext context) Parameters source PagedList<TSource> Source object destination PagedList<TDestination> Destination object context ResolutionContext Resolution context Returns PagedList<TDestination> Destination object"
  },
  "api/MyTrips.Application.Mappings.Converters.html": {
    "href": "api/MyTrips.Application.Mappings.Converters.html",
    "title": "Namespace MyTrips.Application.Mappings.Converters | MyTrips",
    "keywords": "Namespace MyTrips.Application.Mappings.Converters Classes PagedListTypeConverter<TSource, TDestination>"
  },
  "api/MyTrips.Application.Mappings.DtoToDomainMappingProfile.html": {
    "href": "api/MyTrips.Application.Mappings.DtoToDomainMappingProfile.html",
    "title": "Class DtoToDomainMappingProfile | MyTrips",
    "keywords": "Class DtoToDomainMappingProfile Namespace MyTrips.Application.Mappings Assembly MyTrips.Application.dll public class DtoToDomainMappingProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile DtoToDomainMappingProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DtoToDomainMappingProfile() public DtoToDomainMappingProfile()"
  },
  "api/MyTrips.Application.Mappings.html": {
    "href": "api/MyTrips.Application.Mappings.html",
    "title": "Namespace MyTrips.Application.Mappings | MyTrips",
    "keywords": "Namespace MyTrips.Application.Mappings Classes DtoToDomainMappingProfile"
  },
  "api/MyTrips.Application.Services.AuthService.html": {
    "href": "api/MyTrips.Application.Services.AuthService.html",
    "title": "Class AuthService | MyTrips",
    "keywords": "Class AuthService Namespace MyTrips.Application.Services Assembly MyTrips.Application.dll public class AuthService : IAuthService Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(IConfiguration) public AuthService(IConfiguration configuration) Parameters configuration IConfiguration Methods GetToken(LoginInfo) public string GetToken(LoginInfo loginInfo) Parameters loginInfo LoginInfo Returns string"
  },
  "api/MyTrips.Application.Services.ClientsService.html": {
    "href": "api/MyTrips.Application.Services.ClientsService.html",
    "title": "Class ClientsService | MyTrips",
    "keywords": "Class ClientsService Namespace MyTrips.Application.Services Assembly MyTrips.Application.dll public class ClientsService : IClientsService Inheritance object ClientsService Implements IClientsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientsService(IMapper, IClientsRepository) public ClientsService(IMapper mapper, IClientsRepository clientsRepository) Parameters mapper IMapper clientsRepository IClientsRepository Methods AddNewClientAsync(CreateClientDto) public Task<Result<ResponseClientDto>> AddNewClientAsync(CreateClientDto createClientDto) Parameters createClientDto CreateClientDto Returns Task<Result<ResponseClientDto>> GetClientByIdAsync(int) public Task<Result<ResponseClientDto>> GetClientByIdAsync(int id) Parameters id int Returns Task<Result<ResponseClientDto>> GetClientsAsync() public Task<Result<IEnumerable<ResponseClientDto>>> GetClientsAsync() Returns Task<Result<IEnumerable<ResponseClientDto>>> GetClientsAsync(ClientParameters) public Task<Result<PagedList<ResponseClientDto>>> GetClientsAsync(ClientParameters parameters) Parameters parameters ClientParameters Returns Task<Result<PagedList<ResponseClientDto>>> RemoveClientAsync(int) public Task<Result> RemoveClientAsync(int id) Parameters id int Returns Task<Result> UpdateClientAsync(UpdateClientDto) public Task<Result<ResponseClientDto>> UpdateClientAsync(UpdateClientDto updateClientDto) Parameters updateClientDto UpdateClientDto Returns Task<Result<ResponseClientDto>>"
  },
  "api/MyTrips.Application.Services.html": {
    "href": "api/MyTrips.Application.Services.html",
    "title": "Namespace MyTrips.Application.Services | MyTrips",
    "keywords": "Namespace MyTrips.Application.Services Classes AuthService ClientsService"
  },
  "api/MyTrips.Application.Validators.ClientValidator.html": {
    "href": "api/MyTrips.Application.Validators.ClientValidator.html",
    "title": "Class ClientValidator | MyTrips",
    "keywords": "Class ClientValidator Namespace MyTrips.Application.Validators Assembly MyTrips.Application.dll public class ClientValidator : AbstractValidator<Client>, IValidator<Client>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Client> ClientValidator Implements IValidator<Client> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Client>.Validate(Client) AbstractValidator<Client>.ValidateAsync(Client, CancellationToken) AbstractValidator<Client>.Validate(ValidationContext<Client>) AbstractValidator<Client>.ValidateAsync(ValidationContext<Client>, CancellationToken) AbstractValidator<Client>.CreateDescriptor() AbstractValidator<Client>.RuleFor<TProperty>(Expression<Func<Client, TProperty>>) AbstractValidator<Client>.Transform<TProperty, TTransformed>(Expression<Func<Client, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Client>.Transform<TProperty, TTransformed>(Expression<Func<Client, TProperty>>, Func<Client, TProperty, TTransformed>) AbstractValidator<Client>.RuleForEach<TElement>(Expression<Func<Client, IEnumerable<TElement>>>) AbstractValidator<Client>.TransformForEach<TElement, TTransformed>(Expression<Func<Client, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Client>.TransformForEach<TElement, TTransformed>(Expression<Func<Client, IEnumerable<TElement>>>, Func<Client, TElement, TTransformed>) AbstractValidator<Client>.RuleSet(string, Action) AbstractValidator<Client>.When(Func<Client, bool>, Action) AbstractValidator<Client>.When(Func<Client, ValidationContext<Client>, bool>, Action) AbstractValidator<Client>.Unless(Func<Client, bool>, Action) AbstractValidator<Client>.Unless(Func<Client, ValidationContext<Client>, bool>, Action) AbstractValidator<Client>.WhenAsync(Func<Client, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.WhenAsync(Func<Client, ValidationContext<Client>, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.UnlessAsync(Func<Client, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.UnlessAsync(Func<Client, ValidationContext<Client>, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.Include(IValidator<Client>) AbstractValidator<Client>.Include<TValidator>(Func<Client, TValidator>) AbstractValidator<Client>.GetEnumerator() AbstractValidator<Client>.EnsureInstanceNotNull(object) AbstractValidator<Client>.PreValidate(ValidationContext<Client>, ValidationResult) AbstractValidator<Client>.RaiseValidationException(ValidationContext<Client>, ValidationResult) AbstractValidator<Client>.OnRuleAdded(IValidationRule<Client>) AbstractValidator<Client>.CascadeMode AbstractValidator<Client>.ClassLevelCascadeMode AbstractValidator<Client>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientValidator() public ClientValidator()"
  },
  "api/MyTrips.Application.Validators.html": {
    "href": "api/MyTrips.Application.Validators.html",
    "title": "Namespace MyTrips.Application.Validators | MyTrips",
    "keywords": "Namespace MyTrips.Application.Validators Classes ClientValidator"
  },
  "api/MyTrips.CrossCutting.IoC.html": {
    "href": "api/MyTrips.CrossCutting.IoC.html",
    "title": "Class IoC | MyTrips",
    "keywords": "Class IoC Namespace MyTrips.CrossCutting Assembly MyTrips.CrossCutting.dll public static class IoC Inheritance object IoC Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddInfrastructure(IServiceCollection, IConfiguration) public static IServiceCollection AddInfrastructure(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration Returns IServiceCollection"
  },
  "api/MyTrips.CrossCutting.html": {
    "href": "api/MyTrips.CrossCutting.html",
    "title": "Namespace MyTrips.CrossCutting | MyTrips",
    "keywords": "Namespace MyTrips.CrossCutting Classes IoC"
  },
  "api/MyTrips.Domain.Entities.Client.html": {
    "href": "api/MyTrips.Domain.Entities.Client.html",
    "title": "Class Client | MyTrips",
    "keywords": "Class Client Namespace MyTrips.Domain.Entities Assembly MyTrips.Domain.dll public class Client Inheritance object Client Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Client() public Client() Client(int, string, string) public Client(int id, string name, string email) Parameters id int name string email string Client(string, string) public Client(string name, string email) Parameters name string email string Properties Email public string Email { get; set; } Property Value string Id public int Id { get; set; } Property Value int Name public string Name { get; set; } Property Value string"
  },
  "api/MyTrips.Domain.Entities.LoginInfo.html": {
    "href": "api/MyTrips.Domain.Entities.LoginInfo.html",
    "title": "Class LoginInfo | MyTrips",
    "keywords": "Class LoginInfo Namespace MyTrips.Domain.Entities Assembly MyTrips.Domain.dll public class LoginInfo Inheritance object LoginInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Password public string Password { get; set; } Property Value string Username public string Username { get; set; } Property Value string"
  },
  "api/MyTrips.Domain.Entities.html": {
    "href": "api/MyTrips.Domain.Entities.html",
    "title": "Namespace MyTrips.Domain.Entities | MyTrips",
    "keywords": "Namespace MyTrips.Domain.Entities Classes Client LoginInfo"
  },
  "api/MyTrips.Domain.Interfaces.IClientsRepository.html": {
    "href": "api/MyTrips.Domain.Interfaces.IClientsRepository.html",
    "title": "Interface IClientsRepository | MyTrips",
    "keywords": "Interface IClientsRepository Namespace MyTrips.Domain.Interfaces Assembly MyTrips.Domain.dll public interface IClientsRepository Methods AddAsync(Client) Task<int> AddAsync(Client client) Parameters client Client Returns Task<int> DeleteAsync(int) Task<int> DeleteAsync(int id) Parameters id int Returns Task<int> FindAsync(Expression<Func<Client, bool>>) Task<IEnumerable<Client>> FindAsync(Expression<Func<Client, bool>> predicate) Parameters predicate Expression<Func<Client, bool>> Returns Task<IEnumerable<Client>> GetAsync() Task<IEnumerable<Client>> GetAsync() Returns Task<IEnumerable<Client>> GetAsync(int) Task<Client?> GetAsync(int id) Parameters id int Returns Task<Client> GetAsync(int, int) Task<PagedList<Client>> GetAsync(int pageIndex, int rowsPerBatch) Parameters pageIndex int rowsPerBatch int Returns Task<PagedList<Client>> UpdateAsync(Client) Task<Client?> UpdateAsync(Client client) Parameters client Client Returns Task<Client>"
  },
  "api/MyTrips.Domain.Interfaces.html": {
    "href": "api/MyTrips.Domain.Interfaces.html",
    "title": "Namespace MyTrips.Domain.Interfaces | MyTrips",
    "keywords": "Namespace MyTrips.Domain.Interfaces Interfaces IClientsRepository"
  },
  "api/MyTrips.Domain.ValueObjects.ClientParameters.html": {
    "href": "api/MyTrips.Domain.ValueObjects.ClientParameters.html",
    "title": "Class ClientParameters | MyTrips",
    "keywords": "Class ClientParameters Namespace MyTrips.Domain.ValueObjects Assembly MyTrips.Domain.dll public class ClientParameters Inheritance object ClientParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PageIndex public int PageIndex { get; set; } Property Value int PageSize public int PageSize { get; set; } Property Value int"
  },
  "api/MyTrips.Domain.ValueObjects.PagedList-1.html": {
    "href": "api/MyTrips.Domain.ValueObjects.PagedList-1.html",
    "title": "Class PagedList<T> | MyTrips",
    "keywords": "Class PagedList<T> Namespace MyTrips.Domain.ValueObjects Assembly MyTrips.Domain.dll public class PagedList<T> : List<T>, IList<T>, ICollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable Type Parameters T Inheritance object List<T> PagedList<T> Implements IList<T> ICollection<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IList ICollection IEnumerable Inherited Members List<T>.Add(T) List<T>.AddRange(IEnumerable<T>) List<T>.AsReadOnly() List<T>.BinarySearch(int, int, T, IComparer<T>) List<T>.BinarySearch(T) List<T>.BinarySearch(T, IComparer<T>) List<T>.Clear() List<T>.Contains(T) List<T>.ConvertAll<TOutput>(Converter<T, TOutput>) List<T>.CopyTo(int, T[], int, int) List<T>.CopyTo(T[]) List<T>.CopyTo(T[], int) List<T>.EnsureCapacity(int) List<T>.Exists(Predicate<T>) List<T>.Find(Predicate<T>) List<T>.FindAll(Predicate<T>) List<T>.FindIndex(int, int, Predicate<T>) List<T>.FindIndex(int, Predicate<T>) List<T>.FindIndex(Predicate<T>) List<T>.FindLast(Predicate<T>) List<T>.FindLastIndex(int, int, Predicate<T>) List<T>.FindLastIndex(int, Predicate<T>) List<T>.FindLastIndex(Predicate<T>) List<T>.ForEach(Action<T>) List<T>.GetEnumerator() List<T>.GetRange(int, int) List<T>.IndexOf(T) List<T>.IndexOf(T, int) List<T>.IndexOf(T, int, int) List<T>.Insert(int, T) List<T>.InsertRange(int, IEnumerable<T>) List<T>.LastIndexOf(T) List<T>.LastIndexOf(T, int) List<T>.LastIndexOf(T, int, int) List<T>.Remove(T) List<T>.RemoveAll(Predicate<T>) List<T>.RemoveAt(int) List<T>.RemoveRange(int, int) List<T>.Reverse() List<T>.Reverse(int, int) List<T>.Slice(int, int) List<T>.Sort() List<T>.Sort(IComparer<T>) List<T>.Sort(Comparison<T>) List<T>.Sort(int, int, IComparer<T>) List<T>.ToArray() List<T>.TrimExcess() List<T>.TrueForAll(Predicate<T>) List<T>.Capacity List<T>.Count List<T>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PagedList(List<T>, int, int, int) public PagedList(List<T> items, int pageIndex, int pageCount, int pageSize) Parameters items List<T> pageIndex int pageCount int pageSize int Properties CurrentPage public int CurrentPage { get; } Property Value int HasNextPage public bool HasNextPage { get; } Property Value bool HasPreviousPage public bool HasPreviousPage { get; } Property Value bool PageSize public int PageSize { get; } Property Value int TotalPages public int TotalPages { get; } Property Value int Methods ToPagedList(IQueryable<T>, int, int) public static PagedList<T> ToPagedList(IQueryable<T> source, int pageIndex, int pageSize) Parameters source IQueryable<T> pageIndex int pageSize int Returns PagedList<T>"
  },
  "api/MyTrips.Domain.ValueObjects.html": {
    "href": "api/MyTrips.Domain.ValueObjects.html",
    "title": "Namespace MyTrips.Domain.ValueObjects | MyTrips",
    "keywords": "Namespace MyTrips.Domain.ValueObjects Classes ClientParameters PagedList<T>"
  },
  "api/MyTrips.Infrastructure.Repositories.ClientsRepository.html": {
    "href": "api/MyTrips.Infrastructure.Repositories.ClientsRepository.html",
    "title": "Class ClientsRepository | MyTrips",
    "keywords": "Class ClientsRepository Namespace MyTrips.Infrastructure.Repositories Assembly MyTrips.Infrastructure.dll public class ClientsRepository : IClientsRepository Inheritance object ClientsRepository Implements IClientsRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientsRepository(IConfiguration) public ClientsRepository(IConfiguration configuration) Parameters configuration IConfiguration Properties ConnectionString public string ConnectionString { get; } Property Value string Methods AddAsync(Client) public Task<int> AddAsync(Client client) Parameters client Client Returns Task<int> DeleteAsync(int) public Task<int> DeleteAsync(int id) Parameters id int Returns Task<int> FindAsync(Expression<Func<Client, bool>>) public Task<IEnumerable<Client>> FindAsync(Expression<Func<Client, bool>> predicate) Parameters predicate Expression<Func<Client, bool>> Returns Task<IEnumerable<Client>> GetAsync() public Task<IEnumerable<Client>> GetAsync() Returns Task<IEnumerable<Client>> GetAsync(int) public Task<Client?> GetAsync(int id) Parameters id int Returns Task<Client> GetAsync(int, int) public Task<PagedList<Client>> GetAsync(int pageIndex, int rowsPerBatch) Parameters pageIndex int rowsPerBatch int Returns Task<PagedList<Client>> UpdateAsync(Client) public Task<Client?> UpdateAsync(Client client) Parameters client Client Returns Task<Client>"
  },
  "api/MyTrips.Infrastructure.Repositories.html": {
    "href": "api/MyTrips.Infrastructure.Repositories.html",
    "title": "Namespace MyTrips.Infrastructure.Repositories | MyTrips",
    "keywords": "Namespace MyTrips.Infrastructure.Repositories Classes ClientsRepository"
  },
  "api/MyTrips.IntegrationTests.Collections.ClientsManagementCollection.html": {
    "href": "api/MyTrips.IntegrationTests.Collections.ClientsManagementCollection.html",
    "title": "Class ClientsManagementCollection | MyTrips",
    "keywords": "Class ClientsManagementCollection Namespace MyTrips.IntegrationTests.Collections Assembly MyTrips.IntegrationTests.dll [CollectionDefinition(\"ClientsManagementIntegration\")] public class ClientsManagementCollection : ICollectionFixture<ClientsManagementFixture> Inheritance object ClientsManagementCollection Implements ICollectionFixture<ClientsManagementFixture> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MyTrips.IntegrationTests.Collections.html": {
    "href": "api/MyTrips.IntegrationTests.Collections.html",
    "title": "Namespace MyTrips.IntegrationTests.Collections | MyTrips",
    "keywords": "Namespace MyTrips.IntegrationTests.Collections Classes ClientsManagementCollection"
  },
  "api/MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.html": {
    "href": "api/MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.html",
    "title": "Class FluentAssertionsExtensions | MyTrips",
    "keywords": "Class FluentAssertionsExtensions Namespace MyTrips.IntegrationTests.Extensions Assembly MyTrips.IntegrationTests.dll public static class FluentAssertionsExtensions Inheritance object FluentAssertionsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HaveJsonContentType(HttpResponseMessageAssertions) public static AndConstraint<HttpResponseMessageAssertions> HaveJsonContentType(this HttpResponseMessageAssertions assertions) Parameters assertions HttpResponseMessageAssertions Returns AndConstraint<HttpResponseMessageAssertions> HaveProblemContentType(HttpResponseMessageAssertions) public static AndConstraint<HttpResponseMessageAssertions> HaveProblemContentType(this HttpResponseMessageAssertions assertions) Parameters assertions HttpResponseMessageAssertions Returns AndConstraint<HttpResponseMessageAssertions>"
  },
  "api/MyTrips.IntegrationTests.Extensions.HttpExtensions.html": {
    "href": "api/MyTrips.IntegrationTests.Extensions.HttpExtensions.html",
    "title": "Class HttpExtensions | MyTrips",
    "keywords": "Class HttpExtensions Namespace MyTrips.IntegrationTests.Extensions Assembly MyTrips.IntegrationTests.dll public static class HttpExtensions Inheritance object HttpExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeserializedContentAsync<T>(HttpResponseMessage) public static Task<T?> DeserializedContentAsync<T>(this HttpResponseMessage response) Parameters response HttpResponseMessage Returns Task<T> Type Parameters T"
  },
  "api/MyTrips.IntegrationTests.Extensions.html": {
    "href": "api/MyTrips.IntegrationTests.Extensions.html",
    "title": "Namespace MyTrips.IntegrationTests.Extensions | MyTrips",
    "keywords": "Namespace MyTrips.IntegrationTests.Extensions Classes FluentAssertionsExtensions HttpExtensions"
  },
  "api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html": {
    "href": "api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html",
    "title": "Class ClientsManagementFixture | MyTrips",
    "keywords": "Class ClientsManagementFixture Namespace MyTrips.IntegrationTests.Fixtures Assembly MyTrips.IntegrationTests.dll public sealed class ClientsManagementFixture : IDisposable Inheritance object ClientsManagementFixture Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ClientsManagementFixture() public ClientsManagementFixture() Fields ClientStub public Client ClientStub Field Value Client CreateClientDtoStub public CreateClientDto CreateClientDtoStub Field Value CreateClientDto Endpoint public string Endpoint Field Value string Factory public WebApplicationFactory<Program> Factory Field Value WebApplicationFactory<Program> ResponseClientDtoStub public ResponseClientDto ResponseClientDtoStub Field Value ResponseClientDto UpdateClientDtoStub public UpdateClientDto UpdateClientDtoStub Field Value UpdateClientDto Properties DefaultHttpClient public HttpClient DefaultHttpClient { get; } Property Value HttpClient Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetAuthorizationHeader() public AuthenticationHeaderValue GetAuthorizationHeader() Returns AuthenticationHeaderValue"
  },
  "api/MyTrips.IntegrationTests.Fixtures.html": {
    "href": "api/MyTrips.IntegrationTests.Fixtures.html",
    "title": "Namespace MyTrips.IntegrationTests.Fixtures | MyTrips",
    "keywords": "Namespace MyTrips.IntegrationTests.Fixtures Classes ClientsManagementFixture"
  },
  "api/MyTrips.IntegrationTests.Handlers.LoggingHandler.html": {
    "href": "api/MyTrips.IntegrationTests.Handlers.LoggingHandler.html",
    "title": "Class LoggingHandler | MyTrips",
    "keywords": "Class LoggingHandler Namespace MyTrips.IntegrationTests.Handlers Assembly MyTrips.IntegrationTests.dll public class LoggingHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler LoggingHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request to the inner handler to send to the server as an asynchronous operation. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message to send to the server. cancellationToken CancellationToken A cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. Exceptions ArgumentNullException The request was null."
  },
  "api/MyTrips.IntegrationTests.Handlers.html": {
    "href": "api/MyTrips.IntegrationTests.Handlers.html",
    "title": "Namespace MyTrips.IntegrationTests.Handlers | MyTrips",
    "keywords": "Namespace MyTrips.IntegrationTests.Handlers Classes LoggingHandler"
  },
  "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html": {
    "href": "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html",
    "title": "Class CreateClientIntegrationTests | MyTrips",
    "keywords": "Class CreateClientIntegrationTests Namespace MyTrips.IntegrationTests.UseCases.ClientsManagement Assembly MyTrips.IntegrationTests.dll [Collection(\"ClientsManagementIntegration\")] public class CreateClientIntegrationTests Inheritance object CreateClientIntegrationTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateClientIntegrationTests(ClientsManagementFixture) public CreateClientIntegrationTests(ClientsManagementFixture fixture) Parameters fixture ClientsManagementFixture Methods GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain() Returns Task GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent() Returns Task GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(string) [Theory] [Trait(\"Category\", \"Integration\")] [ClassData(typeof(InvalidEmailClassData))] public Task GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(string email) Parameters email string Returns Task GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string) [Theory] [Trait(\"Category\", \"Integration\")] [ClassData(typeof(InvalidEmailClassData))] public Task GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string email) Parameters email string Returns Task GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(string) [Theory] [Trait(\"Category\", \"Integration\")] [ClassData(typeof(InvalidStringClassData))] public Task GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(string name) Parameters name string Returns Task GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string) [Theory] [Trait(\"Category\", \"Integration\")] [ClassData(typeof(InvalidStringClassData))] public Task GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string name) Parameters name string Returns Task GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent() Returns Task"
  },
  "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html": {
    "href": "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html",
    "title": "Class DeleteClientIntegrationTests | MyTrips",
    "keywords": "Class DeleteClientIntegrationTests Namespace MyTrips.IntegrationTests.UseCases.ClientsManagement Assembly MyTrips.IntegrationTests.dll [Collection(\"ClientsManagementIntegration\")] public class DeleteClientIntegrationTests Inheritance object DeleteClientIntegrationTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteClientIntegrationTests(ClientsManagementFixture) public DeleteClientIntegrationTests(ClientsManagementFixture fixture) Parameters fixture ClientsManagementFixture Methods GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase() Returns Task GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent() Returns Task GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader() Returns Task GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader() Returns Task"
  },
  "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html": {
    "href": "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html",
    "title": "Class GetClientIntegrationTests | MyTrips",
    "keywords": "Class GetClientIntegrationTests Namespace MyTrips.IntegrationTests.UseCases.ClientsManagement Assembly MyTrips.IntegrationTests.dll [Collection(\"ClientsManagementIntegration\")] public class GetClientIntegrationTests Inheritance object GetClientIntegrationTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetClientIntegrationTests(ClientsManagementFixture) public GetClientIntegrationTests(ClientsManagementFixture fixture) Parameters fixture ClientsManagementFixture Methods GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent() Returns Task GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent() Returns Task GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent() Returns Task GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent() Returns Task"
  },
  "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html": {
    "href": "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html",
    "title": "Class UpdateClientIntegrationTests | MyTrips",
    "keywords": "Class UpdateClientIntegrationTests Namespace MyTrips.IntegrationTests.UseCases.ClientsManagement Assembly MyTrips.IntegrationTests.dll [Collection(\"ClientsManagementIntegration\")] public class UpdateClientIntegrationTests Inheritance object UpdateClientIntegrationTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateClientIntegrationTests(ClientsManagementFixture) public UpdateClientIntegrationTests(ClientsManagementFixture fixture) Parameters fixture ClientsManagementFixture Methods GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent() Returns Task GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string) [Theory] [Trait(\"Category\", \"Integration\")] [ClassData(typeof(InvalidEmailClassData))] public Task GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string email) Parameters email string Returns Task GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent() Returns Task GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string) [Theory] [Trait(\"Category\", \"Integration\")] [ClassData(typeof(InvalidStringClassData))] public Task GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string name) Parameters name string Returns Task GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent() Returns Task GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent() [Fact] [Trait(\"Category\", \"Integration\")] public Task GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent() Returns Task"
  },
  "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.html": {
    "href": "api/MyTrips.IntegrationTests.UseCases.ClientsManagement.html",
    "title": "Namespace MyTrips.IntegrationTests.UseCases.ClientsManagement | MyTrips",
    "keywords": "Namespace MyTrips.IntegrationTests.UseCases.ClientsManagement Classes CreateClientIntegrationTests DeleteClientIntegrationTests GetClientIntegrationTests UpdateClientIntegrationTests"
  },
  "api/MyTrips.Presentation.Controllers.AuthController.html": {
    "href": "api/MyTrips.Presentation.Controllers.AuthController.html",
    "title": "Class AuthController | MyTrips",
    "keywords": "Class AuthController Namespace MyTrips.Presentation.Controllers Assembly MyTrips.Presentation.dll [Route(\"api/[controller]\")] [EnableCors] [EnableRateLimiting(\"default\")] [ApiController] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IAuthService) public AuthController(IAuthService authService) Parameters authService IAuthService Methods Login(LoginInfo) Login [HttpPost(\"Login\")] [AllowAnonymous] [ProducesResponseType<IEnumerable<ResponseClientDto>>(200)] [ProducesResponseType<ErrorDetails>(401)] [ProducesResponseType<ErrorDetails>(500)] public IActionResult Login(LoginInfo loginInfo) Parameters loginInfo LoginInfo The login information Returns IActionResult The token Remarks Sample request: POST /Login { \"username\": \"admin\", \"password\": \"admin\" }"
  },
  "api/MyTrips.Presentation.Controllers.ClientsController.html": {
    "href": "api/MyTrips.Presentation.Controllers.ClientsController.html",
    "title": "Class ClientsController | MyTrips",
    "keywords": "Class ClientsController Namespace MyTrips.Presentation.Controllers Assembly MyTrips.Presentation.dll [Route(\"api/[controller]\")] [ApiController] [EnableCors] [EnableRateLimiting(\"default\")] [Authorize(AuthenticationSchemes = \"JwtScheme\")] public class ClientsController : ControllerBase Inheritance object ControllerBase ClientsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientsController(IClientsService, IValidator<Client>) public ClientsController(IClientsService clientsService, IValidator<Client> validator) Parameters clientsService IClientsService validator IValidator<Client> Methods Delete(int) Delete a client [HttpDelete(\"{id:int}\")] [ProducesResponseType(204)] [ProducesResponseType<ErrorDetails>(400)] [ProducesResponseType(401)] [ProducesResponseType<ErrorDetails>(404)] [ProducesResponseType<ErrorDetails>(409)] [ProducesResponseType(429)] [ProducesResponseType<ErrorDetails>(500)] public Task<ActionResult> Delete(int id) Parameters id int The id of the client to delete Returns Task<ActionResult> No content Remarks Sample request: DELETE /api/clients/1 Get(ClientParameters) Get all clients [HttpGet] [ProducesResponseType<PagedList<ResponseClientDto>>(200)] [ProducesResponseType<ErrorDetails>(500)] public Task<ActionResult> Get(ClientParameters clientParameters) Parameters clientParameters ClientParameters Returns Task<ActionResult> A list of all clients Remarks Sample request: GET /api/clients/ Get(int) Get a client by id [HttpGet(\"{id:int}\")] [ProducesResponseType<ResponseClientDto>(200)] [ProducesResponseType<ErrorDetails>(400)] [ProducesResponseType<ErrorDetails>(404)] [ProducesResponseType(401)] [ProducesResponseType(429)] [ProducesResponseType<ErrorDetails>(500)] public Task<ActionResult> Get(int id) Parameters id int The id of the client to get Returns Task<ActionResult> A client with the specified id Remarks Sample request: GET /api/clients/1 Post(CreateClientDto) Create a new client [HttpPost] [ProducesResponseType<ResponseClientDto>(201)] [ProducesResponseType<ErrorDetails>(400)] [ProducesResponseType(401)] [ProducesResponseType<ErrorDetails>(409)] [ProducesResponseType(429)] [ProducesResponseType<ErrorDetails>(500)] [Consumes(\"application/json\", new string[] { })] public Task<ActionResult> Post(CreateClientDto createClientDto) Parameters createClientDto CreateClientDto The data to create a new client Returns Task<ActionResult> The newly created client Remarks Sample request: NOTE: The e-mail must be unique. POST /api/clients { \"name\": \"John Doe\", \"email\": \"john.doe@example.com\" } Put(UpdateClientDto) Update a client [HttpPut] [ProducesResponseType<ResponseClientDto>(200)] [ProducesResponseType<ErrorDetails>(400)] [ProducesResponseType(401)] [ProducesResponseType<ErrorDetails>(404)] [ProducesResponseType<ErrorDetails>(409)] [ProducesResponseType(429)] [ProducesResponseType<ErrorDetails>(500)] [Consumes(\"application/json\", new string[] { })] public Task<ActionResult> Put(UpdateClientDto updateClientDto) Parameters updateClientDto UpdateClientDto The data to update a client Returns Task<ActionResult> The updated client Remarks Sample request: PUT /api/clients { \"id\": 1, \"name\": \"Jane Doe\", \"email\": \"jane.doe@example.com\" }"
  },
  "api/MyTrips.Presentation.Controllers.html": {
    "href": "api/MyTrips.Presentation.Controllers.html",
    "title": "Namespace MyTrips.Presentation.Controllers | MyTrips",
    "keywords": "Namespace MyTrips.Presentation.Controllers Classes AuthController ClientsController"
  },
  "api/MyTrips.Presentation.Errors.BadRequestErrorDetails.html": {
    "href": "api/MyTrips.Presentation.Errors.BadRequestErrorDetails.html",
    "title": "Class BadRequestErrorDetails | MyTrips",
    "keywords": "Class BadRequestErrorDetails Namespace MyTrips.Presentation.Errors Assembly MyTrips.Presentation.dll public class BadRequestErrorDetails : ErrorDetails Inheritance object ErrorDetails BadRequestErrorDetails Inherited Members ErrorDetails.JsonSettings ErrorDetails.Type ErrorDetails.Title ErrorDetails.Status ErrorDetails.Detail ErrorDetails.Errors ErrorDetails.Instance ErrorDetails.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BadRequestErrorDetails(HttpContext, Result, string) public BadRequestErrorDetails(HttpContext context, Result validationResult, string detail = \"The server cannot process the request due to a client error. This could be due to a malformed request syntax, invalid request message framing, or deceptive request routing. Please check the request data and ensure it follows the correct format and try again.\") Parameters context HttpContext validationResult Result detail string"
  },
  "api/MyTrips.Presentation.Errors.ConflictErrorDetails.html": {
    "href": "api/MyTrips.Presentation.Errors.ConflictErrorDetails.html",
    "title": "Class ConflictErrorDetails | MyTrips",
    "keywords": "Class ConflictErrorDetails Namespace MyTrips.Presentation.Errors Assembly MyTrips.Presentation.dll public class ConflictErrorDetails : ErrorDetails Inheritance object ErrorDetails ConflictErrorDetails Inherited Members ErrorDetails.JsonSettings ErrorDetails.Type ErrorDetails.Title ErrorDetails.Status ErrorDetails.Detail ErrorDetails.Errors ErrorDetails.Instance ErrorDetails.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConflictErrorDetails(HttpContext, Result, string) public ConflictErrorDetails(HttpContext context, Result validationResult, string detail = \"This operation cannot be executed because there is a conflict with the current state of the resource. This may be due to a conflicting update or an existing resource that conflicts with the requested operation. Please ensure that there are no conflicting changes or resources and try again.\") Parameters context HttpContext validationResult Result detail string"
  },
  "api/MyTrips.Presentation.Errors.CustomError.html": {
    "href": "api/MyTrips.Presentation.Errors.CustomError.html",
    "title": "Class CustomError | MyTrips",
    "keywords": "Class CustomError Namespace MyTrips.Presentation.Errors Assembly MyTrips.Presentation.dll public class CustomError : IError, IReason Inheritance object CustomError Implements IError IReason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Message public string Message { get; set; } Property Value string Metadata [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Dictionary<string, object> Reasons Reasons of the error [JsonIgnore] public List<IError> Reasons { get; set; } Property Value List<IError>"
  },
  "api/MyTrips.Presentation.Errors.ErrorDetails.html": {
    "href": "api/MyTrips.Presentation.Errors.ErrorDetails.html",
    "title": "Class ErrorDetails | MyTrips",
    "keywords": "Class ErrorDetails Namespace MyTrips.Presentation.Errors Assembly MyTrips.Presentation.dll public class ErrorDetails Inheritance object ErrorDetails Derived BadRequestErrorDetails ConflictErrorDetails InternalServerErrorDetails NotFoundErrorDetails UnauthorizedErrorDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields JsonSettings protected static readonly JsonSerializerSettings JsonSettings Field Value JsonSerializerSettings Properties Detail public string? Detail { get; set; } Property Value string Errors public string[]? Errors { get; set; } Property Value string[] Instance public string Instance { get; set; } Property Value string Status public int Status { get; set; } Property Value int Title public string? Title { get; set; } Property Value string Type public string? Type { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/MyTrips.Presentation.Errors.InternalServerErrorDetails.html": {
    "href": "api/MyTrips.Presentation.Errors.InternalServerErrorDetails.html",
    "title": "Class InternalServerErrorDetails | MyTrips",
    "keywords": "Class InternalServerErrorDetails Namespace MyTrips.Presentation.Errors Assembly MyTrips.Presentation.dll public class InternalServerErrorDetails : ErrorDetails Inheritance object ErrorDetails InternalServerErrorDetails Inherited Members ErrorDetails.JsonSettings ErrorDetails.Type ErrorDetails.Title ErrorDetails.Status ErrorDetails.Detail ErrorDetails.Errors ErrorDetails.Instance ErrorDetails.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InternalServerErrorDetails(HttpContext, string) public InternalServerErrorDetails(HttpContext context, string detail = \"The server encountered an unexpected condition that prevented it from fulfilling the request. This is typically a temporary issue, and our team is working to resolve it as quickly as possible. Please try again later. If the problem persists, contact support for further assistance.\") Parameters context HttpContext detail string"
  },
  "api/MyTrips.Presentation.Errors.NotFoundErrorDetails.html": {
    "href": "api/MyTrips.Presentation.Errors.NotFoundErrorDetails.html",
    "title": "Class NotFoundErrorDetails | MyTrips",
    "keywords": "Class NotFoundErrorDetails Namespace MyTrips.Presentation.Errors Assembly MyTrips.Presentation.dll public class NotFoundErrorDetails : ErrorDetails Inheritance object ErrorDetails NotFoundErrorDetails Inherited Members ErrorDetails.JsonSettings ErrorDetails.Type ErrorDetails.Title ErrorDetails.Status ErrorDetails.Detail ErrorDetails.Errors ErrorDetails.Instance ErrorDetails.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotFoundErrorDetails(HttpContext, Result, string) public NotFoundErrorDetails(HttpContext context, Result validationResult, string detail = \"The server cannot find the requested resource. This may be because the resource or any resources that it depends on does not exist, or the identifier was mistyped. Please check the sent data for errors.\") Parameters context HttpContext validationResult Result detail string"
  },
  "api/MyTrips.Presentation.Errors.UnauthorizedErrorDetails.html": {
    "href": "api/MyTrips.Presentation.Errors.UnauthorizedErrorDetails.html",
    "title": "Class UnauthorizedErrorDetails | MyTrips",
    "keywords": "Class UnauthorizedErrorDetails Namespace MyTrips.Presentation.Errors Assembly MyTrips.Presentation.dll public class UnauthorizedErrorDetails : ErrorDetails Inheritance object ErrorDetails UnauthorizedErrorDetails Inherited Members ErrorDetails.JsonSettings ErrorDetails.Type ErrorDetails.Title ErrorDetails.Status ErrorDetails.Detail ErrorDetails.Errors ErrorDetails.Instance ErrorDetails.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnauthorizedErrorDetails(HttpContext, string) public UnauthorizedErrorDetails(HttpContext context, string detail = \"The credentials provided are invalid or missing. Please check your username and password and try again.\") Parameters context HttpContext detail string"
  },
  "api/MyTrips.Presentation.Errors.html": {
    "href": "api/MyTrips.Presentation.Errors.html",
    "title": "Namespace MyTrips.Presentation.Errors | MyTrips",
    "keywords": "Namespace MyTrips.Presentation.Errors Classes BadRequestErrorDetails ConflictErrorDetails CustomError ErrorDetails InternalServerErrorDetails NotFoundErrorDetails UnauthorizedErrorDetails"
  },
  "api/MyTrips.Presentation.Filters.MediaTypeOperationFilter.html": {
    "href": "api/MyTrips.Presentation.Filters.MediaTypeOperationFilter.html",
    "title": "Class MediaTypeOperationFilter | MyTrips",
    "keywords": "Class MediaTypeOperationFilter Namespace MyTrips.Presentation.Filters Assembly MyTrips.Presentation.dll public class MediaTypeOperationFilter : IOperationFilter Inheritance object MediaTypeOperationFilter Implements IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Apply(OpenApiOperation, OperationFilterContext) public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters operation OpenApiOperation context OperationFilterContext"
  },
  "api/MyTrips.Presentation.Filters.ProblemHeaderFilter.html": {
    "href": "api/MyTrips.Presentation.Filters.ProblemHeaderFilter.html",
    "title": "Class ProblemHeaderFilter | MyTrips",
    "keywords": "Class ProblemHeaderFilter Namespace MyTrips.Presentation.Filters Assembly MyTrips.Presentation.dll public class ProblemHeaderFilter : IActionFilter, IFilterMetadata Inheritance object ProblemHeaderFilter Implements IActionFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnActionExecuted(ActionExecutedContext) Called after the action executes, before the action result. public void OnActionExecuted(ActionExecutedContext context) Parameters context ActionExecutedContext The ActionExecutedContext. OnActionExecuting(ActionExecutingContext) Called before the action executes, after model binding is complete. public void OnActionExecuting(ActionExecutingContext context) Parameters context ActionExecutingContext The ActionExecutingContext."
  },
  "api/MyTrips.Presentation.Filters.SwaggerSchemaFilter.html": {
    "href": "api/MyTrips.Presentation.Filters.SwaggerSchemaFilter.html",
    "title": "Class SwaggerSchemaFilter | MyTrips",
    "keywords": "Class SwaggerSchemaFilter Namespace MyTrips.Presentation.Filters Assembly MyTrips.Presentation.dll public class SwaggerSchemaFilter : ISchemaFilter Inheritance object SwaggerSchemaFilter Implements ISchemaFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Apply(OpenApiSchema, SchemaFilterContext) public void Apply(OpenApiSchema schema, SchemaFilterContext context) Parameters schema OpenApiSchema context SchemaFilterContext"
  },
  "api/MyTrips.Presentation.Filters.html": {
    "href": "api/MyTrips.Presentation.Filters.html",
    "title": "Namespace MyTrips.Presentation.Filters | MyTrips",
    "keywords": "Namespace MyTrips.Presentation.Filters Classes MediaTypeOperationFilter ProblemHeaderFilter SwaggerSchemaFilter"
  },
  "api/MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.html": {
    "href": "api/MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.html",
    "title": "Class ExceptionHandlingMiddleware | MyTrips",
    "keywords": "Class ExceptionHandlingMiddleware Namespace MyTrips.Presentation.Middlewares Assembly MyTrips.Presentation.dll public class ExceptionHandlingMiddleware : IMiddleware Inheritance object ExceptionHandlingMiddleware Implements IMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExceptionHandlingMiddleware(IHostEnvironment) public ExceptionHandlingMiddleware(IHostEnvironment environment) Parameters environment IHostEnvironment Methods InvokeAsync(HttpContext, RequestDelegate) Request handling method. public Task InvokeAsync(HttpContext context, RequestDelegate next) Parameters context HttpContext The HttpContext for the current request. next RequestDelegate The delegate representing the remaining middleware in the request pipeline. Returns Task A Task that represents the execution of this middleware."
  },
  "api/MyTrips.Presentation.Middlewares.html": {
    "href": "api/MyTrips.Presentation.Middlewares.html",
    "title": "Namespace MyTrips.Presentation.Middlewares | MyTrips",
    "keywords": "Namespace MyTrips.Presentation.Middlewares Classes ExceptionHandlingMiddleware"
  },
  "api/MyTrips.Presentation.Validators.InputValidator.html": {
    "href": "api/MyTrips.Presentation.Validators.InputValidator.html",
    "title": "Class InputValidator | MyTrips",
    "keywords": "Class InputValidator Namespace MyTrips.Presentation.Validators Assembly MyTrips.Presentation.dll public class InputValidator : AbstractValidator<Client>, IValidator<Client>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Client> InputValidator Implements IValidator<Client> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Client>.Validate(Client) AbstractValidator<Client>.ValidateAsync(Client, CancellationToken) AbstractValidator<Client>.Validate(ValidationContext<Client>) AbstractValidator<Client>.ValidateAsync(ValidationContext<Client>, CancellationToken) AbstractValidator<Client>.CreateDescriptor() AbstractValidator<Client>.RuleFor<TProperty>(Expression<Func<Client, TProperty>>) AbstractValidator<Client>.Transform<TProperty, TTransformed>(Expression<Func<Client, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Client>.Transform<TProperty, TTransformed>(Expression<Func<Client, TProperty>>, Func<Client, TProperty, TTransformed>) AbstractValidator<Client>.RuleForEach<TElement>(Expression<Func<Client, IEnumerable<TElement>>>) AbstractValidator<Client>.TransformForEach<TElement, TTransformed>(Expression<Func<Client, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Client>.TransformForEach<TElement, TTransformed>(Expression<Func<Client, IEnumerable<TElement>>>, Func<Client, TElement, TTransformed>) AbstractValidator<Client>.RuleSet(string, Action) AbstractValidator<Client>.When(Func<Client, bool>, Action) AbstractValidator<Client>.When(Func<Client, ValidationContext<Client>, bool>, Action) AbstractValidator<Client>.Unless(Func<Client, bool>, Action) AbstractValidator<Client>.Unless(Func<Client, ValidationContext<Client>, bool>, Action) AbstractValidator<Client>.WhenAsync(Func<Client, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.WhenAsync(Func<Client, ValidationContext<Client>, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.UnlessAsync(Func<Client, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.UnlessAsync(Func<Client, ValidationContext<Client>, CancellationToken, Task<bool>>, Action) AbstractValidator<Client>.Include(IValidator<Client>) AbstractValidator<Client>.Include<TValidator>(Func<Client, TValidator>) AbstractValidator<Client>.GetEnumerator() AbstractValidator<Client>.EnsureInstanceNotNull(object) AbstractValidator<Client>.PreValidate(ValidationContext<Client>, ValidationResult) AbstractValidator<Client>.RaiseValidationException(ValidationContext<Client>, ValidationResult) AbstractValidator<Client>.OnRuleAdded(IValidationRule<Client>) AbstractValidator<Client>.CascadeMode AbstractValidator<Client>.ClassLevelCascadeMode AbstractValidator<Client>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ValidateId(int) public static ValidationResult ValidateId(int id) Parameters id int Returns ValidationResult"
  },
  "api/MyTrips.Presentation.Validators.html": {
    "href": "api/MyTrips.Presentation.Validators.html",
    "title": "Namespace MyTrips.Presentation.Validators | MyTrips",
    "keywords": "Namespace MyTrips.Presentation.Validators Classes InputValidator"
  },
  "api/MyTrips.UnitTest.ClassData.InvalidEmailClassData.html": {
    "href": "api/MyTrips.UnitTest.ClassData.InvalidEmailClassData.html",
    "title": "Class InvalidEmailClassData | MyTrips",
    "keywords": "Class InvalidEmailClassData Namespace MyTrips.UnitTest.ClassData Assembly MyTrips.UnitTest.dll public class InvalidEmailClassData : IEnumerable<object[]>, IEnumerable Inheritance object InvalidEmailClassData Implements IEnumerable<object[]> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<object[]> GetEnumerator() Returns IEnumerator<object[]> An enumerator that can be used to iterate through the collection."
  },
  "api/MyTrips.UnitTest.ClassData.InvalidStringClassData.html": {
    "href": "api/MyTrips.UnitTest.ClassData.InvalidStringClassData.html",
    "title": "Class InvalidStringClassData | MyTrips",
    "keywords": "Class InvalidStringClassData Namespace MyTrips.UnitTest.ClassData Assembly MyTrips.UnitTest.dll public class InvalidStringClassData : IEnumerable<object[]>, IEnumerable Inheritance object InvalidStringClassData Implements IEnumerable<object[]> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<object[]> GetEnumerator() Returns IEnumerator<object[]> An enumerator that can be used to iterate through the collection."
  },
  "api/MyTrips.UnitTest.ClassData.html": {
    "href": "api/MyTrips.UnitTest.ClassData.html",
    "title": "Namespace MyTrips.UnitTest.ClassData | MyTrips",
    "keywords": "Namespace MyTrips.UnitTest.ClassData Classes InvalidEmailClassData InvalidStringClassData"
  },
  "api/MyTrips.UnitTest.Collections.ClientsManagementCollection.html": {
    "href": "api/MyTrips.UnitTest.Collections.ClientsManagementCollection.html",
    "title": "Class ClientsManagementCollection | MyTrips",
    "keywords": "Class ClientsManagementCollection Namespace MyTrips.UnitTest.Collections Assembly MyTrips.UnitTest.dll [CollectionDefinition(\"ClientsManagementUnit\")] public class ClientsManagementCollection Inheritance object ClientsManagementCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MyTrips.UnitTest.Collections.html": {
    "href": "api/MyTrips.UnitTest.Collections.html",
    "title": "Namespace MyTrips.UnitTest.Collections | MyTrips",
    "keywords": "Namespace MyTrips.UnitTest.Collections Classes ClientsManagementCollection"
  },
  "api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html": {
    "href": "api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html",
    "title": "Class ClientsManagementFixture | MyTrips",
    "keywords": "Class ClientsManagementFixture Namespace MyTrips.UnitTest.Fixtures Assembly MyTrips.UnitTest.dll public sealed class ClientsManagementFixture Inheritance object ClientsManagementFixture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ClientsManagementFixture() public ClientsManagementFixture() Fields ClientStub public Client ClientStub Field Value Client ClientsCollectionStub public IEnumerable<Client> ClientsCollectionStub Field Value IEnumerable<Client> ClientsRepositoryMock public readonly Mock<IClientsRepository> ClientsRepositoryMock Field Value Mock<IClientsRepository> CreateClientDtoStub public CreateClientDto CreateClientDtoStub Field Value CreateClientDto MapperMock public readonly Mock<IMapper> MapperMock Field Value Mock<IMapper> ResponseClientDtoStub public ResponseClientDto ResponseClientDtoStub Field Value ResponseClientDto UpdateClientDtoStub public UpdateClientDto UpdateClientDtoStub Field Value UpdateClientDto"
  },
  "api/MyTrips.UnitTest.Fixtures.html": {
    "href": "api/MyTrips.UnitTest.Fixtures.html",
    "title": "Namespace MyTrips.UnitTest.Fixtures | MyTrips",
    "keywords": "Namespace MyTrips.UnitTest.Fixtures Classes ClientsManagementFixture"
  },
  "api/MyTrips.UnitTest.UseCases.AspNet.FilterTests.html": {
    "href": "api/MyTrips.UnitTest.UseCases.AspNet.FilterTests.html",
    "title": "Class FilterTests | MyTrips",
    "keywords": "Class FilterTests Namespace MyTrips.UnitTest.UseCases.AspNet Assembly MyTrips.UnitTest.dll public class FilterTests Inheritance object FilterTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(int) [Theory] [InlineData(new object[] { 400 })] [InlineData(new object[] { 500 })] [Trait(\"Category\", \"Unit\")] public void GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(int statusCode) Parameters statusCode int GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(int) [Theory] [InlineData(new object[] { 100 })] [InlineData(new object[] { 200 })] [InlineData(new object[] { 300 })] [Trait(\"Category\", \"Unit\")] public void GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(int statusCode) Parameters statusCode int"
  },
  "api/MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.html": {
    "href": "api/MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.html",
    "title": "Class MiddlewareTests | MyTrips",
    "keywords": "Class MiddlewareTests Namespace MyTrips.UnitTest.UseCases.AspNet Assembly MyTrips.UnitTest.dll public class MiddlewareTests Inheritance object MiddlewareTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MiddlewareTests() public MiddlewareTests() Methods GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader() Returns Task"
  },
  "api/MyTrips.UnitTest.UseCases.AspNet.html": {
    "href": "api/MyTrips.UnitTest.UseCases.AspNet.html",
    "title": "Namespace MyTrips.UnitTest.UseCases.AspNet | MyTrips",
    "keywords": "Namespace MyTrips.UnitTest.UseCases.AspNet Classes FilterTests MiddlewareTests"
  },
  "api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html": {
    "href": "api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html",
    "title": "Class CreateClientUnitTests | MyTrips",
    "keywords": "Class CreateClientUnitTests Namespace MyTrips.UnitTest.UseCases.ClientTests Assembly MyTrips.UnitTest.dll [Collection(\"ClientsManagementUnit\")] public class CreateClientUnitTests Inheritance object CreateClientUnitTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() Returns Task GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors() Returns Task GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt() Returns Task GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string) [Theory] [ClassData(typeof(InvalidEmailClassData))] [Trait(\"Category\", \"Unit\")] public Task GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string email) Parameters email string Returns Task GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string) [Theory] [ClassData(typeof(InvalidStringClassData))] [Trait(\"Category\", \"Unit\")] public Task GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string name) Parameters name string Returns Task GivenValidClient_WhenCreateClient_ThenItShouldBePersisted() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenValidClient_WhenCreateClient_ThenItShouldBePersisted() Returns Task GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto() Returns Task"
  },
  "api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html": {
    "href": "api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html",
    "title": "Class DeleteClientUnitTests | MyTrips",
    "keywords": "Class DeleteClientUnitTests Namespace MyTrips.UnitTest.UseCases.ClientTests Assembly MyTrips.UnitTest.dll [Collection(\"ClientsManagementUnit\")] public class DeleteClientUnitTests Inheritance object DeleteClientUnitTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError() Returns Task GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() Returns Task GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges() Returns Task GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult() Returns Task GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors() Returns Task GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError() Returns Task"
  },
  "api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html": {
    "href": "api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html",
    "title": "Class GetClientUnitTests | MyTrips",
    "keywords": "Class GetClientUnitTests Namespace MyTrips.UnitTest.UseCases.ClientTests Assembly MyTrips.UnitTest.dll [Collection(\"ClientsManagementUnit\")] public class GetClientUnitTests Inheritance object GetClientUnitTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() Returns Task GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult() Returns Task GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos() Returns Task GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() Returns Task GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails() Returns Task GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails() Returns Task"
  },
  "api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html": {
    "href": "api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html",
    "title": "Class UpdateClientUnitTests | MyTrips",
    "keywords": "Class UpdateClientUnitTests Namespace MyTrips.UnitTest.UseCases.ClientTests Assembly MyTrips.UnitTest.dll [Collection(\"ClientsManagementUnit\")] public class UpdateClientUnitTests Inheritance object UpdateClientUnitTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt() Returns Task GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors() Returns Task GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string) [Theory] [Trait(\"Category\", \"Unit\")] [ClassData(typeof(InvalidEmailClassData))] public Task GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string email) Parameters email string Returns Task GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string) [Theory] [Trait(\"Category\", \"Unit\")] [ClassData(typeof(InvalidStringClassData))] public Task GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string name) Parameters name string Returns Task GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt() Returns Task GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto() Returns Task GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors() Returns Task GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() [Fact] [Trait(\"Category\", \"Unit\")] public Task GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() Returns Task"
  },
  "api/MyTrips.UnitTest.UseCases.ClientTests.html": {
    "href": "api/MyTrips.UnitTest.UseCases.ClientTests.html",
    "title": "Namespace MyTrips.UnitTest.UseCases.ClientTests | MyTrips",
    "keywords": "Namespace MyTrips.UnitTest.UseCases.ClientTests Classes CreateClientUnitTests DeleteClientUnitTests GetClientUnitTests UpdateClientUnitTests"
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started | MyTrips",
    "keywords": "Getting Started"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | MyTrips",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "introduction.html": {
    "href": "introduction.html",
    "title": "Introduction | MyTrips",
    "keywords": "Introduction"
  }
}
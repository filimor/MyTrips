### YamlMime:XRefMap
sorted: true
references:
- uid: MyTrips.Application.Dtos
  name: MyTrips.Application.Dtos
  href: api/MyTrips.Application.Dtos.html
  commentId: N:MyTrips.Application.Dtos
  fullName: MyTrips.Application.Dtos
  nameWithType: MyTrips.Application.Dtos
- uid: MyTrips.Application.Dtos.CreateClientDto
  name: CreateClientDto
  href: api/MyTrips.Application.Dtos.CreateClientDto.html
  commentId: T:MyTrips.Application.Dtos.CreateClientDto
  fullName: MyTrips.Application.Dtos.CreateClientDto
  nameWithType: CreateClientDto
- uid: MyTrips.Application.Dtos.CreateClientDto.Email
  name: Email
  href: api/MyTrips.Application.Dtos.CreateClientDto.html#MyTrips_Application_Dtos_CreateClientDto_Email
  commentId: P:MyTrips.Application.Dtos.CreateClientDto.Email
  fullName: MyTrips.Application.Dtos.CreateClientDto.Email
  nameWithType: CreateClientDto.Email
- uid: MyTrips.Application.Dtos.CreateClientDto.Email*
  name: Email
  href: api/MyTrips.Application.Dtos.CreateClientDto.html#MyTrips_Application_Dtos_CreateClientDto_Email_
  commentId: Overload:MyTrips.Application.Dtos.CreateClientDto.Email
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.CreateClientDto.Email
  nameWithType: CreateClientDto.Email
- uid: MyTrips.Application.Dtos.CreateClientDto.Name
  name: Name
  href: api/MyTrips.Application.Dtos.CreateClientDto.html#MyTrips_Application_Dtos_CreateClientDto_Name
  commentId: P:MyTrips.Application.Dtos.CreateClientDto.Name
  fullName: MyTrips.Application.Dtos.CreateClientDto.Name
  nameWithType: CreateClientDto.Name
- uid: MyTrips.Application.Dtos.CreateClientDto.Name*
  name: Name
  href: api/MyTrips.Application.Dtos.CreateClientDto.html#MyTrips_Application_Dtos_CreateClientDto_Name_
  commentId: Overload:MyTrips.Application.Dtos.CreateClientDto.Name
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.CreateClientDto.Name
  nameWithType: CreateClientDto.Name
- uid: MyTrips.Application.Dtos.ResponseClientDto
  name: ResponseClientDto
  href: api/MyTrips.Application.Dtos.ResponseClientDto.html
  commentId: T:MyTrips.Application.Dtos.ResponseClientDto
  fullName: MyTrips.Application.Dtos.ResponseClientDto
  nameWithType: ResponseClientDto
- uid: MyTrips.Application.Dtos.ResponseClientDto.Email
  name: Email
  href: api/MyTrips.Application.Dtos.ResponseClientDto.html#MyTrips_Application_Dtos_ResponseClientDto_Email
  commentId: P:MyTrips.Application.Dtos.ResponseClientDto.Email
  fullName: MyTrips.Application.Dtos.ResponseClientDto.Email
  nameWithType: ResponseClientDto.Email
- uid: MyTrips.Application.Dtos.ResponseClientDto.Email*
  name: Email
  href: api/MyTrips.Application.Dtos.ResponseClientDto.html#MyTrips_Application_Dtos_ResponseClientDto_Email_
  commentId: Overload:MyTrips.Application.Dtos.ResponseClientDto.Email
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.ResponseClientDto.Email
  nameWithType: ResponseClientDto.Email
- uid: MyTrips.Application.Dtos.ResponseClientDto.Id
  name: Id
  href: api/MyTrips.Application.Dtos.ResponseClientDto.html#MyTrips_Application_Dtos_ResponseClientDto_Id
  commentId: P:MyTrips.Application.Dtos.ResponseClientDto.Id
  fullName: MyTrips.Application.Dtos.ResponseClientDto.Id
  nameWithType: ResponseClientDto.Id
- uid: MyTrips.Application.Dtos.ResponseClientDto.Id*
  name: Id
  href: api/MyTrips.Application.Dtos.ResponseClientDto.html#MyTrips_Application_Dtos_ResponseClientDto_Id_
  commentId: Overload:MyTrips.Application.Dtos.ResponseClientDto.Id
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.ResponseClientDto.Id
  nameWithType: ResponseClientDto.Id
- uid: MyTrips.Application.Dtos.ResponseClientDto.Name
  name: Name
  href: api/MyTrips.Application.Dtos.ResponseClientDto.html#MyTrips_Application_Dtos_ResponseClientDto_Name
  commentId: P:MyTrips.Application.Dtos.ResponseClientDto.Name
  fullName: MyTrips.Application.Dtos.ResponseClientDto.Name
  nameWithType: ResponseClientDto.Name
- uid: MyTrips.Application.Dtos.ResponseClientDto.Name*
  name: Name
  href: api/MyTrips.Application.Dtos.ResponseClientDto.html#MyTrips_Application_Dtos_ResponseClientDto_Name_
  commentId: Overload:MyTrips.Application.Dtos.ResponseClientDto.Name
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.ResponseClientDto.Name
  nameWithType: ResponseClientDto.Name
- uid: MyTrips.Application.Dtos.UpdateClientDto
  name: UpdateClientDto
  href: api/MyTrips.Application.Dtos.UpdateClientDto.html
  commentId: T:MyTrips.Application.Dtos.UpdateClientDto
  fullName: MyTrips.Application.Dtos.UpdateClientDto
  nameWithType: UpdateClientDto
- uid: MyTrips.Application.Dtos.UpdateClientDto.Email
  name: Email
  href: api/MyTrips.Application.Dtos.UpdateClientDto.html#MyTrips_Application_Dtos_UpdateClientDto_Email
  commentId: P:MyTrips.Application.Dtos.UpdateClientDto.Email
  fullName: MyTrips.Application.Dtos.UpdateClientDto.Email
  nameWithType: UpdateClientDto.Email
- uid: MyTrips.Application.Dtos.UpdateClientDto.Email*
  name: Email
  href: api/MyTrips.Application.Dtos.UpdateClientDto.html#MyTrips_Application_Dtos_UpdateClientDto_Email_
  commentId: Overload:MyTrips.Application.Dtos.UpdateClientDto.Email
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.UpdateClientDto.Email
  nameWithType: UpdateClientDto.Email
- uid: MyTrips.Application.Dtos.UpdateClientDto.Id
  name: Id
  href: api/MyTrips.Application.Dtos.UpdateClientDto.html#MyTrips_Application_Dtos_UpdateClientDto_Id
  commentId: P:MyTrips.Application.Dtos.UpdateClientDto.Id
  fullName: MyTrips.Application.Dtos.UpdateClientDto.Id
  nameWithType: UpdateClientDto.Id
- uid: MyTrips.Application.Dtos.UpdateClientDto.Id*
  name: Id
  href: api/MyTrips.Application.Dtos.UpdateClientDto.html#MyTrips_Application_Dtos_UpdateClientDto_Id_
  commentId: Overload:MyTrips.Application.Dtos.UpdateClientDto.Id
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.UpdateClientDto.Id
  nameWithType: UpdateClientDto.Id
- uid: MyTrips.Application.Dtos.UpdateClientDto.Name
  name: Name
  href: api/MyTrips.Application.Dtos.UpdateClientDto.html#MyTrips_Application_Dtos_UpdateClientDto_Name
  commentId: P:MyTrips.Application.Dtos.UpdateClientDto.Name
  fullName: MyTrips.Application.Dtos.UpdateClientDto.Name
  nameWithType: UpdateClientDto.Name
- uid: MyTrips.Application.Dtos.UpdateClientDto.Name*
  name: Name
  href: api/MyTrips.Application.Dtos.UpdateClientDto.html#MyTrips_Application_Dtos_UpdateClientDto_Name_
  commentId: Overload:MyTrips.Application.Dtos.UpdateClientDto.Name
  isSpec: "True"
  fullName: MyTrips.Application.Dtos.UpdateClientDto.Name
  nameWithType: UpdateClientDto.Name
- uid: MyTrips.Application.Errors
  name: MyTrips.Application.Errors
  href: api/MyTrips.Application.Errors.html
  commentId: N:MyTrips.Application.Errors
  fullName: MyTrips.Application.Errors
  nameWithType: MyTrips.Application.Errors
- uid: MyTrips.Application.Errors.ConflictError
  name: ConflictError
  href: api/MyTrips.Application.Errors.ConflictError.html
  commentId: T:MyTrips.Application.Errors.ConflictError
  fullName: MyTrips.Application.Errors.ConflictError
  nameWithType: ConflictError
- uid: MyTrips.Application.Errors.ConflictError.#ctor(System.String)
  name: ConflictError(string)
  href: api/MyTrips.Application.Errors.ConflictError.html#MyTrips_Application_Errors_ConflictError__ctor_System_String_
  commentId: M:MyTrips.Application.Errors.ConflictError.#ctor(System.String)
  name.vb: New(String)
  fullName: MyTrips.Application.Errors.ConflictError.ConflictError(string)
  fullName.vb: MyTrips.Application.Errors.ConflictError.New(String)
  nameWithType: ConflictError.ConflictError(string)
  nameWithType.vb: ConflictError.New(String)
- uid: MyTrips.Application.Errors.ConflictError.#ctor*
  name: ConflictError
  href: api/MyTrips.Application.Errors.ConflictError.html#MyTrips_Application_Errors_ConflictError__ctor_
  commentId: Overload:MyTrips.Application.Errors.ConflictError.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Application.Errors.ConflictError.ConflictError
  fullName.vb: MyTrips.Application.Errors.ConflictError.New
  nameWithType: ConflictError.ConflictError
  nameWithType.vb: ConflictError.New
- uid: MyTrips.Application.Errors.NotFoundError
  name: NotFoundError
  href: api/MyTrips.Application.Errors.NotFoundError.html
  commentId: T:MyTrips.Application.Errors.NotFoundError
  fullName: MyTrips.Application.Errors.NotFoundError
  nameWithType: NotFoundError
- uid: MyTrips.Application.Errors.NotFoundError.#ctor(System.String)
  name: NotFoundError(string)
  href: api/MyTrips.Application.Errors.NotFoundError.html#MyTrips_Application_Errors_NotFoundError__ctor_System_String_
  commentId: M:MyTrips.Application.Errors.NotFoundError.#ctor(System.String)
  name.vb: New(String)
  fullName: MyTrips.Application.Errors.NotFoundError.NotFoundError(string)
  fullName.vb: MyTrips.Application.Errors.NotFoundError.New(String)
  nameWithType: NotFoundError.NotFoundError(string)
  nameWithType.vb: NotFoundError.New(String)
- uid: MyTrips.Application.Errors.NotFoundError.#ctor*
  name: NotFoundError
  href: api/MyTrips.Application.Errors.NotFoundError.html#MyTrips_Application_Errors_NotFoundError__ctor_
  commentId: Overload:MyTrips.Application.Errors.NotFoundError.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Application.Errors.NotFoundError.NotFoundError
  fullName.vb: MyTrips.Application.Errors.NotFoundError.New
  nameWithType: NotFoundError.NotFoundError
  nameWithType.vb: NotFoundError.New
- uid: MyTrips.Application.Interfaces
  name: MyTrips.Application.Interfaces
  href: api/MyTrips.Application.Interfaces.html
  commentId: N:MyTrips.Application.Interfaces
  fullName: MyTrips.Application.Interfaces
  nameWithType: MyTrips.Application.Interfaces
- uid: MyTrips.Application.Interfaces.IAuthService
  name: IAuthService
  href: api/MyTrips.Application.Interfaces.IAuthService.html
  commentId: T:MyTrips.Application.Interfaces.IAuthService
  fullName: MyTrips.Application.Interfaces.IAuthService
  nameWithType: IAuthService
- uid: MyTrips.Application.Interfaces.IAuthService.GetToken(MyTrips.Domain.Entities.LoginInfo)
  name: GetToken(LoginInfo)
  href: api/MyTrips.Application.Interfaces.IAuthService.html#MyTrips_Application_Interfaces_IAuthService_GetToken_MyTrips_Domain_Entities_LoginInfo_
  commentId: M:MyTrips.Application.Interfaces.IAuthService.GetToken(MyTrips.Domain.Entities.LoginInfo)
  fullName: MyTrips.Application.Interfaces.IAuthService.GetToken(MyTrips.Domain.Entities.LoginInfo)
  nameWithType: IAuthService.GetToken(LoginInfo)
- uid: MyTrips.Application.Interfaces.IAuthService.GetToken*
  name: GetToken
  href: api/MyTrips.Application.Interfaces.IAuthService.html#MyTrips_Application_Interfaces_IAuthService_GetToken_
  commentId: Overload:MyTrips.Application.Interfaces.IAuthService.GetToken
  isSpec: "True"
  fullName: MyTrips.Application.Interfaces.IAuthService.GetToken
  nameWithType: IAuthService.GetToken
- uid: MyTrips.Application.Interfaces.IClientsService
  name: IClientsService
  href: api/MyTrips.Application.Interfaces.IClientsService.html
  commentId: T:MyTrips.Application.Interfaces.IClientsService
  fullName: MyTrips.Application.Interfaces.IClientsService
  nameWithType: IClientsService
- uid: MyTrips.Application.Interfaces.IClientsService.AddNewClientAsync(MyTrips.Application.Dtos.CreateClientDto)
  name: AddNewClientAsync(CreateClientDto)
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_AddNewClientAsync_MyTrips_Application_Dtos_CreateClientDto_
  commentId: M:MyTrips.Application.Interfaces.IClientsService.AddNewClientAsync(MyTrips.Application.Dtos.CreateClientDto)
  fullName: MyTrips.Application.Interfaces.IClientsService.AddNewClientAsync(MyTrips.Application.Dtos.CreateClientDto)
  nameWithType: IClientsService.AddNewClientAsync(CreateClientDto)
- uid: MyTrips.Application.Interfaces.IClientsService.AddNewClientAsync*
  name: AddNewClientAsync
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_AddNewClientAsync_
  commentId: Overload:MyTrips.Application.Interfaces.IClientsService.AddNewClientAsync
  isSpec: "True"
  fullName: MyTrips.Application.Interfaces.IClientsService.AddNewClientAsync
  nameWithType: IClientsService.AddNewClientAsync
- uid: MyTrips.Application.Interfaces.IClientsService.GetClientByIdAsync(System.Int32)
  name: GetClientByIdAsync(int)
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_GetClientByIdAsync_System_Int32_
  commentId: M:MyTrips.Application.Interfaces.IClientsService.GetClientByIdAsync(System.Int32)
  name.vb: GetClientByIdAsync(Integer)
  fullName: MyTrips.Application.Interfaces.IClientsService.GetClientByIdAsync(int)
  fullName.vb: MyTrips.Application.Interfaces.IClientsService.GetClientByIdAsync(Integer)
  nameWithType: IClientsService.GetClientByIdAsync(int)
  nameWithType.vb: IClientsService.GetClientByIdAsync(Integer)
- uid: MyTrips.Application.Interfaces.IClientsService.GetClientByIdAsync*
  name: GetClientByIdAsync
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_GetClientByIdAsync_
  commentId: Overload:MyTrips.Application.Interfaces.IClientsService.GetClientByIdAsync
  isSpec: "True"
  fullName: MyTrips.Application.Interfaces.IClientsService.GetClientByIdAsync
  nameWithType: IClientsService.GetClientByIdAsync
- uid: MyTrips.Application.Interfaces.IClientsService.GetClientsAsync
  name: GetClientsAsync()
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_GetClientsAsync
  commentId: M:MyTrips.Application.Interfaces.IClientsService.GetClientsAsync
  fullName: MyTrips.Application.Interfaces.IClientsService.GetClientsAsync()
  nameWithType: IClientsService.GetClientsAsync()
- uid: MyTrips.Application.Interfaces.IClientsService.GetClientsAsync(MyTrips.Domain.ValueObjects.ClientParameters)
  name: GetClientsAsync(ClientParameters)
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_GetClientsAsync_MyTrips_Domain_ValueObjects_ClientParameters_
  commentId: M:MyTrips.Application.Interfaces.IClientsService.GetClientsAsync(MyTrips.Domain.ValueObjects.ClientParameters)
  fullName: MyTrips.Application.Interfaces.IClientsService.GetClientsAsync(MyTrips.Domain.ValueObjects.ClientParameters)
  nameWithType: IClientsService.GetClientsAsync(ClientParameters)
- uid: MyTrips.Application.Interfaces.IClientsService.GetClientsAsync*
  name: GetClientsAsync
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_GetClientsAsync_
  commentId: Overload:MyTrips.Application.Interfaces.IClientsService.GetClientsAsync
  isSpec: "True"
  fullName: MyTrips.Application.Interfaces.IClientsService.GetClientsAsync
  nameWithType: IClientsService.GetClientsAsync
- uid: MyTrips.Application.Interfaces.IClientsService.RemoveClientAsync(System.Int32)
  name: RemoveClientAsync(int)
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_RemoveClientAsync_System_Int32_
  commentId: M:MyTrips.Application.Interfaces.IClientsService.RemoveClientAsync(System.Int32)
  name.vb: RemoveClientAsync(Integer)
  fullName: MyTrips.Application.Interfaces.IClientsService.RemoveClientAsync(int)
  fullName.vb: MyTrips.Application.Interfaces.IClientsService.RemoveClientAsync(Integer)
  nameWithType: IClientsService.RemoveClientAsync(int)
  nameWithType.vb: IClientsService.RemoveClientAsync(Integer)
- uid: MyTrips.Application.Interfaces.IClientsService.RemoveClientAsync*
  name: RemoveClientAsync
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_RemoveClientAsync_
  commentId: Overload:MyTrips.Application.Interfaces.IClientsService.RemoveClientAsync
  isSpec: "True"
  fullName: MyTrips.Application.Interfaces.IClientsService.RemoveClientAsync
  nameWithType: IClientsService.RemoveClientAsync
- uid: MyTrips.Application.Interfaces.IClientsService.UpdateClientAsync(MyTrips.Application.Dtos.UpdateClientDto)
  name: UpdateClientAsync(UpdateClientDto)
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_UpdateClientAsync_MyTrips_Application_Dtos_UpdateClientDto_
  commentId: M:MyTrips.Application.Interfaces.IClientsService.UpdateClientAsync(MyTrips.Application.Dtos.UpdateClientDto)
  fullName: MyTrips.Application.Interfaces.IClientsService.UpdateClientAsync(MyTrips.Application.Dtos.UpdateClientDto)
  nameWithType: IClientsService.UpdateClientAsync(UpdateClientDto)
- uid: MyTrips.Application.Interfaces.IClientsService.UpdateClientAsync*
  name: UpdateClientAsync
  href: api/MyTrips.Application.Interfaces.IClientsService.html#MyTrips_Application_Interfaces_IClientsService_UpdateClientAsync_
  commentId: Overload:MyTrips.Application.Interfaces.IClientsService.UpdateClientAsync
  isSpec: "True"
  fullName: MyTrips.Application.Interfaces.IClientsService.UpdateClientAsync
  nameWithType: IClientsService.UpdateClientAsync
- uid: MyTrips.Application.Mappings
  name: MyTrips.Application.Mappings
  href: api/MyTrips.Application.Mappings.html
  commentId: N:MyTrips.Application.Mappings
  fullName: MyTrips.Application.Mappings
  nameWithType: MyTrips.Application.Mappings
- uid: MyTrips.Application.Mappings.Converters
  name: MyTrips.Application.Mappings.Converters
  href: api/MyTrips.Application.Mappings.Converters.html
  commentId: N:MyTrips.Application.Mappings.Converters
  fullName: MyTrips.Application.Mappings.Converters
  nameWithType: MyTrips.Application.Mappings.Converters
- uid: MyTrips.Application.Mappings.Converters.PagedListTypeConverter`2
  name: PagedListTypeConverter<TSource, TDestination>
  href: api/MyTrips.Application.Mappings.Converters.PagedListTypeConverter-2.html
  commentId: T:MyTrips.Application.Mappings.Converters.PagedListTypeConverter`2
  name.vb: PagedListTypeConverter(Of TSource, TDestination)
  fullName: MyTrips.Application.Mappings.Converters.PagedListTypeConverter<TSource, TDestination>
  fullName.vb: MyTrips.Application.Mappings.Converters.PagedListTypeConverter(Of TSource, TDestination)
  nameWithType: PagedListTypeConverter<TSource, TDestination>
  nameWithType.vb: PagedListTypeConverter(Of TSource, TDestination)
- uid: MyTrips.Application.Mappings.Converters.PagedListTypeConverter`2.Convert(MyTrips.Domain.ValueObjects.PagedList{`0},MyTrips.Domain.ValueObjects.PagedList{`1},AutoMapper.ResolutionContext)
  name: Convert(PagedList<TSource>, PagedList<TDestination>, ResolutionContext)
  href: api/MyTrips.Application.Mappings.Converters.PagedListTypeConverter-2.html#MyTrips_Application_Mappings_Converters_PagedListTypeConverter_2_Convert_MyTrips_Domain_ValueObjects_PagedList__0__MyTrips_Domain_ValueObjects_PagedList__1__AutoMapper_ResolutionContext_
  commentId: M:MyTrips.Application.Mappings.Converters.PagedListTypeConverter`2.Convert(MyTrips.Domain.ValueObjects.PagedList{`0},MyTrips.Domain.ValueObjects.PagedList{`1},AutoMapper.ResolutionContext)
  name.vb: Convert(PagedList(Of TSource), PagedList(Of TDestination), ResolutionContext)
  fullName: MyTrips.Application.Mappings.Converters.PagedListTypeConverter<TSource, TDestination>.Convert(MyTrips.Domain.ValueObjects.PagedList<TSource>, MyTrips.Domain.ValueObjects.PagedList<TDestination>, AutoMapper.ResolutionContext)
  fullName.vb: MyTrips.Application.Mappings.Converters.PagedListTypeConverter(Of TSource, TDestination).Convert(MyTrips.Domain.ValueObjects.PagedList(Of TSource), MyTrips.Domain.ValueObjects.PagedList(Of TDestination), AutoMapper.ResolutionContext)
  nameWithType: PagedListTypeConverter<TSource, TDestination>.Convert(PagedList<TSource>, PagedList<TDestination>, ResolutionContext)
  nameWithType.vb: PagedListTypeConverter(Of TSource, TDestination).Convert(PagedList(Of TSource), PagedList(Of TDestination), ResolutionContext)
- uid: MyTrips.Application.Mappings.Converters.PagedListTypeConverter`2.Convert*
  name: Convert
  href: api/MyTrips.Application.Mappings.Converters.PagedListTypeConverter-2.html#MyTrips_Application_Mappings_Converters_PagedListTypeConverter_2_Convert_
  commentId: Overload:MyTrips.Application.Mappings.Converters.PagedListTypeConverter`2.Convert
  isSpec: "True"
  fullName: MyTrips.Application.Mappings.Converters.PagedListTypeConverter<TSource, TDestination>.Convert
  fullName.vb: MyTrips.Application.Mappings.Converters.PagedListTypeConverter(Of TSource, TDestination).Convert
  nameWithType: PagedListTypeConverter<TSource, TDestination>.Convert
  nameWithType.vb: PagedListTypeConverter(Of TSource, TDestination).Convert
- uid: MyTrips.Application.Mappings.DtoToDomainMappingProfile
  name: DtoToDomainMappingProfile
  href: api/MyTrips.Application.Mappings.DtoToDomainMappingProfile.html
  commentId: T:MyTrips.Application.Mappings.DtoToDomainMappingProfile
  fullName: MyTrips.Application.Mappings.DtoToDomainMappingProfile
  nameWithType: DtoToDomainMappingProfile
- uid: MyTrips.Application.Mappings.DtoToDomainMappingProfile.#ctor
  name: DtoToDomainMappingProfile()
  href: api/MyTrips.Application.Mappings.DtoToDomainMappingProfile.html#MyTrips_Application_Mappings_DtoToDomainMappingProfile__ctor
  commentId: M:MyTrips.Application.Mappings.DtoToDomainMappingProfile.#ctor
  name.vb: New()
  fullName: MyTrips.Application.Mappings.DtoToDomainMappingProfile.DtoToDomainMappingProfile()
  fullName.vb: MyTrips.Application.Mappings.DtoToDomainMappingProfile.New()
  nameWithType: DtoToDomainMappingProfile.DtoToDomainMappingProfile()
  nameWithType.vb: DtoToDomainMappingProfile.New()
- uid: MyTrips.Application.Mappings.DtoToDomainMappingProfile.#ctor*
  name: DtoToDomainMappingProfile
  href: api/MyTrips.Application.Mappings.DtoToDomainMappingProfile.html#MyTrips_Application_Mappings_DtoToDomainMappingProfile__ctor_
  commentId: Overload:MyTrips.Application.Mappings.DtoToDomainMappingProfile.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Application.Mappings.DtoToDomainMappingProfile.DtoToDomainMappingProfile
  fullName.vb: MyTrips.Application.Mappings.DtoToDomainMappingProfile.New
  nameWithType: DtoToDomainMappingProfile.DtoToDomainMappingProfile
  nameWithType.vb: DtoToDomainMappingProfile.New
- uid: MyTrips.Application.Services
  name: MyTrips.Application.Services
  href: api/MyTrips.Application.Services.html
  commentId: N:MyTrips.Application.Services
  fullName: MyTrips.Application.Services
  nameWithType: MyTrips.Application.Services
- uid: MyTrips.Application.Services.AuthService
  name: AuthService
  href: api/MyTrips.Application.Services.AuthService.html
  commentId: T:MyTrips.Application.Services.AuthService
  fullName: MyTrips.Application.Services.AuthService
  nameWithType: AuthService
- uid: MyTrips.Application.Services.AuthService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: AuthService(IConfiguration)
  href: api/MyTrips.Application.Services.AuthService.html#MyTrips_Application_Services_AuthService__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:MyTrips.Application.Services.AuthService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: MyTrips.Application.Services.AuthService.AuthService(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: MyTrips.Application.Services.AuthService.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: AuthService.AuthService(IConfiguration)
  nameWithType.vb: AuthService.New(IConfiguration)
- uid: MyTrips.Application.Services.AuthService.#ctor*
  name: AuthService
  href: api/MyTrips.Application.Services.AuthService.html#MyTrips_Application_Services_AuthService__ctor_
  commentId: Overload:MyTrips.Application.Services.AuthService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Application.Services.AuthService.AuthService
  fullName.vb: MyTrips.Application.Services.AuthService.New
  nameWithType: AuthService.AuthService
  nameWithType.vb: AuthService.New
- uid: MyTrips.Application.Services.AuthService.GetToken(MyTrips.Domain.Entities.LoginInfo)
  name: GetToken(LoginInfo)
  href: api/MyTrips.Application.Services.AuthService.html#MyTrips_Application_Services_AuthService_GetToken_MyTrips_Domain_Entities_LoginInfo_
  commentId: M:MyTrips.Application.Services.AuthService.GetToken(MyTrips.Domain.Entities.LoginInfo)
  fullName: MyTrips.Application.Services.AuthService.GetToken(MyTrips.Domain.Entities.LoginInfo)
  nameWithType: AuthService.GetToken(LoginInfo)
- uid: MyTrips.Application.Services.AuthService.GetToken*
  name: GetToken
  href: api/MyTrips.Application.Services.AuthService.html#MyTrips_Application_Services_AuthService_GetToken_
  commentId: Overload:MyTrips.Application.Services.AuthService.GetToken
  isSpec: "True"
  fullName: MyTrips.Application.Services.AuthService.GetToken
  nameWithType: AuthService.GetToken
- uid: MyTrips.Application.Services.ClientsService
  name: ClientsService
  href: api/MyTrips.Application.Services.ClientsService.html
  commentId: T:MyTrips.Application.Services.ClientsService
  fullName: MyTrips.Application.Services.ClientsService
  nameWithType: ClientsService
- uid: MyTrips.Application.Services.ClientsService.#ctor(AutoMapper.IMapper,MyTrips.Domain.Interfaces.IClientsRepository)
  name: ClientsService(IMapper, IClientsRepository)
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService__ctor_AutoMapper_IMapper_MyTrips_Domain_Interfaces_IClientsRepository_
  commentId: M:MyTrips.Application.Services.ClientsService.#ctor(AutoMapper.IMapper,MyTrips.Domain.Interfaces.IClientsRepository)
  name.vb: New(IMapper, IClientsRepository)
  fullName: MyTrips.Application.Services.ClientsService.ClientsService(AutoMapper.IMapper, MyTrips.Domain.Interfaces.IClientsRepository)
  fullName.vb: MyTrips.Application.Services.ClientsService.New(AutoMapper.IMapper, MyTrips.Domain.Interfaces.IClientsRepository)
  nameWithType: ClientsService.ClientsService(IMapper, IClientsRepository)
  nameWithType.vb: ClientsService.New(IMapper, IClientsRepository)
- uid: MyTrips.Application.Services.ClientsService.#ctor*
  name: ClientsService
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService__ctor_
  commentId: Overload:MyTrips.Application.Services.ClientsService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Application.Services.ClientsService.ClientsService
  fullName.vb: MyTrips.Application.Services.ClientsService.New
  nameWithType: ClientsService.ClientsService
  nameWithType.vb: ClientsService.New
- uid: MyTrips.Application.Services.ClientsService.AddNewClientAsync(MyTrips.Application.Dtos.CreateClientDto)
  name: AddNewClientAsync(CreateClientDto)
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_AddNewClientAsync_MyTrips_Application_Dtos_CreateClientDto_
  commentId: M:MyTrips.Application.Services.ClientsService.AddNewClientAsync(MyTrips.Application.Dtos.CreateClientDto)
  fullName: MyTrips.Application.Services.ClientsService.AddNewClientAsync(MyTrips.Application.Dtos.CreateClientDto)
  nameWithType: ClientsService.AddNewClientAsync(CreateClientDto)
- uid: MyTrips.Application.Services.ClientsService.AddNewClientAsync*
  name: AddNewClientAsync
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_AddNewClientAsync_
  commentId: Overload:MyTrips.Application.Services.ClientsService.AddNewClientAsync
  isSpec: "True"
  fullName: MyTrips.Application.Services.ClientsService.AddNewClientAsync
  nameWithType: ClientsService.AddNewClientAsync
- uid: MyTrips.Application.Services.ClientsService.GetClientByIdAsync(System.Int32)
  name: GetClientByIdAsync(int)
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_GetClientByIdAsync_System_Int32_
  commentId: M:MyTrips.Application.Services.ClientsService.GetClientByIdAsync(System.Int32)
  name.vb: GetClientByIdAsync(Integer)
  fullName: MyTrips.Application.Services.ClientsService.GetClientByIdAsync(int)
  fullName.vb: MyTrips.Application.Services.ClientsService.GetClientByIdAsync(Integer)
  nameWithType: ClientsService.GetClientByIdAsync(int)
  nameWithType.vb: ClientsService.GetClientByIdAsync(Integer)
- uid: MyTrips.Application.Services.ClientsService.GetClientByIdAsync*
  name: GetClientByIdAsync
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_GetClientByIdAsync_
  commentId: Overload:MyTrips.Application.Services.ClientsService.GetClientByIdAsync
  isSpec: "True"
  fullName: MyTrips.Application.Services.ClientsService.GetClientByIdAsync
  nameWithType: ClientsService.GetClientByIdAsync
- uid: MyTrips.Application.Services.ClientsService.GetClientsAsync
  name: GetClientsAsync()
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_GetClientsAsync
  commentId: M:MyTrips.Application.Services.ClientsService.GetClientsAsync
  fullName: MyTrips.Application.Services.ClientsService.GetClientsAsync()
  nameWithType: ClientsService.GetClientsAsync()
- uid: MyTrips.Application.Services.ClientsService.GetClientsAsync(MyTrips.Domain.ValueObjects.ClientParameters)
  name: GetClientsAsync(ClientParameters)
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_GetClientsAsync_MyTrips_Domain_ValueObjects_ClientParameters_
  commentId: M:MyTrips.Application.Services.ClientsService.GetClientsAsync(MyTrips.Domain.ValueObjects.ClientParameters)
  fullName: MyTrips.Application.Services.ClientsService.GetClientsAsync(MyTrips.Domain.ValueObjects.ClientParameters)
  nameWithType: ClientsService.GetClientsAsync(ClientParameters)
- uid: MyTrips.Application.Services.ClientsService.GetClientsAsync*
  name: GetClientsAsync
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_GetClientsAsync_
  commentId: Overload:MyTrips.Application.Services.ClientsService.GetClientsAsync
  isSpec: "True"
  fullName: MyTrips.Application.Services.ClientsService.GetClientsAsync
  nameWithType: ClientsService.GetClientsAsync
- uid: MyTrips.Application.Services.ClientsService.RemoveClientAsync(System.Int32)
  name: RemoveClientAsync(int)
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_RemoveClientAsync_System_Int32_
  commentId: M:MyTrips.Application.Services.ClientsService.RemoveClientAsync(System.Int32)
  name.vb: RemoveClientAsync(Integer)
  fullName: MyTrips.Application.Services.ClientsService.RemoveClientAsync(int)
  fullName.vb: MyTrips.Application.Services.ClientsService.RemoveClientAsync(Integer)
  nameWithType: ClientsService.RemoveClientAsync(int)
  nameWithType.vb: ClientsService.RemoveClientAsync(Integer)
- uid: MyTrips.Application.Services.ClientsService.RemoveClientAsync*
  name: RemoveClientAsync
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_RemoveClientAsync_
  commentId: Overload:MyTrips.Application.Services.ClientsService.RemoveClientAsync
  isSpec: "True"
  fullName: MyTrips.Application.Services.ClientsService.RemoveClientAsync
  nameWithType: ClientsService.RemoveClientAsync
- uid: MyTrips.Application.Services.ClientsService.UpdateClientAsync(MyTrips.Application.Dtos.UpdateClientDto)
  name: UpdateClientAsync(UpdateClientDto)
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_UpdateClientAsync_MyTrips_Application_Dtos_UpdateClientDto_
  commentId: M:MyTrips.Application.Services.ClientsService.UpdateClientAsync(MyTrips.Application.Dtos.UpdateClientDto)
  fullName: MyTrips.Application.Services.ClientsService.UpdateClientAsync(MyTrips.Application.Dtos.UpdateClientDto)
  nameWithType: ClientsService.UpdateClientAsync(UpdateClientDto)
- uid: MyTrips.Application.Services.ClientsService.UpdateClientAsync*
  name: UpdateClientAsync
  href: api/MyTrips.Application.Services.ClientsService.html#MyTrips_Application_Services_ClientsService_UpdateClientAsync_
  commentId: Overload:MyTrips.Application.Services.ClientsService.UpdateClientAsync
  isSpec: "True"
  fullName: MyTrips.Application.Services.ClientsService.UpdateClientAsync
  nameWithType: ClientsService.UpdateClientAsync
- uid: MyTrips.Application.Validators
  name: MyTrips.Application.Validators
  href: api/MyTrips.Application.Validators.html
  commentId: N:MyTrips.Application.Validators
  fullName: MyTrips.Application.Validators
  nameWithType: MyTrips.Application.Validators
- uid: MyTrips.Application.Validators.ClientValidator
  name: ClientValidator
  href: api/MyTrips.Application.Validators.ClientValidator.html
  commentId: T:MyTrips.Application.Validators.ClientValidator
  fullName: MyTrips.Application.Validators.ClientValidator
  nameWithType: ClientValidator
- uid: MyTrips.Application.Validators.ClientValidator.#ctor
  name: ClientValidator()
  href: api/MyTrips.Application.Validators.ClientValidator.html#MyTrips_Application_Validators_ClientValidator__ctor
  commentId: M:MyTrips.Application.Validators.ClientValidator.#ctor
  name.vb: New()
  fullName: MyTrips.Application.Validators.ClientValidator.ClientValidator()
  fullName.vb: MyTrips.Application.Validators.ClientValidator.New()
  nameWithType: ClientValidator.ClientValidator()
  nameWithType.vb: ClientValidator.New()
- uid: MyTrips.Application.Validators.ClientValidator.#ctor*
  name: ClientValidator
  href: api/MyTrips.Application.Validators.ClientValidator.html#MyTrips_Application_Validators_ClientValidator__ctor_
  commentId: Overload:MyTrips.Application.Validators.ClientValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Application.Validators.ClientValidator.ClientValidator
  fullName.vb: MyTrips.Application.Validators.ClientValidator.New
  nameWithType: ClientValidator.ClientValidator
  nameWithType.vb: ClientValidator.New
- uid: MyTrips.CrossCutting
  name: MyTrips.CrossCutting
  href: api/MyTrips.CrossCutting.html
  commentId: N:MyTrips.CrossCutting
  fullName: MyTrips.CrossCutting
  nameWithType: MyTrips.CrossCutting
- uid: MyTrips.CrossCutting.IoC
  name: IoC
  href: api/MyTrips.CrossCutting.IoC.html
  commentId: T:MyTrips.CrossCutting.IoC
  fullName: MyTrips.CrossCutting.IoC
  nameWithType: IoC
- uid: MyTrips.CrossCutting.IoC.AddInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddInfrastructure(IServiceCollection, IConfiguration)
  href: api/MyTrips.CrossCutting.IoC.html#MyTrips_CrossCutting_IoC_AddInfrastructure_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:MyTrips.CrossCutting.IoC.AddInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: MyTrips.CrossCutting.IoC.AddInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: IoC.AddInfrastructure(IServiceCollection, IConfiguration)
- uid: MyTrips.CrossCutting.IoC.AddInfrastructure*
  name: AddInfrastructure
  href: api/MyTrips.CrossCutting.IoC.html#MyTrips_CrossCutting_IoC_AddInfrastructure_
  commentId: Overload:MyTrips.CrossCutting.IoC.AddInfrastructure
  isSpec: "True"
  fullName: MyTrips.CrossCutting.IoC.AddInfrastructure
  nameWithType: IoC.AddInfrastructure
- uid: MyTrips.Domain.Entities
  name: MyTrips.Domain.Entities
  href: api/MyTrips.Domain.Entities.html
  commentId: N:MyTrips.Domain.Entities
  fullName: MyTrips.Domain.Entities
  nameWithType: MyTrips.Domain.Entities
- uid: MyTrips.Domain.Entities.Client
  name: Client
  href: api/MyTrips.Domain.Entities.Client.html
  commentId: T:MyTrips.Domain.Entities.Client
  fullName: MyTrips.Domain.Entities.Client
  nameWithType: Client
- uid: MyTrips.Domain.Entities.Client.#ctor
  name: Client()
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client__ctor
  commentId: M:MyTrips.Domain.Entities.Client.#ctor
  name.vb: New()
  fullName: MyTrips.Domain.Entities.Client.Client()
  fullName.vb: MyTrips.Domain.Entities.Client.New()
  nameWithType: Client.Client()
  nameWithType.vb: Client.New()
- uid: MyTrips.Domain.Entities.Client.#ctor(System.Int32,System.String,System.String)
  name: Client(int, string, string)
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client__ctor_System_Int32_System_String_System_String_
  commentId: M:MyTrips.Domain.Entities.Client.#ctor(System.Int32,System.String,System.String)
  name.vb: New(Integer, String, String)
  fullName: MyTrips.Domain.Entities.Client.Client(int, string, string)
  fullName.vb: MyTrips.Domain.Entities.Client.New(Integer, String, String)
  nameWithType: Client.Client(int, string, string)
  nameWithType.vb: Client.New(Integer, String, String)
- uid: MyTrips.Domain.Entities.Client.#ctor(System.String,System.String)
  name: Client(string, string)
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client__ctor_System_String_System_String_
  commentId: M:MyTrips.Domain.Entities.Client.#ctor(System.String,System.String)
  name.vb: New(String, String)
  fullName: MyTrips.Domain.Entities.Client.Client(string, string)
  fullName.vb: MyTrips.Domain.Entities.Client.New(String, String)
  nameWithType: Client.Client(string, string)
  nameWithType.vb: Client.New(String, String)
- uid: MyTrips.Domain.Entities.Client.#ctor*
  name: Client
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client__ctor_
  commentId: Overload:MyTrips.Domain.Entities.Client.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Domain.Entities.Client.Client
  fullName.vb: MyTrips.Domain.Entities.Client.New
  nameWithType: Client.Client
  nameWithType.vb: Client.New
- uid: MyTrips.Domain.Entities.Client.Email
  name: Email
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client_Email
  commentId: P:MyTrips.Domain.Entities.Client.Email
  fullName: MyTrips.Domain.Entities.Client.Email
  nameWithType: Client.Email
- uid: MyTrips.Domain.Entities.Client.Email*
  name: Email
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client_Email_
  commentId: Overload:MyTrips.Domain.Entities.Client.Email
  isSpec: "True"
  fullName: MyTrips.Domain.Entities.Client.Email
  nameWithType: Client.Email
- uid: MyTrips.Domain.Entities.Client.Id
  name: Id
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client_Id
  commentId: P:MyTrips.Domain.Entities.Client.Id
  fullName: MyTrips.Domain.Entities.Client.Id
  nameWithType: Client.Id
- uid: MyTrips.Domain.Entities.Client.Id*
  name: Id
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client_Id_
  commentId: Overload:MyTrips.Domain.Entities.Client.Id
  isSpec: "True"
  fullName: MyTrips.Domain.Entities.Client.Id
  nameWithType: Client.Id
- uid: MyTrips.Domain.Entities.Client.Name
  name: Name
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client_Name
  commentId: P:MyTrips.Domain.Entities.Client.Name
  fullName: MyTrips.Domain.Entities.Client.Name
  nameWithType: Client.Name
- uid: MyTrips.Domain.Entities.Client.Name*
  name: Name
  href: api/MyTrips.Domain.Entities.Client.html#MyTrips_Domain_Entities_Client_Name_
  commentId: Overload:MyTrips.Domain.Entities.Client.Name
  isSpec: "True"
  fullName: MyTrips.Domain.Entities.Client.Name
  nameWithType: Client.Name
- uid: MyTrips.Domain.Entities.LoginInfo
  name: LoginInfo
  href: api/MyTrips.Domain.Entities.LoginInfo.html
  commentId: T:MyTrips.Domain.Entities.LoginInfo
  fullName: MyTrips.Domain.Entities.LoginInfo
  nameWithType: LoginInfo
- uid: MyTrips.Domain.Entities.LoginInfo.Password
  name: Password
  href: api/MyTrips.Domain.Entities.LoginInfo.html#MyTrips_Domain_Entities_LoginInfo_Password
  commentId: P:MyTrips.Domain.Entities.LoginInfo.Password
  fullName: MyTrips.Domain.Entities.LoginInfo.Password
  nameWithType: LoginInfo.Password
- uid: MyTrips.Domain.Entities.LoginInfo.Password*
  name: Password
  href: api/MyTrips.Domain.Entities.LoginInfo.html#MyTrips_Domain_Entities_LoginInfo_Password_
  commentId: Overload:MyTrips.Domain.Entities.LoginInfo.Password
  isSpec: "True"
  fullName: MyTrips.Domain.Entities.LoginInfo.Password
  nameWithType: LoginInfo.Password
- uid: MyTrips.Domain.Entities.LoginInfo.Username
  name: Username
  href: api/MyTrips.Domain.Entities.LoginInfo.html#MyTrips_Domain_Entities_LoginInfo_Username
  commentId: P:MyTrips.Domain.Entities.LoginInfo.Username
  fullName: MyTrips.Domain.Entities.LoginInfo.Username
  nameWithType: LoginInfo.Username
- uid: MyTrips.Domain.Entities.LoginInfo.Username*
  name: Username
  href: api/MyTrips.Domain.Entities.LoginInfo.html#MyTrips_Domain_Entities_LoginInfo_Username_
  commentId: Overload:MyTrips.Domain.Entities.LoginInfo.Username
  isSpec: "True"
  fullName: MyTrips.Domain.Entities.LoginInfo.Username
  nameWithType: LoginInfo.Username
- uid: MyTrips.Domain.Interfaces
  name: MyTrips.Domain.Interfaces
  href: api/MyTrips.Domain.Interfaces.html
  commentId: N:MyTrips.Domain.Interfaces
  fullName: MyTrips.Domain.Interfaces
  nameWithType: MyTrips.Domain.Interfaces
- uid: MyTrips.Domain.Interfaces.IClientsRepository
  name: IClientsRepository
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html
  commentId: T:MyTrips.Domain.Interfaces.IClientsRepository
  fullName: MyTrips.Domain.Interfaces.IClientsRepository
  nameWithType: IClientsRepository
- uid: MyTrips.Domain.Interfaces.IClientsRepository.AddAsync(MyTrips.Domain.Entities.Client)
  name: AddAsync(Client)
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_AddAsync_MyTrips_Domain_Entities_Client_
  commentId: M:MyTrips.Domain.Interfaces.IClientsRepository.AddAsync(MyTrips.Domain.Entities.Client)
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.AddAsync(MyTrips.Domain.Entities.Client)
  nameWithType: IClientsRepository.AddAsync(Client)
- uid: MyTrips.Domain.Interfaces.IClientsRepository.AddAsync*
  name: AddAsync
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_AddAsync_
  commentId: Overload:MyTrips.Domain.Interfaces.IClientsRepository.AddAsync
  isSpec: "True"
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.AddAsync
  nameWithType: IClientsRepository.AddAsync
- uid: MyTrips.Domain.Interfaces.IClientsRepository.DeleteAsync(System.Int32)
  name: DeleteAsync(int)
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_DeleteAsync_System_Int32_
  commentId: M:MyTrips.Domain.Interfaces.IClientsRepository.DeleteAsync(System.Int32)
  name.vb: DeleteAsync(Integer)
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.DeleteAsync(int)
  fullName.vb: MyTrips.Domain.Interfaces.IClientsRepository.DeleteAsync(Integer)
  nameWithType: IClientsRepository.DeleteAsync(int)
  nameWithType.vb: IClientsRepository.DeleteAsync(Integer)
- uid: MyTrips.Domain.Interfaces.IClientsRepository.DeleteAsync*
  name: DeleteAsync
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_DeleteAsync_
  commentId: Overload:MyTrips.Domain.Interfaces.IClientsRepository.DeleteAsync
  isSpec: "True"
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.DeleteAsync
  nameWithType: IClientsRepository.DeleteAsync
- uid: MyTrips.Domain.Interfaces.IClientsRepository.FindAsync(System.Linq.Expressions.Expression{System.Func{MyTrips.Domain.Entities.Client,System.Boolean}})
  name: FindAsync(Expression<Func<Client, bool>>)
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_FindAsync_System_Linq_Expressions_Expression_System_Func_MyTrips_Domain_Entities_Client_System_Boolean___
  commentId: M:MyTrips.Domain.Interfaces.IClientsRepository.FindAsync(System.Linq.Expressions.Expression{System.Func{MyTrips.Domain.Entities.Client,System.Boolean}})
  name.vb: FindAsync(Expression(Of Func(Of Client, Boolean)))
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.FindAsync(System.Linq.Expressions.Expression<System.Func<MyTrips.Domain.Entities.Client, bool>>)
  fullName.vb: MyTrips.Domain.Interfaces.IClientsRepository.FindAsync(System.Linq.Expressions.Expression(Of System.Func(Of MyTrips.Domain.Entities.Client, Boolean)))
  nameWithType: IClientsRepository.FindAsync(Expression<Func<Client, bool>>)
  nameWithType.vb: IClientsRepository.FindAsync(Expression(Of Func(Of Client, Boolean)))
- uid: MyTrips.Domain.Interfaces.IClientsRepository.FindAsync*
  name: FindAsync
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_FindAsync_
  commentId: Overload:MyTrips.Domain.Interfaces.IClientsRepository.FindAsync
  isSpec: "True"
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.FindAsync
  nameWithType: IClientsRepository.FindAsync
- uid: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync
  name: GetAsync()
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_GetAsync
  commentId: M:MyTrips.Domain.Interfaces.IClientsRepository.GetAsync
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync()
  nameWithType: IClientsRepository.GetAsync()
- uid: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(System.Int32)
  name: GetAsync(int)
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_GetAsync_System_Int32_
  commentId: M:MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(System.Int32)
  name.vb: GetAsync(Integer)
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(int)
  fullName.vb: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(Integer)
  nameWithType: IClientsRepository.GetAsync(int)
  nameWithType.vb: IClientsRepository.GetAsync(Integer)
- uid: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(System.Int32,System.Int32)
  name: GetAsync(int, int)
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_GetAsync_System_Int32_System_Int32_
  commentId: M:MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(System.Int32,System.Int32)
  name.vb: GetAsync(Integer, Integer)
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(int, int)
  fullName.vb: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync(Integer, Integer)
  nameWithType: IClientsRepository.GetAsync(int, int)
  nameWithType.vb: IClientsRepository.GetAsync(Integer, Integer)
- uid: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync*
  name: GetAsync
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_GetAsync_
  commentId: Overload:MyTrips.Domain.Interfaces.IClientsRepository.GetAsync
  isSpec: "True"
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.GetAsync
  nameWithType: IClientsRepository.GetAsync
- uid: MyTrips.Domain.Interfaces.IClientsRepository.UpdateAsync(MyTrips.Domain.Entities.Client)
  name: UpdateAsync(Client)
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_UpdateAsync_MyTrips_Domain_Entities_Client_
  commentId: M:MyTrips.Domain.Interfaces.IClientsRepository.UpdateAsync(MyTrips.Domain.Entities.Client)
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.UpdateAsync(MyTrips.Domain.Entities.Client)
  nameWithType: IClientsRepository.UpdateAsync(Client)
- uid: MyTrips.Domain.Interfaces.IClientsRepository.UpdateAsync*
  name: UpdateAsync
  href: api/MyTrips.Domain.Interfaces.IClientsRepository.html#MyTrips_Domain_Interfaces_IClientsRepository_UpdateAsync_
  commentId: Overload:MyTrips.Domain.Interfaces.IClientsRepository.UpdateAsync
  isSpec: "True"
  fullName: MyTrips.Domain.Interfaces.IClientsRepository.UpdateAsync
  nameWithType: IClientsRepository.UpdateAsync
- uid: MyTrips.Domain.ValueObjects
  name: MyTrips.Domain.ValueObjects
  href: api/MyTrips.Domain.ValueObjects.html
  commentId: N:MyTrips.Domain.ValueObjects
  fullName: MyTrips.Domain.ValueObjects
  nameWithType: MyTrips.Domain.ValueObjects
- uid: MyTrips.Domain.ValueObjects.ClientParameters
  name: ClientParameters
  href: api/MyTrips.Domain.ValueObjects.ClientParameters.html
  commentId: T:MyTrips.Domain.ValueObjects.ClientParameters
  fullName: MyTrips.Domain.ValueObjects.ClientParameters
  nameWithType: ClientParameters
- uid: MyTrips.Domain.ValueObjects.ClientParameters.PageIndex
  name: PageIndex
  href: api/MyTrips.Domain.ValueObjects.ClientParameters.html#MyTrips_Domain_ValueObjects_ClientParameters_PageIndex
  commentId: P:MyTrips.Domain.ValueObjects.ClientParameters.PageIndex
  fullName: MyTrips.Domain.ValueObjects.ClientParameters.PageIndex
  nameWithType: ClientParameters.PageIndex
- uid: MyTrips.Domain.ValueObjects.ClientParameters.PageIndex*
  name: PageIndex
  href: api/MyTrips.Domain.ValueObjects.ClientParameters.html#MyTrips_Domain_ValueObjects_ClientParameters_PageIndex_
  commentId: Overload:MyTrips.Domain.ValueObjects.ClientParameters.PageIndex
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.ClientParameters.PageIndex
  nameWithType: ClientParameters.PageIndex
- uid: MyTrips.Domain.ValueObjects.ClientParameters.PageSize
  name: PageSize
  href: api/MyTrips.Domain.ValueObjects.ClientParameters.html#MyTrips_Domain_ValueObjects_ClientParameters_PageSize
  commentId: P:MyTrips.Domain.ValueObjects.ClientParameters.PageSize
  fullName: MyTrips.Domain.ValueObjects.ClientParameters.PageSize
  nameWithType: ClientParameters.PageSize
- uid: MyTrips.Domain.ValueObjects.ClientParameters.PageSize*
  name: PageSize
  href: api/MyTrips.Domain.ValueObjects.ClientParameters.html#MyTrips_Domain_ValueObjects_ClientParameters_PageSize_
  commentId: Overload:MyTrips.Domain.ValueObjects.ClientParameters.PageSize
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.ClientParameters.PageSize
  nameWithType: ClientParameters.PageSize
- uid: MyTrips.Domain.ValueObjects.PagedList`1
  name: PagedList<T>
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html
  commentId: T:MyTrips.Domain.ValueObjects.PagedList`1
  name.vb: PagedList(Of T)
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T)
  nameWithType: PagedList<T>
  nameWithType.vb: PagedList(Of T)
- uid: MyTrips.Domain.ValueObjects.PagedList`1.#ctor(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Int32)
  name: PagedList(List<T>, int, int, int)
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1__ctor_System_Collections_Generic_List__0__System_Int32_System_Int32_System_Int32_
  commentId: M:MyTrips.Domain.ValueObjects.PagedList`1.#ctor(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Int32)
  name.vb: New(List(Of T), Integer, Integer, Integer)
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.PagedList(System.Collections.Generic.List<T>, int, int, int)
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).New(System.Collections.Generic.List(Of T), Integer, Integer, Integer)
  nameWithType: PagedList<T>.PagedList(List<T>, int, int, int)
  nameWithType.vb: PagedList(Of T).New(List(Of T), Integer, Integer, Integer)
- uid: MyTrips.Domain.ValueObjects.PagedList`1.#ctor*
  name: PagedList
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1__ctor_
  commentId: Overload:MyTrips.Domain.ValueObjects.PagedList`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.PagedList
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).New
  nameWithType: PagedList<T>.PagedList
  nameWithType.vb: PagedList(Of T).New
- uid: MyTrips.Domain.ValueObjects.PagedList`1.CurrentPage
  name: CurrentPage
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_CurrentPage
  commentId: P:MyTrips.Domain.ValueObjects.PagedList`1.CurrentPage
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.CurrentPage
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).CurrentPage
  nameWithType: PagedList<T>.CurrentPage
  nameWithType.vb: PagedList(Of T).CurrentPage
- uid: MyTrips.Domain.ValueObjects.PagedList`1.CurrentPage*
  name: CurrentPage
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_CurrentPage_
  commentId: Overload:MyTrips.Domain.ValueObjects.PagedList`1.CurrentPage
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.CurrentPage
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).CurrentPage
  nameWithType: PagedList<T>.CurrentPage
  nameWithType.vb: PagedList(Of T).CurrentPage
- uid: MyTrips.Domain.ValueObjects.PagedList`1.HasNextPage
  name: HasNextPage
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_HasNextPage
  commentId: P:MyTrips.Domain.ValueObjects.PagedList`1.HasNextPage
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.HasNextPage
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).HasNextPage
  nameWithType: PagedList<T>.HasNextPage
  nameWithType.vb: PagedList(Of T).HasNextPage
- uid: MyTrips.Domain.ValueObjects.PagedList`1.HasNextPage*
  name: HasNextPage
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_HasNextPage_
  commentId: Overload:MyTrips.Domain.ValueObjects.PagedList`1.HasNextPage
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.HasNextPage
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).HasNextPage
  nameWithType: PagedList<T>.HasNextPage
  nameWithType.vb: PagedList(Of T).HasNextPage
- uid: MyTrips.Domain.ValueObjects.PagedList`1.HasPreviousPage
  name: HasPreviousPage
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_HasPreviousPage
  commentId: P:MyTrips.Domain.ValueObjects.PagedList`1.HasPreviousPage
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.HasPreviousPage
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).HasPreviousPage
  nameWithType: PagedList<T>.HasPreviousPage
  nameWithType.vb: PagedList(Of T).HasPreviousPage
- uid: MyTrips.Domain.ValueObjects.PagedList`1.HasPreviousPage*
  name: HasPreviousPage
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_HasPreviousPage_
  commentId: Overload:MyTrips.Domain.ValueObjects.PagedList`1.HasPreviousPage
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.HasPreviousPage
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).HasPreviousPage
  nameWithType: PagedList<T>.HasPreviousPage
  nameWithType.vb: PagedList(Of T).HasPreviousPage
- uid: MyTrips.Domain.ValueObjects.PagedList`1.PageSize
  name: PageSize
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_PageSize
  commentId: P:MyTrips.Domain.ValueObjects.PagedList`1.PageSize
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.PageSize
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).PageSize
  nameWithType: PagedList<T>.PageSize
  nameWithType.vb: PagedList(Of T).PageSize
- uid: MyTrips.Domain.ValueObjects.PagedList`1.PageSize*
  name: PageSize
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_PageSize_
  commentId: Overload:MyTrips.Domain.ValueObjects.PagedList`1.PageSize
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.PageSize
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).PageSize
  nameWithType: PagedList<T>.PageSize
  nameWithType.vb: PagedList(Of T).PageSize
- uid: MyTrips.Domain.ValueObjects.PagedList`1.ToPagedList(System.Linq.IQueryable{`0},System.Int32,System.Int32)
  name: ToPagedList(IQueryable<T>, int, int)
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_ToPagedList_System_Linq_IQueryable__0__System_Int32_System_Int32_
  commentId: M:MyTrips.Domain.ValueObjects.PagedList`1.ToPagedList(System.Linq.IQueryable{`0},System.Int32,System.Int32)
  name.vb: ToPagedList(IQueryable(Of T), Integer, Integer)
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.ToPagedList(System.Linq.IQueryable<T>, int, int)
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).ToPagedList(System.Linq.IQueryable(Of T), Integer, Integer)
  nameWithType: PagedList<T>.ToPagedList(IQueryable<T>, int, int)
  nameWithType.vb: PagedList(Of T).ToPagedList(IQueryable(Of T), Integer, Integer)
- uid: MyTrips.Domain.ValueObjects.PagedList`1.ToPagedList*
  name: ToPagedList
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_ToPagedList_
  commentId: Overload:MyTrips.Domain.ValueObjects.PagedList`1.ToPagedList
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.ToPagedList
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).ToPagedList
  nameWithType: PagedList<T>.ToPagedList
  nameWithType.vb: PagedList(Of T).ToPagedList
- uid: MyTrips.Domain.ValueObjects.PagedList`1.TotalPages
  name: TotalPages
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_TotalPages
  commentId: P:MyTrips.Domain.ValueObjects.PagedList`1.TotalPages
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.TotalPages
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).TotalPages
  nameWithType: PagedList<T>.TotalPages
  nameWithType.vb: PagedList(Of T).TotalPages
- uid: MyTrips.Domain.ValueObjects.PagedList`1.TotalPages*
  name: TotalPages
  href: api/MyTrips.Domain.ValueObjects.PagedList-1.html#MyTrips_Domain_ValueObjects_PagedList_1_TotalPages_
  commentId: Overload:MyTrips.Domain.ValueObjects.PagedList`1.TotalPages
  isSpec: "True"
  fullName: MyTrips.Domain.ValueObjects.PagedList<T>.TotalPages
  fullName.vb: MyTrips.Domain.ValueObjects.PagedList(Of T).TotalPages
  nameWithType: PagedList<T>.TotalPages
  nameWithType.vb: PagedList(Of T).TotalPages
- uid: MyTrips.Infrastructure.Repositories
  name: MyTrips.Infrastructure.Repositories
  href: api/MyTrips.Infrastructure.Repositories.html
  commentId: N:MyTrips.Infrastructure.Repositories
  fullName: MyTrips.Infrastructure.Repositories
  nameWithType: MyTrips.Infrastructure.Repositories
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository
  name: ClientsRepository
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html
  commentId: T:MyTrips.Infrastructure.Repositories.ClientsRepository
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository
  nameWithType: ClientsRepository
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: ClientsRepository(IConfiguration)
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.ClientsRepository(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: MyTrips.Infrastructure.Repositories.ClientsRepository.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ClientsRepository.ClientsRepository(IConfiguration)
  nameWithType.vb: ClientsRepository.New(IConfiguration)
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.#ctor*
  name: ClientsRepository
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository__ctor_
  commentId: Overload:MyTrips.Infrastructure.Repositories.ClientsRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.ClientsRepository
  fullName.vb: MyTrips.Infrastructure.Repositories.ClientsRepository.New
  nameWithType: ClientsRepository.ClientsRepository
  nameWithType.vb: ClientsRepository.New
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.AddAsync(MyTrips.Domain.Entities.Client)
  name: AddAsync(Client)
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_AddAsync_MyTrips_Domain_Entities_Client_
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.AddAsync(MyTrips.Domain.Entities.Client)
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.AddAsync(MyTrips.Domain.Entities.Client)
  nameWithType: ClientsRepository.AddAsync(Client)
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.AddAsync*
  name: AddAsync
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_AddAsync_
  commentId: Overload:MyTrips.Infrastructure.Repositories.ClientsRepository.AddAsync
  isSpec: "True"
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.AddAsync
  nameWithType: ClientsRepository.AddAsync
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.ConnectionString
  name: ConnectionString
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_ConnectionString
  commentId: P:MyTrips.Infrastructure.Repositories.ClientsRepository.ConnectionString
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.ConnectionString
  nameWithType: ClientsRepository.ConnectionString
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.ConnectionString*
  name: ConnectionString
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_ConnectionString_
  commentId: Overload:MyTrips.Infrastructure.Repositories.ClientsRepository.ConnectionString
  isSpec: "True"
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.ConnectionString
  nameWithType: ClientsRepository.ConnectionString
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.DeleteAsync(System.Int32)
  name: DeleteAsync(int)
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_DeleteAsync_System_Int32_
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.DeleteAsync(System.Int32)
  name.vb: DeleteAsync(Integer)
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.DeleteAsync(int)
  fullName.vb: MyTrips.Infrastructure.Repositories.ClientsRepository.DeleteAsync(Integer)
  nameWithType: ClientsRepository.DeleteAsync(int)
  nameWithType.vb: ClientsRepository.DeleteAsync(Integer)
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.DeleteAsync*
  name: DeleteAsync
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_DeleteAsync_
  commentId: Overload:MyTrips.Infrastructure.Repositories.ClientsRepository.DeleteAsync
  isSpec: "True"
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.DeleteAsync
  nameWithType: ClientsRepository.DeleteAsync
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.FindAsync(System.Linq.Expressions.Expression{System.Func{MyTrips.Domain.Entities.Client,System.Boolean}})
  name: FindAsync(Expression<Func<Client, bool>>)
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_FindAsync_System_Linq_Expressions_Expression_System_Func_MyTrips_Domain_Entities_Client_System_Boolean___
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.FindAsync(System.Linq.Expressions.Expression{System.Func{MyTrips.Domain.Entities.Client,System.Boolean}})
  name.vb: FindAsync(Expression(Of Func(Of Client, Boolean)))
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.FindAsync(System.Linq.Expressions.Expression<System.Func<MyTrips.Domain.Entities.Client, bool>>)
  fullName.vb: MyTrips.Infrastructure.Repositories.ClientsRepository.FindAsync(System.Linq.Expressions.Expression(Of System.Func(Of MyTrips.Domain.Entities.Client, Boolean)))
  nameWithType: ClientsRepository.FindAsync(Expression<Func<Client, bool>>)
  nameWithType.vb: ClientsRepository.FindAsync(Expression(Of Func(Of Client, Boolean)))
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.FindAsync*
  name: FindAsync
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_FindAsync_
  commentId: Overload:MyTrips.Infrastructure.Repositories.ClientsRepository.FindAsync
  isSpec: "True"
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.FindAsync
  nameWithType: ClientsRepository.FindAsync
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync
  name: GetAsync()
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_GetAsync
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync()
  nameWithType: ClientsRepository.GetAsync()
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(System.Int32)
  name: GetAsync(int)
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_GetAsync_System_Int32_
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(System.Int32)
  name.vb: GetAsync(Integer)
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(int)
  fullName.vb: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(Integer)
  nameWithType: ClientsRepository.GetAsync(int)
  nameWithType.vb: ClientsRepository.GetAsync(Integer)
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(System.Int32,System.Int32)
  name: GetAsync(int, int)
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_GetAsync_System_Int32_System_Int32_
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(System.Int32,System.Int32)
  name.vb: GetAsync(Integer, Integer)
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(int, int)
  fullName.vb: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync(Integer, Integer)
  nameWithType: ClientsRepository.GetAsync(int, int)
  nameWithType.vb: ClientsRepository.GetAsync(Integer, Integer)
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync*
  name: GetAsync
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_GetAsync_
  commentId: Overload:MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync
  isSpec: "True"
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.GetAsync
  nameWithType: ClientsRepository.GetAsync
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.UpdateAsync(MyTrips.Domain.Entities.Client)
  name: UpdateAsync(Client)
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_UpdateAsync_MyTrips_Domain_Entities_Client_
  commentId: M:MyTrips.Infrastructure.Repositories.ClientsRepository.UpdateAsync(MyTrips.Domain.Entities.Client)
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.UpdateAsync(MyTrips.Domain.Entities.Client)
  nameWithType: ClientsRepository.UpdateAsync(Client)
- uid: MyTrips.Infrastructure.Repositories.ClientsRepository.UpdateAsync*
  name: UpdateAsync
  href: api/MyTrips.Infrastructure.Repositories.ClientsRepository.html#MyTrips_Infrastructure_Repositories_ClientsRepository_UpdateAsync_
  commentId: Overload:MyTrips.Infrastructure.Repositories.ClientsRepository.UpdateAsync
  isSpec: "True"
  fullName: MyTrips.Infrastructure.Repositories.ClientsRepository.UpdateAsync
  nameWithType: ClientsRepository.UpdateAsync
- uid: MyTrips.IntegrationTests.Collections
  name: MyTrips.IntegrationTests.Collections
  href: api/MyTrips.IntegrationTests.Collections.html
  commentId: N:MyTrips.IntegrationTests.Collections
  fullName: MyTrips.IntegrationTests.Collections
  nameWithType: MyTrips.IntegrationTests.Collections
- uid: MyTrips.IntegrationTests.Collections.ClientsManagementCollection
  name: ClientsManagementCollection
  href: api/MyTrips.IntegrationTests.Collections.ClientsManagementCollection.html
  commentId: T:MyTrips.IntegrationTests.Collections.ClientsManagementCollection
  fullName: MyTrips.IntegrationTests.Collections.ClientsManagementCollection
  nameWithType: ClientsManagementCollection
- uid: MyTrips.IntegrationTests.Extensions
  name: MyTrips.IntegrationTests.Extensions
  href: api/MyTrips.IntegrationTests.Extensions.html
  commentId: N:MyTrips.IntegrationTests.Extensions
  fullName: MyTrips.IntegrationTests.Extensions
  nameWithType: MyTrips.IntegrationTests.Extensions
- uid: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions
  name: FluentAssertionsExtensions
  href: api/MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.html
  commentId: T:MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions
  fullName: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions
  nameWithType: FluentAssertionsExtensions
- uid: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveJsonContentType(FluentAssertions.Primitives.HttpResponseMessageAssertions)
  name: HaveJsonContentType(HttpResponseMessageAssertions)
  href: api/MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.html#MyTrips_IntegrationTests_Extensions_FluentAssertionsExtensions_HaveJsonContentType_FluentAssertions_Primitives_HttpResponseMessageAssertions_
  commentId: M:MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveJsonContentType(FluentAssertions.Primitives.HttpResponseMessageAssertions)
  fullName: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveJsonContentType(FluentAssertions.Primitives.HttpResponseMessageAssertions)
  nameWithType: FluentAssertionsExtensions.HaveJsonContentType(HttpResponseMessageAssertions)
- uid: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveJsonContentType*
  name: HaveJsonContentType
  href: api/MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.html#MyTrips_IntegrationTests_Extensions_FluentAssertionsExtensions_HaveJsonContentType_
  commentId: Overload:MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveJsonContentType
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveJsonContentType
  nameWithType: FluentAssertionsExtensions.HaveJsonContentType
- uid: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveProblemContentType(FluentAssertions.Primitives.HttpResponseMessageAssertions)
  name: HaveProblemContentType(HttpResponseMessageAssertions)
  href: api/MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.html#MyTrips_IntegrationTests_Extensions_FluentAssertionsExtensions_HaveProblemContentType_FluentAssertions_Primitives_HttpResponseMessageAssertions_
  commentId: M:MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveProblemContentType(FluentAssertions.Primitives.HttpResponseMessageAssertions)
  fullName: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveProblemContentType(FluentAssertions.Primitives.HttpResponseMessageAssertions)
  nameWithType: FluentAssertionsExtensions.HaveProblemContentType(HttpResponseMessageAssertions)
- uid: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveProblemContentType*
  name: HaveProblemContentType
  href: api/MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.html#MyTrips_IntegrationTests_Extensions_FluentAssertionsExtensions_HaveProblemContentType_
  commentId: Overload:MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveProblemContentType
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.Extensions.FluentAssertionsExtensions.HaveProblemContentType
  nameWithType: FluentAssertionsExtensions.HaveProblemContentType
- uid: MyTrips.IntegrationTests.Extensions.HttpExtensions
  name: HttpExtensions
  href: api/MyTrips.IntegrationTests.Extensions.HttpExtensions.html
  commentId: T:MyTrips.IntegrationTests.Extensions.HttpExtensions
  fullName: MyTrips.IntegrationTests.Extensions.HttpExtensions
  nameWithType: HttpExtensions
- uid: MyTrips.IntegrationTests.Extensions.HttpExtensions.DeserializedContentAsync*
  name: DeserializedContentAsync
  href: api/MyTrips.IntegrationTests.Extensions.HttpExtensions.html#MyTrips_IntegrationTests_Extensions_HttpExtensions_DeserializedContentAsync_
  commentId: Overload:MyTrips.IntegrationTests.Extensions.HttpExtensions.DeserializedContentAsync
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.Extensions.HttpExtensions.DeserializedContentAsync
  nameWithType: HttpExtensions.DeserializedContentAsync
- uid: MyTrips.IntegrationTests.Extensions.HttpExtensions.DeserializedContentAsync``1(System.Net.Http.HttpResponseMessage)
  name: DeserializedContentAsync<T>(HttpResponseMessage)
  href: api/MyTrips.IntegrationTests.Extensions.HttpExtensions.html#MyTrips_IntegrationTests_Extensions_HttpExtensions_DeserializedContentAsync__1_System_Net_Http_HttpResponseMessage_
  commentId: M:MyTrips.IntegrationTests.Extensions.HttpExtensions.DeserializedContentAsync``1(System.Net.Http.HttpResponseMessage)
  name.vb: DeserializedContentAsync(Of T)(HttpResponseMessage)
  fullName: MyTrips.IntegrationTests.Extensions.HttpExtensions.DeserializedContentAsync<T>(System.Net.Http.HttpResponseMessage)
  fullName.vb: MyTrips.IntegrationTests.Extensions.HttpExtensions.DeserializedContentAsync(Of T)(System.Net.Http.HttpResponseMessage)
  nameWithType: HttpExtensions.DeserializedContentAsync<T>(HttpResponseMessage)
  nameWithType.vb: HttpExtensions.DeserializedContentAsync(Of T)(HttpResponseMessage)
- uid: MyTrips.IntegrationTests.Fixtures
  name: MyTrips.IntegrationTests.Fixtures
  href: api/MyTrips.IntegrationTests.Fixtures.html
  commentId: N:MyTrips.IntegrationTests.Fixtures
  fullName: MyTrips.IntegrationTests.Fixtures
  nameWithType: MyTrips.IntegrationTests.Fixtures
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture
  name: ClientsManagementFixture
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html
  commentId: T:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture
  nameWithType: ClientsManagementFixture
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.#ctor
  name: ClientsManagementFixture()
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture__ctor
  commentId: M:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.#ctor
  name.vb: New()
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ClientsManagementFixture()
  fullName.vb: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.New()
  nameWithType: ClientsManagementFixture.ClientsManagementFixture()
  nameWithType.vb: ClientsManagementFixture.New()
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.#ctor*
  name: ClientsManagementFixture
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture__ctor_
  commentId: Overload:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ClientsManagementFixture
  fullName.vb: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.New
  nameWithType: ClientsManagementFixture.ClientsManagementFixture
  nameWithType.vb: ClientsManagementFixture.New
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ClientStub
  name: ClientStub
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_ClientStub
  commentId: F:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ClientStub
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ClientStub
  nameWithType: ClientsManagementFixture.ClientStub
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.CreateClientDtoStub
  name: CreateClientDtoStub
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_CreateClientDtoStub
  commentId: F:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.CreateClientDtoStub
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.CreateClientDtoStub
  nameWithType: ClientsManagementFixture.CreateClientDtoStub
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.DefaultHttpClient
  name: DefaultHttpClient
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_DefaultHttpClient
  commentId: P:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.DefaultHttpClient
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.DefaultHttpClient
  nameWithType: ClientsManagementFixture.DefaultHttpClient
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.DefaultHttpClient*
  name: DefaultHttpClient
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_DefaultHttpClient_
  commentId: Overload:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.DefaultHttpClient
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.DefaultHttpClient
  nameWithType: ClientsManagementFixture.DefaultHttpClient
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Dispose
  name: Dispose()
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_Dispose
  commentId: M:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Dispose
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Dispose()
  nameWithType: ClientsManagementFixture.Dispose()
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Dispose*
  name: Dispose
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_Dispose_
  commentId: Overload:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Dispose
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Dispose
  nameWithType: ClientsManagementFixture.Dispose
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Endpoint
  name: Endpoint
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_Endpoint
  commentId: F:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Endpoint
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Endpoint
  nameWithType: ClientsManagementFixture.Endpoint
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Factory
  name: Factory
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_Factory
  commentId: F:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Factory
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.Factory
  nameWithType: ClientsManagementFixture.Factory
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.GetAuthorizationHeader
  name: GetAuthorizationHeader()
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_GetAuthorizationHeader
  commentId: M:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.GetAuthorizationHeader
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.GetAuthorizationHeader()
  nameWithType: ClientsManagementFixture.GetAuthorizationHeader()
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.GetAuthorizationHeader*
  name: GetAuthorizationHeader
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_GetAuthorizationHeader_
  commentId: Overload:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.GetAuthorizationHeader
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.GetAuthorizationHeader
  nameWithType: ClientsManagementFixture.GetAuthorizationHeader
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ResponseClientDtoStub
  name: ResponseClientDtoStub
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_ResponseClientDtoStub
  commentId: F:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ResponseClientDtoStub
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.ResponseClientDtoStub
  nameWithType: ClientsManagementFixture.ResponseClientDtoStub
- uid: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.UpdateClientDtoStub
  name: UpdateClientDtoStub
  href: api/MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.html#MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_UpdateClientDtoStub
  commentId: F:MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.UpdateClientDtoStub
  fullName: MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture.UpdateClientDtoStub
  nameWithType: ClientsManagementFixture.UpdateClientDtoStub
- uid: MyTrips.IntegrationTests.Handlers
  name: MyTrips.IntegrationTests.Handlers
  href: api/MyTrips.IntegrationTests.Handlers.html
  commentId: N:MyTrips.IntegrationTests.Handlers
  fullName: MyTrips.IntegrationTests.Handlers
  nameWithType: MyTrips.IntegrationTests.Handlers
- uid: MyTrips.IntegrationTests.Handlers.LoggingHandler
  name: LoggingHandler
  href: api/MyTrips.IntegrationTests.Handlers.LoggingHandler.html
  commentId: T:MyTrips.IntegrationTests.Handlers.LoggingHandler
  fullName: MyTrips.IntegrationTests.Handlers.LoggingHandler
  nameWithType: LoggingHandler
- uid: MyTrips.IntegrationTests.Handlers.LoggingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  name: SendAsync(HttpRequestMessage, CancellationToken)
  href: api/MyTrips.IntegrationTests.Handlers.LoggingHandler.html#MyTrips_IntegrationTests_Handlers_LoggingHandler_SendAsync_System_Net_Http_HttpRequestMessage_System_Threading_CancellationToken_
  commentId: M:MyTrips.IntegrationTests.Handlers.LoggingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  fullName: MyTrips.IntegrationTests.Handlers.LoggingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  nameWithType: LoggingHandler.SendAsync(HttpRequestMessage, CancellationToken)
- uid: MyTrips.IntegrationTests.Handlers.LoggingHandler.SendAsync*
  name: SendAsync
  href: api/MyTrips.IntegrationTests.Handlers.LoggingHandler.html#MyTrips_IntegrationTests_Handlers_LoggingHandler_SendAsync_
  commentId: Overload:MyTrips.IntegrationTests.Handlers.LoggingHandler.SendAsync
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.Handlers.LoggingHandler.SendAsync
  nameWithType: LoggingHandler.SendAsync
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement
  name: MyTrips.IntegrationTests.UseCases.ClientsManagement
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.html
  commentId: N:MyTrips.IntegrationTests.UseCases.ClientsManagement
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement
  nameWithType: MyTrips.IntegrationTests.UseCases.ClientsManagement
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests
  name: CreateClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html
  commentId: T:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests
  nameWithType: CreateClientIntegrationTests
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name: CreateClientIntegrationTests(ClientsManagementFixture)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests__ctor_MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name.vb: New(ClientsManagementFixture)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.CreateClientIntegrationTests(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.New(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  nameWithType: CreateClientIntegrationTests.CreateClientIntegrationTests(ClientsManagementFixture)
  nameWithType.vb: CreateClientIntegrationTests.New(ClientsManagementFixture)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.#ctor*
  name: CreateClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests__ctor_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.CreateClientIntegrationTests
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.New
  nameWithType: CreateClientIntegrationTests.CreateClientIntegrationTests
  nameWithType.vb: CreateClientIntegrationTests.New
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain
  name: GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain()
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain*
  name: GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldNotPersistItAgain
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent
  name: GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent()
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent*
  name: GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedPostClient_ThenItShouldReturnConflictWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(System.String)
  name: GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(string)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt_System_String_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(System.String)
  name.vb: GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(String)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(string)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(String)
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(string)
  nameWithType.vb: CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt(String)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt*
  name: GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldNotPersistIt
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name: GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent_System_String_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name.vb: GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  nameWithType.vb: CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent*
  name: GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(System.String)
  name: GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(string)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt_System_String_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(System.String)
  name.vb: GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(String)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(string)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(String)
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(string)
  nameWithType.vb: CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt(String)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt*
  name: GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldNotPersistIt
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name: GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent_System_String_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name.vb: GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  nameWithType.vb: CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent*
  name: GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  nameWithType: CreateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedPostClient_ThenItShouldReturnBadRequestWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent
  name: GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent()
  nameWithType: CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent*
  name: GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_CreateClientIntegrationTests_GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent
  nameWithType: CreateClientIntegrationTests.GivenValidClientDto_WhenRequestedPostClient_ThenItShouldReturnCreatedWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests
  name: DeleteClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html
  commentId: T:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests
  nameWithType: DeleteClientIntegrationTests
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name: DeleteClientIntegrationTests(ClientsManagementFixture)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests__ctor_MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name.vb: New(ClientsManagementFixture)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.DeleteClientIntegrationTests(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.New(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  nameWithType: DeleteClientIntegrationTests.DeleteClientIntegrationTests(ClientsManagementFixture)
  nameWithType.vb: DeleteClientIntegrationTests.New(ClientsManagementFixture)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.#ctor*
  name: DeleteClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests__ctor_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.DeleteClientIntegrationTests
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.New
  nameWithType: DeleteClientIntegrationTests.DeleteClientIntegrationTests
  nameWithType.vb: DeleteClientIntegrationTests.New
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase
  name: GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase()
  nameWithType: DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase*
  name: GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase
  nameWithType: DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldDeleteClientFromDatabase
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent
  name: GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent()
  nameWithType: DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent*
  name: GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent
  nameWithType: DeleteClientIntegrationTests.GivenAnExistingClient_WhenRequestDeleteClient_ThenItShouldReturnNoContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader
  name: GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader()
  nameWithType: DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader*
  name: GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader
  nameWithType: DeleteClientIntegrationTests.GivenInvalidId_WhenRequestDeleteClient_ThenItShouldReturnBadRequestWithErrorsAndProblemHeader
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader
  name: GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader()
  nameWithType: DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader*
  name: GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_DeleteClientIntegrationTests_GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader
  nameWithType: DeleteClientIntegrationTests.GivenNonExistentClient_WhenRequestDeleteClient_ThenItShouldReturnNotFoundWithErrorsAndProblemHeader
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests
  name: GetClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html
  commentId: T:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests
  nameWithType: GetClientIntegrationTests
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name: GetClientIntegrationTests(ClientsManagementFixture)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests__ctor_MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name.vb: New(ClientsManagementFixture)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GetClientIntegrationTests(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.New(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  nameWithType: GetClientIntegrationTests.GetClientIntegrationTests(ClientsManagementFixture)
  nameWithType.vb: GetClientIntegrationTests.New(ClientsManagementFixture)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.#ctor*
  name: GetClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests__ctor_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GetClientIntegrationTests
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.New
  nameWithType: GetClientIntegrationTests.GetClientIntegrationTests
  nameWithType.vb: GetClientIntegrationTests.New
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent
  name: GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent()
  nameWithType: GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent*
  name: GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent
  nameWithType: GetClientIntegrationTests.GivenClientsEndpoint_WhenRequestedGetClientWithoutId_ThenItShouldReturnOkWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent
  name: GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent()
  nameWithType: GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent*
  name: GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent
  nameWithType: GetClientIntegrationTests.GivenExistingId_WhenRequestedGetClientWithId_ThenItShouldReturnOkWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent
  name: GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent()
  nameWithType: GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent*
  name: GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent
  nameWithType: GetClientIntegrationTests.GivenInvalidId_WhenRequestGetClientWithId_ThenItShouldReturnBadRequestWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent
  name: GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent()
  nameWithType: GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent*
  name: GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_GetClientIntegrationTests_GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent
  nameWithType: GetClientIntegrationTests.GivenNonExistentClient_WhenRequestGetClientWithId_ThenItShouldReturnNotFoundWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests
  name: UpdateClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html
  commentId: T:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests
  nameWithType: UpdateClientIntegrationTests
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name: UpdateClientIntegrationTests(ClientsManagementFixture)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests__ctor_MyTrips_IntegrationTests_Fixtures_ClientsManagementFixture_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.#ctor(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  name.vb: New(ClientsManagementFixture)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.UpdateClientIntegrationTests(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.New(MyTrips.IntegrationTests.Fixtures.ClientsManagementFixture)
  nameWithType: UpdateClientIntegrationTests.UpdateClientIntegrationTests(ClientsManagementFixture)
  nameWithType.vb: UpdateClientIntegrationTests.New(ClientsManagementFixture)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.#ctor*
  name: UpdateClientIntegrationTests
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests__ctor_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.UpdateClientIntegrationTests
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.New
  nameWithType: UpdateClientIntegrationTests.UpdateClientIntegrationTests
  nameWithType.vb: UpdateClientIntegrationTests.New
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent
  name: GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent()
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent*
  name: GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithExistingEmail_WhenRequestedUpdateClient_ThenItShouldReturnConflictWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name: GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent_System_String_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name.vb: GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  nameWithType.vb: UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent*
  name: GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithInvalidEmail_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  name: GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent()
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent*
  name: GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithInvalidId_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name: GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent_System_String_
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(System.String)
  name.vb: GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  fullName.vb: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(string)
  nameWithType.vb: UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent(String)
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent*
  name: GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
  nameWithType: UpdateClientIntegrationTests.GivenClientDtoWithInvalidName_WhenRequestedUpdateClient_ThenItShouldReturnBadRequestWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent
  name: GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent()
  nameWithType: UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent*
  name: GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent
  nameWithType: UpdateClientIntegrationTests.GivenNonExistingClient_WhenRequestedUpdateClient_ThenItShouldReturnNotFoundWithHeadersAndContent
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent
  name: GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent()
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent
  commentId: M:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent()
  nameWithType: UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent()
- uid: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent*
  name: GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent
  href: api/MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.html#MyTrips_IntegrationTests_UseCases_ClientsManagement_UpdateClientIntegrationTests_GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent_
  commentId: Overload:MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent
  isSpec: "True"
  fullName: MyTrips.IntegrationTests.UseCases.ClientsManagement.UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent
  nameWithType: UpdateClientIntegrationTests.GivenValidClientDto_WhenRequestedUpdateClient_ThenItShouldReturnSuccessWithHeadersAndContent
- uid: MyTrips.Presentation.Controllers
  name: MyTrips.Presentation.Controllers
  href: api/MyTrips.Presentation.Controllers.html
  commentId: N:MyTrips.Presentation.Controllers
  fullName: MyTrips.Presentation.Controllers
  nameWithType: MyTrips.Presentation.Controllers
- uid: MyTrips.Presentation.Controllers.AuthController
  name: AuthController
  href: api/MyTrips.Presentation.Controllers.AuthController.html
  commentId: T:MyTrips.Presentation.Controllers.AuthController
  fullName: MyTrips.Presentation.Controllers.AuthController
  nameWithType: AuthController
- uid: MyTrips.Presentation.Controllers.AuthController.#ctor(MyTrips.Application.Interfaces.IAuthService)
  name: AuthController(IAuthService)
  href: api/MyTrips.Presentation.Controllers.AuthController.html#MyTrips_Presentation_Controllers_AuthController__ctor_MyTrips_Application_Interfaces_IAuthService_
  commentId: M:MyTrips.Presentation.Controllers.AuthController.#ctor(MyTrips.Application.Interfaces.IAuthService)
  name.vb: New(IAuthService)
  fullName: MyTrips.Presentation.Controllers.AuthController.AuthController(MyTrips.Application.Interfaces.IAuthService)
  fullName.vb: MyTrips.Presentation.Controllers.AuthController.New(MyTrips.Application.Interfaces.IAuthService)
  nameWithType: AuthController.AuthController(IAuthService)
  nameWithType.vb: AuthController.New(IAuthService)
- uid: MyTrips.Presentation.Controllers.AuthController.#ctor*
  name: AuthController
  href: api/MyTrips.Presentation.Controllers.AuthController.html#MyTrips_Presentation_Controllers_AuthController__ctor_
  commentId: Overload:MyTrips.Presentation.Controllers.AuthController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Controllers.AuthController.AuthController
  fullName.vb: MyTrips.Presentation.Controllers.AuthController.New
  nameWithType: AuthController.AuthController
  nameWithType.vb: AuthController.New
- uid: MyTrips.Presentation.Controllers.AuthController.Login(MyTrips.Domain.Entities.LoginInfo)
  name: Login(LoginInfo)
  href: api/MyTrips.Presentation.Controllers.AuthController.html#MyTrips_Presentation_Controllers_AuthController_Login_MyTrips_Domain_Entities_LoginInfo_
  commentId: M:MyTrips.Presentation.Controllers.AuthController.Login(MyTrips.Domain.Entities.LoginInfo)
  fullName: MyTrips.Presentation.Controllers.AuthController.Login(MyTrips.Domain.Entities.LoginInfo)
  nameWithType: AuthController.Login(LoginInfo)
- uid: MyTrips.Presentation.Controllers.AuthController.Login*
  name: Login
  href: api/MyTrips.Presentation.Controllers.AuthController.html#MyTrips_Presentation_Controllers_AuthController_Login_
  commentId: Overload:MyTrips.Presentation.Controllers.AuthController.Login
  isSpec: "True"
  fullName: MyTrips.Presentation.Controllers.AuthController.Login
  nameWithType: AuthController.Login
- uid: MyTrips.Presentation.Controllers.ClientsController
  name: ClientsController
  href: api/MyTrips.Presentation.Controllers.ClientsController.html
  commentId: T:MyTrips.Presentation.Controllers.ClientsController
  fullName: MyTrips.Presentation.Controllers.ClientsController
  nameWithType: ClientsController
- uid: MyTrips.Presentation.Controllers.ClientsController.#ctor(MyTrips.Application.Interfaces.IClientsService,FluentValidation.IValidator{MyTrips.Domain.Entities.Client})
  name: ClientsController(IClientsService, IValidator<Client>)
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController__ctor_MyTrips_Application_Interfaces_IClientsService_FluentValidation_IValidator_MyTrips_Domain_Entities_Client__
  commentId: M:MyTrips.Presentation.Controllers.ClientsController.#ctor(MyTrips.Application.Interfaces.IClientsService,FluentValidation.IValidator{MyTrips.Domain.Entities.Client})
  name.vb: New(IClientsService, IValidator(Of Client))
  fullName: MyTrips.Presentation.Controllers.ClientsController.ClientsController(MyTrips.Application.Interfaces.IClientsService, FluentValidation.IValidator<MyTrips.Domain.Entities.Client>)
  fullName.vb: MyTrips.Presentation.Controllers.ClientsController.New(MyTrips.Application.Interfaces.IClientsService, FluentValidation.IValidator(Of MyTrips.Domain.Entities.Client))
  nameWithType: ClientsController.ClientsController(IClientsService, IValidator<Client>)
  nameWithType.vb: ClientsController.New(IClientsService, IValidator(Of Client))
- uid: MyTrips.Presentation.Controllers.ClientsController.#ctor*
  name: ClientsController
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController__ctor_
  commentId: Overload:MyTrips.Presentation.Controllers.ClientsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Controllers.ClientsController.ClientsController
  fullName.vb: MyTrips.Presentation.Controllers.ClientsController.New
  nameWithType: ClientsController.ClientsController
  nameWithType.vb: ClientsController.New
- uid: MyTrips.Presentation.Controllers.ClientsController.Delete(System.Int32)
  name: Delete(int)
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Delete_System_Int32_
  commentId: M:MyTrips.Presentation.Controllers.ClientsController.Delete(System.Int32)
  name.vb: Delete(Integer)
  fullName: MyTrips.Presentation.Controllers.ClientsController.Delete(int)
  fullName.vb: MyTrips.Presentation.Controllers.ClientsController.Delete(Integer)
  nameWithType: ClientsController.Delete(int)
  nameWithType.vb: ClientsController.Delete(Integer)
- uid: MyTrips.Presentation.Controllers.ClientsController.Delete*
  name: Delete
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Delete_
  commentId: Overload:MyTrips.Presentation.Controllers.ClientsController.Delete
  isSpec: "True"
  fullName: MyTrips.Presentation.Controllers.ClientsController.Delete
  nameWithType: ClientsController.Delete
- uid: MyTrips.Presentation.Controllers.ClientsController.Get(MyTrips.Domain.ValueObjects.ClientParameters)
  name: Get(ClientParameters)
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Get_MyTrips_Domain_ValueObjects_ClientParameters_
  commentId: M:MyTrips.Presentation.Controllers.ClientsController.Get(MyTrips.Domain.ValueObjects.ClientParameters)
  fullName: MyTrips.Presentation.Controllers.ClientsController.Get(MyTrips.Domain.ValueObjects.ClientParameters)
  nameWithType: ClientsController.Get(ClientParameters)
- uid: MyTrips.Presentation.Controllers.ClientsController.Get(System.Int32)
  name: Get(int)
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Get_System_Int32_
  commentId: M:MyTrips.Presentation.Controllers.ClientsController.Get(System.Int32)
  name.vb: Get(Integer)
  fullName: MyTrips.Presentation.Controllers.ClientsController.Get(int)
  fullName.vb: MyTrips.Presentation.Controllers.ClientsController.Get(Integer)
  nameWithType: ClientsController.Get(int)
  nameWithType.vb: ClientsController.Get(Integer)
- uid: MyTrips.Presentation.Controllers.ClientsController.Get*
  name: Get
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Get_
  commentId: Overload:MyTrips.Presentation.Controllers.ClientsController.Get
  isSpec: "True"
  fullName: MyTrips.Presentation.Controllers.ClientsController.Get
  nameWithType: ClientsController.Get
- uid: MyTrips.Presentation.Controllers.ClientsController.Post(MyTrips.Application.Dtos.CreateClientDto)
  name: Post(CreateClientDto)
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Post_MyTrips_Application_Dtos_CreateClientDto_
  commentId: M:MyTrips.Presentation.Controllers.ClientsController.Post(MyTrips.Application.Dtos.CreateClientDto)
  fullName: MyTrips.Presentation.Controllers.ClientsController.Post(MyTrips.Application.Dtos.CreateClientDto)
  nameWithType: ClientsController.Post(CreateClientDto)
- uid: MyTrips.Presentation.Controllers.ClientsController.Post*
  name: Post
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Post_
  commentId: Overload:MyTrips.Presentation.Controllers.ClientsController.Post
  isSpec: "True"
  fullName: MyTrips.Presentation.Controllers.ClientsController.Post
  nameWithType: ClientsController.Post
- uid: MyTrips.Presentation.Controllers.ClientsController.Put(MyTrips.Application.Dtos.UpdateClientDto)
  name: Put(UpdateClientDto)
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Put_MyTrips_Application_Dtos_UpdateClientDto_
  commentId: M:MyTrips.Presentation.Controllers.ClientsController.Put(MyTrips.Application.Dtos.UpdateClientDto)
  fullName: MyTrips.Presentation.Controllers.ClientsController.Put(MyTrips.Application.Dtos.UpdateClientDto)
  nameWithType: ClientsController.Put(UpdateClientDto)
- uid: MyTrips.Presentation.Controllers.ClientsController.Put*
  name: Put
  href: api/MyTrips.Presentation.Controllers.ClientsController.html#MyTrips_Presentation_Controllers_ClientsController_Put_
  commentId: Overload:MyTrips.Presentation.Controllers.ClientsController.Put
  isSpec: "True"
  fullName: MyTrips.Presentation.Controllers.ClientsController.Put
  nameWithType: ClientsController.Put
- uid: MyTrips.Presentation.Errors
  name: MyTrips.Presentation.Errors
  href: api/MyTrips.Presentation.Errors.html
  commentId: N:MyTrips.Presentation.Errors
  fullName: MyTrips.Presentation.Errors
  nameWithType: MyTrips.Presentation.Errors
- uid: MyTrips.Presentation.Errors.BadRequestErrorDetails
  name: BadRequestErrorDetails
  href: api/MyTrips.Presentation.Errors.BadRequestErrorDetails.html
  commentId: T:MyTrips.Presentation.Errors.BadRequestErrorDetails
  fullName: MyTrips.Presentation.Errors.BadRequestErrorDetails
  nameWithType: BadRequestErrorDetails
- uid: MyTrips.Presentation.Errors.BadRequestErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,FluentResults.Result,System.String)
  name: BadRequestErrorDetails(HttpContext, Result, string)
  href: api/MyTrips.Presentation.Errors.BadRequestErrorDetails.html#MyTrips_Presentation_Errors_BadRequestErrorDetails__ctor_Microsoft_AspNetCore_Http_HttpContext_FluentResults_Result_System_String_
  commentId: M:MyTrips.Presentation.Errors.BadRequestErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,FluentResults.Result,System.String)
  name.vb: New(HttpContext, Result, String)
  fullName: MyTrips.Presentation.Errors.BadRequestErrorDetails.BadRequestErrorDetails(Microsoft.AspNetCore.Http.HttpContext, FluentResults.Result, string)
  fullName.vb: MyTrips.Presentation.Errors.BadRequestErrorDetails.New(Microsoft.AspNetCore.Http.HttpContext, FluentResults.Result, String)
  nameWithType: BadRequestErrorDetails.BadRequestErrorDetails(HttpContext, Result, string)
  nameWithType.vb: BadRequestErrorDetails.New(HttpContext, Result, String)
- uid: MyTrips.Presentation.Errors.BadRequestErrorDetails.#ctor*
  name: BadRequestErrorDetails
  href: api/MyTrips.Presentation.Errors.BadRequestErrorDetails.html#MyTrips_Presentation_Errors_BadRequestErrorDetails__ctor_
  commentId: Overload:MyTrips.Presentation.Errors.BadRequestErrorDetails.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Errors.BadRequestErrorDetails.BadRequestErrorDetails
  fullName.vb: MyTrips.Presentation.Errors.BadRequestErrorDetails.New
  nameWithType: BadRequestErrorDetails.BadRequestErrorDetails
  nameWithType.vb: BadRequestErrorDetails.New
- uid: MyTrips.Presentation.Errors.ConflictErrorDetails
  name: ConflictErrorDetails
  href: api/MyTrips.Presentation.Errors.ConflictErrorDetails.html
  commentId: T:MyTrips.Presentation.Errors.ConflictErrorDetails
  fullName: MyTrips.Presentation.Errors.ConflictErrorDetails
  nameWithType: ConflictErrorDetails
- uid: MyTrips.Presentation.Errors.ConflictErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,FluentResults.Result,System.String)
  name: ConflictErrorDetails(HttpContext, Result, string)
  href: api/MyTrips.Presentation.Errors.ConflictErrorDetails.html#MyTrips_Presentation_Errors_ConflictErrorDetails__ctor_Microsoft_AspNetCore_Http_HttpContext_FluentResults_Result_System_String_
  commentId: M:MyTrips.Presentation.Errors.ConflictErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,FluentResults.Result,System.String)
  name.vb: New(HttpContext, Result, String)
  fullName: MyTrips.Presentation.Errors.ConflictErrorDetails.ConflictErrorDetails(Microsoft.AspNetCore.Http.HttpContext, FluentResults.Result, string)
  fullName.vb: MyTrips.Presentation.Errors.ConflictErrorDetails.New(Microsoft.AspNetCore.Http.HttpContext, FluentResults.Result, String)
  nameWithType: ConflictErrorDetails.ConflictErrorDetails(HttpContext, Result, string)
  nameWithType.vb: ConflictErrorDetails.New(HttpContext, Result, String)
- uid: MyTrips.Presentation.Errors.ConflictErrorDetails.#ctor*
  name: ConflictErrorDetails
  href: api/MyTrips.Presentation.Errors.ConflictErrorDetails.html#MyTrips_Presentation_Errors_ConflictErrorDetails__ctor_
  commentId: Overload:MyTrips.Presentation.Errors.ConflictErrorDetails.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Errors.ConflictErrorDetails.ConflictErrorDetails
  fullName.vb: MyTrips.Presentation.Errors.ConflictErrorDetails.New
  nameWithType: ConflictErrorDetails.ConflictErrorDetails
  nameWithType.vb: ConflictErrorDetails.New
- uid: MyTrips.Presentation.Errors.CustomError
  name: CustomError
  href: api/MyTrips.Presentation.Errors.CustomError.html
  commentId: T:MyTrips.Presentation.Errors.CustomError
  fullName: MyTrips.Presentation.Errors.CustomError
  nameWithType: CustomError
- uid: MyTrips.Presentation.Errors.CustomError.Message
  name: Message
  href: api/MyTrips.Presentation.Errors.CustomError.html#MyTrips_Presentation_Errors_CustomError_Message
  commentId: P:MyTrips.Presentation.Errors.CustomError.Message
  fullName: MyTrips.Presentation.Errors.CustomError.Message
  nameWithType: CustomError.Message
- uid: MyTrips.Presentation.Errors.CustomError.Message*
  name: Message
  href: api/MyTrips.Presentation.Errors.CustomError.html#MyTrips_Presentation_Errors_CustomError_Message_
  commentId: Overload:MyTrips.Presentation.Errors.CustomError.Message
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.CustomError.Message
  nameWithType: CustomError.Message
- uid: MyTrips.Presentation.Errors.CustomError.Metadata
  name: Metadata
  href: api/MyTrips.Presentation.Errors.CustomError.html#MyTrips_Presentation_Errors_CustomError_Metadata
  commentId: P:MyTrips.Presentation.Errors.CustomError.Metadata
  fullName: MyTrips.Presentation.Errors.CustomError.Metadata
  nameWithType: CustomError.Metadata
- uid: MyTrips.Presentation.Errors.CustomError.Metadata*
  name: Metadata
  href: api/MyTrips.Presentation.Errors.CustomError.html#MyTrips_Presentation_Errors_CustomError_Metadata_
  commentId: Overload:MyTrips.Presentation.Errors.CustomError.Metadata
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.CustomError.Metadata
  nameWithType: CustomError.Metadata
- uid: MyTrips.Presentation.Errors.CustomError.Reasons
  name: Reasons
  href: api/MyTrips.Presentation.Errors.CustomError.html#MyTrips_Presentation_Errors_CustomError_Reasons
  commentId: P:MyTrips.Presentation.Errors.CustomError.Reasons
  fullName: MyTrips.Presentation.Errors.CustomError.Reasons
  nameWithType: CustomError.Reasons
- uid: MyTrips.Presentation.Errors.CustomError.Reasons*
  name: Reasons
  href: api/MyTrips.Presentation.Errors.CustomError.html#MyTrips_Presentation_Errors_CustomError_Reasons_
  commentId: Overload:MyTrips.Presentation.Errors.CustomError.Reasons
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.CustomError.Reasons
  nameWithType: CustomError.Reasons
- uid: MyTrips.Presentation.Errors.ErrorDetails
  name: ErrorDetails
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html
  commentId: T:MyTrips.Presentation.Errors.ErrorDetails
  fullName: MyTrips.Presentation.Errors.ErrorDetails
  nameWithType: ErrorDetails
- uid: MyTrips.Presentation.Errors.ErrorDetails.Detail
  name: Detail
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Detail
  commentId: P:MyTrips.Presentation.Errors.ErrorDetails.Detail
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Detail
  nameWithType: ErrorDetails.Detail
- uid: MyTrips.Presentation.Errors.ErrorDetails.Detail*
  name: Detail
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Detail_
  commentId: Overload:MyTrips.Presentation.Errors.ErrorDetails.Detail
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Detail
  nameWithType: ErrorDetails.Detail
- uid: MyTrips.Presentation.Errors.ErrorDetails.Errors
  name: Errors
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Errors
  commentId: P:MyTrips.Presentation.Errors.ErrorDetails.Errors
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Errors
  nameWithType: ErrorDetails.Errors
- uid: MyTrips.Presentation.Errors.ErrorDetails.Errors*
  name: Errors
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Errors_
  commentId: Overload:MyTrips.Presentation.Errors.ErrorDetails.Errors
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Errors
  nameWithType: ErrorDetails.Errors
- uid: MyTrips.Presentation.Errors.ErrorDetails.Instance
  name: Instance
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Instance
  commentId: P:MyTrips.Presentation.Errors.ErrorDetails.Instance
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Instance
  nameWithType: ErrorDetails.Instance
- uid: MyTrips.Presentation.Errors.ErrorDetails.Instance*
  name: Instance
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Instance_
  commentId: Overload:MyTrips.Presentation.Errors.ErrorDetails.Instance
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Instance
  nameWithType: ErrorDetails.Instance
- uid: MyTrips.Presentation.Errors.ErrorDetails.JsonSettings
  name: JsonSettings
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_JsonSettings
  commentId: F:MyTrips.Presentation.Errors.ErrorDetails.JsonSettings
  fullName: MyTrips.Presentation.Errors.ErrorDetails.JsonSettings
  nameWithType: ErrorDetails.JsonSettings
- uid: MyTrips.Presentation.Errors.ErrorDetails.Status
  name: Status
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Status
  commentId: P:MyTrips.Presentation.Errors.ErrorDetails.Status
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Status
  nameWithType: ErrorDetails.Status
- uid: MyTrips.Presentation.Errors.ErrorDetails.Status*
  name: Status
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Status_
  commentId: Overload:MyTrips.Presentation.Errors.ErrorDetails.Status
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Status
  nameWithType: ErrorDetails.Status
- uid: MyTrips.Presentation.Errors.ErrorDetails.Title
  name: Title
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Title
  commentId: P:MyTrips.Presentation.Errors.ErrorDetails.Title
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Title
  nameWithType: ErrorDetails.Title
- uid: MyTrips.Presentation.Errors.ErrorDetails.Title*
  name: Title
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Title_
  commentId: Overload:MyTrips.Presentation.Errors.ErrorDetails.Title
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Title
  nameWithType: ErrorDetails.Title
- uid: MyTrips.Presentation.Errors.ErrorDetails.ToString
  name: ToString()
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_ToString
  commentId: M:MyTrips.Presentation.Errors.ErrorDetails.ToString
  fullName: MyTrips.Presentation.Errors.ErrorDetails.ToString()
  nameWithType: ErrorDetails.ToString()
- uid: MyTrips.Presentation.Errors.ErrorDetails.ToString*
  name: ToString
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_ToString_
  commentId: Overload:MyTrips.Presentation.Errors.ErrorDetails.ToString
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.ErrorDetails.ToString
  nameWithType: ErrorDetails.ToString
- uid: MyTrips.Presentation.Errors.ErrorDetails.Type
  name: Type
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Type
  commentId: P:MyTrips.Presentation.Errors.ErrorDetails.Type
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Type
  nameWithType: ErrorDetails.Type
- uid: MyTrips.Presentation.Errors.ErrorDetails.Type*
  name: Type
  href: api/MyTrips.Presentation.Errors.ErrorDetails.html#MyTrips_Presentation_Errors_ErrorDetails_Type_
  commentId: Overload:MyTrips.Presentation.Errors.ErrorDetails.Type
  isSpec: "True"
  fullName: MyTrips.Presentation.Errors.ErrorDetails.Type
  nameWithType: ErrorDetails.Type
- uid: MyTrips.Presentation.Errors.InternalServerErrorDetails
  name: InternalServerErrorDetails
  href: api/MyTrips.Presentation.Errors.InternalServerErrorDetails.html
  commentId: T:MyTrips.Presentation.Errors.InternalServerErrorDetails
  fullName: MyTrips.Presentation.Errors.InternalServerErrorDetails
  nameWithType: InternalServerErrorDetails
- uid: MyTrips.Presentation.Errors.InternalServerErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String)
  name: InternalServerErrorDetails(HttpContext, string)
  href: api/MyTrips.Presentation.Errors.InternalServerErrorDetails.html#MyTrips_Presentation_Errors_InternalServerErrorDetails__ctor_Microsoft_AspNetCore_Http_HttpContext_System_String_
  commentId: M:MyTrips.Presentation.Errors.InternalServerErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String)
  name.vb: New(HttpContext, String)
  fullName: MyTrips.Presentation.Errors.InternalServerErrorDetails.InternalServerErrorDetails(Microsoft.AspNetCore.Http.HttpContext, string)
  fullName.vb: MyTrips.Presentation.Errors.InternalServerErrorDetails.New(Microsoft.AspNetCore.Http.HttpContext, String)
  nameWithType: InternalServerErrorDetails.InternalServerErrorDetails(HttpContext, string)
  nameWithType.vb: InternalServerErrorDetails.New(HttpContext, String)
- uid: MyTrips.Presentation.Errors.InternalServerErrorDetails.#ctor*
  name: InternalServerErrorDetails
  href: api/MyTrips.Presentation.Errors.InternalServerErrorDetails.html#MyTrips_Presentation_Errors_InternalServerErrorDetails__ctor_
  commentId: Overload:MyTrips.Presentation.Errors.InternalServerErrorDetails.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Errors.InternalServerErrorDetails.InternalServerErrorDetails
  fullName.vb: MyTrips.Presentation.Errors.InternalServerErrorDetails.New
  nameWithType: InternalServerErrorDetails.InternalServerErrorDetails
  nameWithType.vb: InternalServerErrorDetails.New
- uid: MyTrips.Presentation.Errors.NotFoundErrorDetails
  name: NotFoundErrorDetails
  href: api/MyTrips.Presentation.Errors.NotFoundErrorDetails.html
  commentId: T:MyTrips.Presentation.Errors.NotFoundErrorDetails
  fullName: MyTrips.Presentation.Errors.NotFoundErrorDetails
  nameWithType: NotFoundErrorDetails
- uid: MyTrips.Presentation.Errors.NotFoundErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,FluentResults.Result,System.String)
  name: NotFoundErrorDetails(HttpContext, Result, string)
  href: api/MyTrips.Presentation.Errors.NotFoundErrorDetails.html#MyTrips_Presentation_Errors_NotFoundErrorDetails__ctor_Microsoft_AspNetCore_Http_HttpContext_FluentResults_Result_System_String_
  commentId: M:MyTrips.Presentation.Errors.NotFoundErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,FluentResults.Result,System.String)
  name.vb: New(HttpContext, Result, String)
  fullName: MyTrips.Presentation.Errors.NotFoundErrorDetails.NotFoundErrorDetails(Microsoft.AspNetCore.Http.HttpContext, FluentResults.Result, string)
  fullName.vb: MyTrips.Presentation.Errors.NotFoundErrorDetails.New(Microsoft.AspNetCore.Http.HttpContext, FluentResults.Result, String)
  nameWithType: NotFoundErrorDetails.NotFoundErrorDetails(HttpContext, Result, string)
  nameWithType.vb: NotFoundErrorDetails.New(HttpContext, Result, String)
- uid: MyTrips.Presentation.Errors.NotFoundErrorDetails.#ctor*
  name: NotFoundErrorDetails
  href: api/MyTrips.Presentation.Errors.NotFoundErrorDetails.html#MyTrips_Presentation_Errors_NotFoundErrorDetails__ctor_
  commentId: Overload:MyTrips.Presentation.Errors.NotFoundErrorDetails.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Errors.NotFoundErrorDetails.NotFoundErrorDetails
  fullName.vb: MyTrips.Presentation.Errors.NotFoundErrorDetails.New
  nameWithType: NotFoundErrorDetails.NotFoundErrorDetails
  nameWithType.vb: NotFoundErrorDetails.New
- uid: MyTrips.Presentation.Errors.UnauthorizedErrorDetails
  name: UnauthorizedErrorDetails
  href: api/MyTrips.Presentation.Errors.UnauthorizedErrorDetails.html
  commentId: T:MyTrips.Presentation.Errors.UnauthorizedErrorDetails
  fullName: MyTrips.Presentation.Errors.UnauthorizedErrorDetails
  nameWithType: UnauthorizedErrorDetails
- uid: MyTrips.Presentation.Errors.UnauthorizedErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String)
  name: UnauthorizedErrorDetails(HttpContext, string)
  href: api/MyTrips.Presentation.Errors.UnauthorizedErrorDetails.html#MyTrips_Presentation_Errors_UnauthorizedErrorDetails__ctor_Microsoft_AspNetCore_Http_HttpContext_System_String_
  commentId: M:MyTrips.Presentation.Errors.UnauthorizedErrorDetails.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String)
  name.vb: New(HttpContext, String)
  fullName: MyTrips.Presentation.Errors.UnauthorizedErrorDetails.UnauthorizedErrorDetails(Microsoft.AspNetCore.Http.HttpContext, string)
  fullName.vb: MyTrips.Presentation.Errors.UnauthorizedErrorDetails.New(Microsoft.AspNetCore.Http.HttpContext, String)
  nameWithType: UnauthorizedErrorDetails.UnauthorizedErrorDetails(HttpContext, string)
  nameWithType.vb: UnauthorizedErrorDetails.New(HttpContext, String)
- uid: MyTrips.Presentation.Errors.UnauthorizedErrorDetails.#ctor*
  name: UnauthorizedErrorDetails
  href: api/MyTrips.Presentation.Errors.UnauthorizedErrorDetails.html#MyTrips_Presentation_Errors_UnauthorizedErrorDetails__ctor_
  commentId: Overload:MyTrips.Presentation.Errors.UnauthorizedErrorDetails.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Errors.UnauthorizedErrorDetails.UnauthorizedErrorDetails
  fullName.vb: MyTrips.Presentation.Errors.UnauthorizedErrorDetails.New
  nameWithType: UnauthorizedErrorDetails.UnauthorizedErrorDetails
  nameWithType.vb: UnauthorizedErrorDetails.New
- uid: MyTrips.Presentation.Filters
  name: MyTrips.Presentation.Filters
  href: api/MyTrips.Presentation.Filters.html
  commentId: N:MyTrips.Presentation.Filters
  fullName: MyTrips.Presentation.Filters
  nameWithType: MyTrips.Presentation.Filters
- uid: MyTrips.Presentation.Filters.MediaTypeOperationFilter
  name: MediaTypeOperationFilter
  href: api/MyTrips.Presentation.Filters.MediaTypeOperationFilter.html
  commentId: T:MyTrips.Presentation.Filters.MediaTypeOperationFilter
  fullName: MyTrips.Presentation.Filters.MediaTypeOperationFilter
  nameWithType: MediaTypeOperationFilter
- uid: MyTrips.Presentation.Filters.MediaTypeOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)
  name: Apply(OpenApiOperation, OperationFilterContext)
  href: api/MyTrips.Presentation.Filters.MediaTypeOperationFilter.html#MyTrips_Presentation_Filters_MediaTypeOperationFilter_Apply_Microsoft_OpenApi_Models_OpenApiOperation_Swashbuckle_AspNetCore_SwaggerGen_OperationFilterContext_
  commentId: M:MyTrips.Presentation.Filters.MediaTypeOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)
  fullName: MyTrips.Presentation.Filters.MediaTypeOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation, Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)
  nameWithType: MediaTypeOperationFilter.Apply(OpenApiOperation, OperationFilterContext)
- uid: MyTrips.Presentation.Filters.MediaTypeOperationFilter.Apply*
  name: Apply
  href: api/MyTrips.Presentation.Filters.MediaTypeOperationFilter.html#MyTrips_Presentation_Filters_MediaTypeOperationFilter_Apply_
  commentId: Overload:MyTrips.Presentation.Filters.MediaTypeOperationFilter.Apply
  isSpec: "True"
  fullName: MyTrips.Presentation.Filters.MediaTypeOperationFilter.Apply
  nameWithType: MediaTypeOperationFilter.Apply
- uid: MyTrips.Presentation.Filters.ProblemHeaderFilter
  name: ProblemHeaderFilter
  href: api/MyTrips.Presentation.Filters.ProblemHeaderFilter.html
  commentId: T:MyTrips.Presentation.Filters.ProblemHeaderFilter
  fullName: MyTrips.Presentation.Filters.ProblemHeaderFilter
  nameWithType: ProblemHeaderFilter
- uid: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  name: OnActionExecuted(ActionExecutedContext)
  href: api/MyTrips.Presentation.Filters.ProblemHeaderFilter.html#MyTrips_Presentation_Filters_ProblemHeaderFilter_OnActionExecuted_Microsoft_AspNetCore_Mvc_Filters_ActionExecutedContext_
  commentId: M:MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  fullName: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  nameWithType: ProblemHeaderFilter.OnActionExecuted(ActionExecutedContext)
- uid: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuted*
  name: OnActionExecuted
  href: api/MyTrips.Presentation.Filters.ProblemHeaderFilter.html#MyTrips_Presentation_Filters_ProblemHeaderFilter_OnActionExecuted_
  commentId: Overload:MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuted
  isSpec: "True"
  fullName: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuted
  nameWithType: ProblemHeaderFilter.OnActionExecuted
- uid: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  name: OnActionExecuting(ActionExecutingContext)
  href: api/MyTrips.Presentation.Filters.ProblemHeaderFilter.html#MyTrips_Presentation_Filters_ProblemHeaderFilter_OnActionExecuting_Microsoft_AspNetCore_Mvc_Filters_ActionExecutingContext_
  commentId: M:MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  fullName: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType: ProblemHeaderFilter.OnActionExecuting(ActionExecutingContext)
- uid: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuting*
  name: OnActionExecuting
  href: api/MyTrips.Presentation.Filters.ProblemHeaderFilter.html#MyTrips_Presentation_Filters_ProblemHeaderFilter_OnActionExecuting_
  commentId: Overload:MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuting
  isSpec: "True"
  fullName: MyTrips.Presentation.Filters.ProblemHeaderFilter.OnActionExecuting
  nameWithType: ProblemHeaderFilter.OnActionExecuting
- uid: MyTrips.Presentation.Filters.SwaggerSchemaFilter
  name: SwaggerSchemaFilter
  href: api/MyTrips.Presentation.Filters.SwaggerSchemaFilter.html
  commentId: T:MyTrips.Presentation.Filters.SwaggerSchemaFilter
  fullName: MyTrips.Presentation.Filters.SwaggerSchemaFilter
  nameWithType: SwaggerSchemaFilter
- uid: MyTrips.Presentation.Filters.SwaggerSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)
  name: Apply(OpenApiSchema, SchemaFilterContext)
  href: api/MyTrips.Presentation.Filters.SwaggerSchemaFilter.html#MyTrips_Presentation_Filters_SwaggerSchemaFilter_Apply_Microsoft_OpenApi_Models_OpenApiSchema_Swashbuckle_AspNetCore_SwaggerGen_SchemaFilterContext_
  commentId: M:MyTrips.Presentation.Filters.SwaggerSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)
  fullName: MyTrips.Presentation.Filters.SwaggerSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema, Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)
  nameWithType: SwaggerSchemaFilter.Apply(OpenApiSchema, SchemaFilterContext)
- uid: MyTrips.Presentation.Filters.SwaggerSchemaFilter.Apply*
  name: Apply
  href: api/MyTrips.Presentation.Filters.SwaggerSchemaFilter.html#MyTrips_Presentation_Filters_SwaggerSchemaFilter_Apply_
  commentId: Overload:MyTrips.Presentation.Filters.SwaggerSchemaFilter.Apply
  isSpec: "True"
  fullName: MyTrips.Presentation.Filters.SwaggerSchemaFilter.Apply
  nameWithType: SwaggerSchemaFilter.Apply
- uid: MyTrips.Presentation.Middlewares
  name: MyTrips.Presentation.Middlewares
  href: api/MyTrips.Presentation.Middlewares.html
  commentId: N:MyTrips.Presentation.Middlewares
  fullName: MyTrips.Presentation.Middlewares
  nameWithType: MyTrips.Presentation.Middlewares
- uid: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware
  name: ExceptionHandlingMiddleware
  href: api/MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.html
  commentId: T:MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware
  fullName: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware
  nameWithType: ExceptionHandlingMiddleware
- uid: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment)
  name: ExceptionHandlingMiddleware(IHostEnvironment)
  href: api/MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.html#MyTrips_Presentation_Middlewares_ExceptionHandlingMiddleware__ctor_Microsoft_Extensions_Hosting_IHostEnvironment_
  commentId: M:MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment)
  name.vb: New(IHostEnvironment)
  fullName: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.ExceptionHandlingMiddleware(Microsoft.Extensions.Hosting.IHostEnvironment)
  fullName.vb: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.New(Microsoft.Extensions.Hosting.IHostEnvironment)
  nameWithType: ExceptionHandlingMiddleware.ExceptionHandlingMiddleware(IHostEnvironment)
  nameWithType.vb: ExceptionHandlingMiddleware.New(IHostEnvironment)
- uid: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.#ctor*
  name: ExceptionHandlingMiddleware
  href: api/MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.html#MyTrips_Presentation_Middlewares_ExceptionHandlingMiddleware__ctor_
  commentId: Overload:MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.ExceptionHandlingMiddleware
  fullName.vb: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.New
  nameWithType: ExceptionHandlingMiddleware.ExceptionHandlingMiddleware
  nameWithType.vb: ExceptionHandlingMiddleware.New
- uid: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)
  name: InvokeAsync(HttpContext, RequestDelegate)
  href: api/MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.html#MyTrips_Presentation_Middlewares_ExceptionHandlingMiddleware_InvokeAsync_Microsoft_AspNetCore_Http_HttpContext_Microsoft_AspNetCore_Http_RequestDelegate_
  commentId: M:MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)
  fullName: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Http.RequestDelegate)
  nameWithType: ExceptionHandlingMiddleware.InvokeAsync(HttpContext, RequestDelegate)
- uid: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.InvokeAsync*
  name: InvokeAsync
  href: api/MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.html#MyTrips_Presentation_Middlewares_ExceptionHandlingMiddleware_InvokeAsync_
  commentId: Overload:MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.InvokeAsync
  isSpec: "True"
  fullName: MyTrips.Presentation.Middlewares.ExceptionHandlingMiddleware.InvokeAsync
  nameWithType: ExceptionHandlingMiddleware.InvokeAsync
- uid: MyTrips.Presentation.Validators
  name: MyTrips.Presentation.Validators
  href: api/MyTrips.Presentation.Validators.html
  commentId: N:MyTrips.Presentation.Validators
  fullName: MyTrips.Presentation.Validators
  nameWithType: MyTrips.Presentation.Validators
- uid: MyTrips.Presentation.Validators.InputValidator
  name: InputValidator
  href: api/MyTrips.Presentation.Validators.InputValidator.html
  commentId: T:MyTrips.Presentation.Validators.InputValidator
  fullName: MyTrips.Presentation.Validators.InputValidator
  nameWithType: InputValidator
- uid: MyTrips.Presentation.Validators.InputValidator.ValidateId(System.Int32)
  name: ValidateId(int)
  href: api/MyTrips.Presentation.Validators.InputValidator.html#MyTrips_Presentation_Validators_InputValidator_ValidateId_System_Int32_
  commentId: M:MyTrips.Presentation.Validators.InputValidator.ValidateId(System.Int32)
  name.vb: ValidateId(Integer)
  fullName: MyTrips.Presentation.Validators.InputValidator.ValidateId(int)
  fullName.vb: MyTrips.Presentation.Validators.InputValidator.ValidateId(Integer)
  nameWithType: InputValidator.ValidateId(int)
  nameWithType.vb: InputValidator.ValidateId(Integer)
- uid: MyTrips.Presentation.Validators.InputValidator.ValidateId*
  name: ValidateId
  href: api/MyTrips.Presentation.Validators.InputValidator.html#MyTrips_Presentation_Validators_InputValidator_ValidateId_
  commentId: Overload:MyTrips.Presentation.Validators.InputValidator.ValidateId
  isSpec: "True"
  fullName: MyTrips.Presentation.Validators.InputValidator.ValidateId
  nameWithType: InputValidator.ValidateId
- uid: MyTrips.UnitTest.ClassData
  name: MyTrips.UnitTest.ClassData
  href: api/MyTrips.UnitTest.ClassData.html
  commentId: N:MyTrips.UnitTest.ClassData
  fullName: MyTrips.UnitTest.ClassData
  nameWithType: MyTrips.UnitTest.ClassData
- uid: MyTrips.UnitTest.ClassData.InvalidEmailClassData
  name: InvalidEmailClassData
  href: api/MyTrips.UnitTest.ClassData.InvalidEmailClassData.html
  commentId: T:MyTrips.UnitTest.ClassData.InvalidEmailClassData
  fullName: MyTrips.UnitTest.ClassData.InvalidEmailClassData
  nameWithType: InvalidEmailClassData
- uid: MyTrips.UnitTest.ClassData.InvalidEmailClassData.GetEnumerator
  name: GetEnumerator()
  href: api/MyTrips.UnitTest.ClassData.InvalidEmailClassData.html#MyTrips_UnitTest_ClassData_InvalidEmailClassData_GetEnumerator
  commentId: M:MyTrips.UnitTest.ClassData.InvalidEmailClassData.GetEnumerator
  fullName: MyTrips.UnitTest.ClassData.InvalidEmailClassData.GetEnumerator()
  nameWithType: InvalidEmailClassData.GetEnumerator()
- uid: MyTrips.UnitTest.ClassData.InvalidEmailClassData.GetEnumerator*
  name: GetEnumerator
  href: api/MyTrips.UnitTest.ClassData.InvalidEmailClassData.html#MyTrips_UnitTest_ClassData_InvalidEmailClassData_GetEnumerator_
  commentId: Overload:MyTrips.UnitTest.ClassData.InvalidEmailClassData.GetEnumerator
  isSpec: "True"
  fullName: MyTrips.UnitTest.ClassData.InvalidEmailClassData.GetEnumerator
  nameWithType: InvalidEmailClassData.GetEnumerator
- uid: MyTrips.UnitTest.ClassData.InvalidStringClassData
  name: InvalidStringClassData
  href: api/MyTrips.UnitTest.ClassData.InvalidStringClassData.html
  commentId: T:MyTrips.UnitTest.ClassData.InvalidStringClassData
  fullName: MyTrips.UnitTest.ClassData.InvalidStringClassData
  nameWithType: InvalidStringClassData
- uid: MyTrips.UnitTest.ClassData.InvalidStringClassData.GetEnumerator
  name: GetEnumerator()
  href: api/MyTrips.UnitTest.ClassData.InvalidStringClassData.html#MyTrips_UnitTest_ClassData_InvalidStringClassData_GetEnumerator
  commentId: M:MyTrips.UnitTest.ClassData.InvalidStringClassData.GetEnumerator
  fullName: MyTrips.UnitTest.ClassData.InvalidStringClassData.GetEnumerator()
  nameWithType: InvalidStringClassData.GetEnumerator()
- uid: MyTrips.UnitTest.ClassData.InvalidStringClassData.GetEnumerator*
  name: GetEnumerator
  href: api/MyTrips.UnitTest.ClassData.InvalidStringClassData.html#MyTrips_UnitTest_ClassData_InvalidStringClassData_GetEnumerator_
  commentId: Overload:MyTrips.UnitTest.ClassData.InvalidStringClassData.GetEnumerator
  isSpec: "True"
  fullName: MyTrips.UnitTest.ClassData.InvalidStringClassData.GetEnumerator
  nameWithType: InvalidStringClassData.GetEnumerator
- uid: MyTrips.UnitTest.Collections
  name: MyTrips.UnitTest.Collections
  href: api/MyTrips.UnitTest.Collections.html
  commentId: N:MyTrips.UnitTest.Collections
  fullName: MyTrips.UnitTest.Collections
  nameWithType: MyTrips.UnitTest.Collections
- uid: MyTrips.UnitTest.Collections.ClientsManagementCollection
  name: ClientsManagementCollection
  href: api/MyTrips.UnitTest.Collections.ClientsManagementCollection.html
  commentId: T:MyTrips.UnitTest.Collections.ClientsManagementCollection
  fullName: MyTrips.UnitTest.Collections.ClientsManagementCollection
  nameWithType: ClientsManagementCollection
- uid: MyTrips.UnitTest.Fixtures
  name: MyTrips.UnitTest.Fixtures
  href: api/MyTrips.UnitTest.Fixtures.html
  commentId: N:MyTrips.UnitTest.Fixtures
  fullName: MyTrips.UnitTest.Fixtures
  nameWithType: MyTrips.UnitTest.Fixtures
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture
  name: ClientsManagementFixture
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html
  commentId: T:MyTrips.UnitTest.Fixtures.ClientsManagementFixture
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture
  nameWithType: ClientsManagementFixture
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.#ctor
  name: ClientsManagementFixture()
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture__ctor
  commentId: M:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.#ctor
  name.vb: New()
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsManagementFixture()
  fullName.vb: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.New()
  nameWithType: ClientsManagementFixture.ClientsManagementFixture()
  nameWithType.vb: ClientsManagementFixture.New()
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.#ctor*
  name: ClientsManagementFixture
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture__ctor_
  commentId: Overload:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsManagementFixture
  fullName.vb: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.New
  nameWithType: ClientsManagementFixture.ClientsManagementFixture
  nameWithType.vb: ClientsManagementFixture.New
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientStub
  name: ClientStub
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture_ClientStub
  commentId: F:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientStub
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientStub
  nameWithType: ClientsManagementFixture.ClientStub
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsCollectionStub
  name: ClientsCollectionStub
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture_ClientsCollectionStub
  commentId: F:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsCollectionStub
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsCollectionStub
  nameWithType: ClientsManagementFixture.ClientsCollectionStub
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsRepositoryMock
  name: ClientsRepositoryMock
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture_ClientsRepositoryMock
  commentId: F:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsRepositoryMock
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ClientsRepositoryMock
  nameWithType: ClientsManagementFixture.ClientsRepositoryMock
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.CreateClientDtoStub
  name: CreateClientDtoStub
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture_CreateClientDtoStub
  commentId: F:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.CreateClientDtoStub
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.CreateClientDtoStub
  nameWithType: ClientsManagementFixture.CreateClientDtoStub
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.MapperMock
  name: MapperMock
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture_MapperMock
  commentId: F:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.MapperMock
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.MapperMock
  nameWithType: ClientsManagementFixture.MapperMock
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ResponseClientDtoStub
  name: ResponseClientDtoStub
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture_ResponseClientDtoStub
  commentId: F:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ResponseClientDtoStub
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.ResponseClientDtoStub
  nameWithType: ClientsManagementFixture.ResponseClientDtoStub
- uid: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.UpdateClientDtoStub
  name: UpdateClientDtoStub
  href: api/MyTrips.UnitTest.Fixtures.ClientsManagementFixture.html#MyTrips_UnitTest_Fixtures_ClientsManagementFixture_UpdateClientDtoStub
  commentId: F:MyTrips.UnitTest.Fixtures.ClientsManagementFixture.UpdateClientDtoStub
  fullName: MyTrips.UnitTest.Fixtures.ClientsManagementFixture.UpdateClientDtoStub
  nameWithType: ClientsManagementFixture.UpdateClientDtoStub
- uid: MyTrips.UnitTest.UseCases.AspNet
  name: MyTrips.UnitTest.UseCases.AspNet
  href: api/MyTrips.UnitTest.UseCases.AspNet.html
  commentId: N:MyTrips.UnitTest.UseCases.AspNet
  fullName: MyTrips.UnitTest.UseCases.AspNet
  nameWithType: MyTrips.UnitTest.UseCases.AspNet
- uid: MyTrips.UnitTest.UseCases.AspNet.FilterTests
  name: FilterTests
  href: api/MyTrips.UnitTest.UseCases.AspNet.FilterTests.html
  commentId: T:MyTrips.UnitTest.UseCases.AspNet.FilterTests
  fullName: MyTrips.UnitTest.UseCases.AspNet.FilterTests
  nameWithType: FilterTests
- uid: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(System.Int32)
  name: GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(int)
  href: api/MyTrips.UnitTest.UseCases.AspNet.FilterTests.html#MyTrips_UnitTest_UseCases_AspNet_FilterTests_GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader_System_Int32_
  commentId: M:MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(System.Int32)
  name.vb: GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(Integer)
  fullName: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(int)
  fullName.vb: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(Integer)
  nameWithType: FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(int)
  nameWithType.vb: FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader(Integer)
- uid: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader*
  name: GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader
  href: api/MyTrips.UnitTest.UseCases.AspNet.FilterTests.html#MyTrips_UnitTest_UseCases_AspNet_FilterTests_GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader_
  commentId: Overload:MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader
  nameWithType: FilterTests.GivenErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldAddProblemContentTypeHeader
- uid: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(System.Int32)
  name: GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(int)
  href: api/MyTrips.UnitTest.UseCases.AspNet.FilterTests.html#MyTrips_UnitTest_UseCases_AspNet_FilterTests_GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader_System_Int32_
  commentId: M:MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(System.Int32)
  name.vb: GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(Integer)
  fullName: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(int)
  fullName.vb: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(Integer)
  nameWithType: FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(int)
  nameWithType.vb: FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader(Integer)
- uid: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader*
  name: GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader
  href: api/MyTrips.UnitTest.UseCases.AspNet.FilterTests.html#MyTrips_UnitTest_UseCases_AspNet_FilterTests_GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader_
  commentId: Overload:MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.AspNet.FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader
  nameWithType: FilterTests.GivenNonErrorStatusCode_WhenExecuteProblemHeaderFilter_ThenItShouldNotAddErrorContentTypeHeader
- uid: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests
  name: MiddlewareTests
  href: api/MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.html
  commentId: T:MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests
  fullName: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests
  nameWithType: MiddlewareTests
- uid: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.#ctor
  name: MiddlewareTests()
  href: api/MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.html#MyTrips_UnitTest_UseCases_AspNet_MiddlewareTests__ctor
  commentId: M:MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.#ctor
  name.vb: New()
  fullName: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.MiddlewareTests()
  fullName.vb: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.New()
  nameWithType: MiddlewareTests.MiddlewareTests()
  nameWithType.vb: MiddlewareTests.New()
- uid: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.#ctor*
  name: MiddlewareTests
  href: api/MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.html#MyTrips_UnitTest_UseCases_AspNet_MiddlewareTests__ctor_
  commentId: Overload:MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.MiddlewareTests
  fullName.vb: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.New
  nameWithType: MiddlewareTests.MiddlewareTests
  nameWithType.vb: MiddlewareTests.New
- uid: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader
  name: GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader()
  href: api/MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.html#MyTrips_UnitTest_UseCases_AspNet_MiddlewareTests_GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader
  commentId: M:MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader
  fullName: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader()
  nameWithType: MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader()
- uid: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader*
  name: GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader
  href: api/MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.html#MyTrips_UnitTest_UseCases_AspNet_MiddlewareTests_GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader_
  commentId: Overload:MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.AspNet.MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader
  nameWithType: MiddlewareTests.GivenExceptionMiddleware_WhenInvoked_ThenItShouldReturnInternalServerErrorAndHeader
- uid: MyTrips.UnitTest.UseCases.ClientTests
  name: MyTrips.UnitTest.UseCases.ClientTests
  href: api/MyTrips.UnitTest.UseCases.ClientTests.html
  commentId: N:MyTrips.UnitTest.UseCases.ClientTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests
  nameWithType: MyTrips.UnitTest.UseCases.ClientTests
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  name: CreateClientUnitTests
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html
  commentId: T:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  nameWithType: CreateClientUnitTests
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  name: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  nameWithType: CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  name: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  nameWithType: CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors()
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors*
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt()
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt()
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt*
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  name: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError_System_String_
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  name.vb: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  nameWithType: CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  nameWithType.vb: CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError*
  name: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  nameWithType: CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  name: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError_System_String_
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  name.vb: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  nameWithType: CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  nameWithType.vb: CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError*
  name: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  nameWithType: CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  name: GivenValidClient_WhenCreateClient_ThenItShouldBePersisted()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted()
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted()
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted*
  name: GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenValidClient_WhenCreateClient_ThenItShouldBePersisted_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  name: GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto()
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto()
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto*
  name: GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  href: api/MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests
  name: DeleteClientUnitTests
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html
  commentId: T:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests
  nameWithType: DeleteClientUnitTests
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError
  name: GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError()
  nameWithType: DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError()
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError*
  name: GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError
  nameWithType: DeleteClientUnitTests.GivenClientWithIdReferencedByForeignKey_WhenDeleteClient_ThenItShouldReturnFailResultWithConflictError
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  name: GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  nameWithType: DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  name: GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  nameWithType: DeleteClientUnitTests.GivenDeleteRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges
  name: GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges()
  nameWithType: DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges()
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges*
  name: GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges
  nameWithType: DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldPersistChanges
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult
  name: GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult()
  nameWithType: DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult()
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult*
  name: GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult
  nameWithType: DeleteClientUnitTests.GivenExistingClient_WhenDeleteClient_ThenItShouldReturnOkResult
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors
  name: GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors()
  nameWithType: DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors()
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors*
  name: GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors
  nameWithType: DeleteClientUnitTests.GivenInvalidId_WhenDeleteClient_ThenItShouldReturnFailResultWithValidationErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError
  name: GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError()
  nameWithType: DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError()
- uid: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError*
  name: GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError
  href: api/MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_DeleteClientUnitTests_GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError
  nameWithType: DeleteClientUnitTests.GivenNonExistingClient_WhenDeleteClient_ThenItShouldReturnFailResultWithNotFoundError
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests
  name: GetClientUnitTests
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html
  commentId: T:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests
  nameWithType: GetClientUnitTests
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  name: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  nameWithType: GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  name: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  nameWithType: GetClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult
  name: GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult()
  nameWithType: GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult()
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult*
  name: GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult
  nameWithType: GetClientUnitTests.GivenExistingClient_WhenGetClientWithId_ThenItShouldReturnOkResultObjectWithTheClientDtoResult
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos
  name: GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos()
  nameWithType: GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos()
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos*
  name: GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos
  nameWithType: GetClientUnitTests.GivenExistingClients_WhenGetClients_ThenItShouldReturnOkResultObjectWithTheDtos
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  name: GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  nameWithType: GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  name: GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  nameWithType: GetClientUnitTests.GivenGetRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails
  name: GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails()
  nameWithType: GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails()
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails*
  name: GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails
  nameWithType: GetClientUnitTests.GivenInvalidId_WhenGetClientWithIdRequest_ThenItShouldReturnBadRequestResponseWithErrorDetails
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails
  name: GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails()
  nameWithType: GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails()
- uid: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails*
  name: GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails
  href: api/MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_GetClientUnitTests_GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails
  nameWithType: GetClientUnitTests.GivenNonExistentClient_WhenTryGetClient_ThenItShouldReturnNotFoundResultObjectWithErrorDetails
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  name: UpdateClientUnitTests
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html
  commentId: T:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  nameWithType: UpdateClientUnitTests
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  name: GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt()
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt*
  name: GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  name: GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors()
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors*
  name: GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  name: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors_System_String_
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  name.vb: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  nameWithType.vb: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors*
  name: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  name: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors_System_String_
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  name.vb: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  nameWithType.vb: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors*
  name: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt()
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt*
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto()
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto*
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  name: GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors()
  nameWithType: UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors()
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors*
  name: GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  nameWithType: UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  name: GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  nameWithType: UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  name: GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  href: api/MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException_
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  isSpec: "True"
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  nameWithType: UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException

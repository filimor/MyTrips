### YamlMime:ManagedReference
items:
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  commentId: T:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  id: CreateClientUnitTests
  parent: MyTrips.UnitTest.UseCases.ClientTests
  children:
  - MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  - MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  - MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  - MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  - MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  - MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  - MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  langs:
  - csharp
  - vb
  name: CreateClientUnitTests
  nameWithType: CreateClientUnitTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  type: Class
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: CreateClientUnitTests
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 19
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Collection("ClientsManagementUnit")]

      public class CreateClientUnitTests
    content.vb: >-
      <Collection("ClientsManagementUnit")>

      Public Class CreateClientUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Xunit.CollectionAttribute
    ctor: Xunit.CollectionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ClientsManagementUnit
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  id: GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  parent: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto()
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 24
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  id: GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  parent: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenValidClient_WhenCreateClient_ThenItShouldBePersisted()
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 39
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenValidClient_WhenCreateClient_ThenItShouldBePersisted()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenValidClient_WhenCreateClient_ThenItShouldBePersisted() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  id: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  parent: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  nameWithType: CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 53
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Theory]

      [ClassData(typeof(InvalidStringClassData))]

      [Trait("Category", "Unit")]

      public Task GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Theory>

      <ClassData(GetType(InvalidStringClassData))>

      <Trait("Category", "Unit")>

      Public Function GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(name As String) As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  - type: Xunit.ClassDataAttribute
    ctor: Xunit.ClassDataAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: MyTrips.UnitTest.ClassData.InvalidStringClassData
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
  nameWithType.vb: CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  name.vb: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  id: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(System.String)
  parent: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  nameWithType: CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string)
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 82
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Theory]

      [ClassData(typeof(InvalidEmailClassData))]

      [Trait("Category", "Unit")]

      public Task GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(string email)
    parameters:
    - id: email
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Theory>

      <ClassData(GetType(InvalidEmailClassData))>

      <Trait("Category", "Unit")>

      Public Function GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(email As String) As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  - type: Xunit.ClassDataAttribute
    ctor: Xunit.ClassDataAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: MyTrips.UnitTest.ClassData.InvalidEmailClassData
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
  nameWithType.vb: CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
  name.vb: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  id: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  parent: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 111
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  id: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  parent: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt()
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 137
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  id: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  parent: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  nameWithType: CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/CreateClientUnitTests.cs
    startLine: 160
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
references:
- uid: MyTrips.UnitTest.UseCases.ClientTests
  commentId: N:MyTrips.UnitTest.UseCases.ClientTests
  href: MyTrips.html
  name: MyTrips.UnitTest.UseCases.ClientTests
  nameWithType: MyTrips.UnitTest.UseCases.ClientTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests
  spec.csharp:
  - uid: MyTrips
    name: MyTrips
    href: MyTrips.html
  - name: .
  - uid: MyTrips.UnitTest
    name: UnitTest
    href: MyTrips.UnitTest.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases
    name: UseCases
    href: MyTrips.UnitTest.UseCases.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases.ClientTests
    name: ClientTests
    href: MyTrips.UnitTest.UseCases.ClientTests.html
  spec.vb:
  - uid: MyTrips
    name: MyTrips
    href: MyTrips.html
  - name: .
  - uid: MyTrips.UnitTest
    name: UnitTest
    href: MyTrips.UnitTest.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases
    name: UseCases
    href: MyTrips.UnitTest.UseCases.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases.ClientTests
    name: ClientTests
    href: MyTrips.UnitTest.UseCases.ClientTests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  href: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  name: GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldReturnOkResultObjectWithTheDto
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  href: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  name: GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  nameWithType: CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenValidClient_WhenCreateClient_ThenItShouldBePersisted
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  href: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError_System_String_
  name: GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  nameWithType: CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidName_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  href: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError_System_String_
  name: GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  nameWithType: CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenInvalidEmail_WhenTryToCreateClient_ThenItShouldReturnBadRequestResponseWithTheError
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  href: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  href: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  name: GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  nameWithType: CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenExistingEmail_WhenTryToCreateClient_ThenItShouldReturnNotPersistIt
- uid: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  href: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_CreateClientUnitTests_GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  name: GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  nameWithType: CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  fullName: MyTrips.UnitTest.UseCases.ClientTests.CreateClientUnitTests.GivenCreateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException

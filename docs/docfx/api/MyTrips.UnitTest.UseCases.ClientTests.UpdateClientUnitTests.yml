### YamlMime:ManagedReference
items:
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  commentId: T:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  id: UpdateClientUnitTests
  parent: MyTrips.UnitTest.UseCases.ClientTests
  children:
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  - MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  langs:
  - csharp
  - vb
  name: UpdateClientUnitTests
  nameWithType: UpdateClientUnitTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  type: Class
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: UpdateClientUnitTests
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 19
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Collection("ClientsManagementUnit")]

      public class UpdateClientUnitTests
    content.vb: >-
      <Collection("ClientsManagementUnit")>

      Public Class UpdateClientUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Xunit.CollectionAttribute
    ctor: Xunit.CollectionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ClientsManagementUnit
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  id: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 24
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  id: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 39
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Theory]

      [Trait("Category", "Unit")]

      [ClassData(typeof(InvalidStringClassData))]

      public Task GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Theory>

      <Trait("Category", "Unit")>

      <ClassData(GetType(InvalidStringClassData))>

      Public Function GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(name As String) As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
  - type: Xunit.ClassDataAttribute
    ctor: Xunit.ClassDataAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: MyTrips.UnitTest.ClassData.InvalidStringClassData
  nameWithType.vb: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  name.vb: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  id: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(System.String)
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string)
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 68
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Theory]

      [Trait("Category", "Unit")]

      [ClassData(typeof(InvalidEmailClassData))]

      public Task GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(string email)
    parameters:
    - id: email
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Theory>

      <Trait("Category", "Unit")>

      <ClassData(GetType(InvalidEmailClassData))>

      Public Function GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(email As String) As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
  - type: Xunit.ClassDataAttribute
    ctor: Xunit.ClassDataAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: MyTrips.UnitTest.ClassData.InvalidEmailClassData
  nameWithType.vb: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  fullName.vb: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(String)
  name.vb: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors(String)
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  id: GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 97
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  id: GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors()
  nameWithType: UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 124
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  id: GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  nameWithType: UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 144
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  id: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 160
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  commentId: M:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  id: GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  parent: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests
  langs:
  - csharp
  - vb
  name: GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt()
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt()
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt()
  type: Method
  source:
    remote:
      path: tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
      branch: main
      repo: https://github.com/filimor/api-ploomes.git
    id: GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
    path: ../../tests/MyTrips.UnitTest/UseCases/ClientTests/UpdateClientUnitTests.cs
    startLine: 174
  assemblies:
  - MyTrips.UnitTest
  namespace: MyTrips.UnitTest.UseCases.ClientTests
  syntax:
    content: >-
      [Fact]

      [Trait("Category", "Unit")]

      public Task GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      <Trait("Category", "Unit")>

      Public Function GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt() As Task
  overload: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Category
    - type: System.String
      value: Unit
references:
- uid: MyTrips.UnitTest.UseCases.ClientTests
  commentId: N:MyTrips.UnitTest.UseCases.ClientTests
  href: MyTrips.html
  name: MyTrips.UnitTest.UseCases.ClientTests
  nameWithType: MyTrips.UnitTest.UseCases.ClientTests
  fullName: MyTrips.UnitTest.UseCases.ClientTests
  spec.csharp:
  - uid: MyTrips
    name: MyTrips
    href: MyTrips.html
  - name: .
  - uid: MyTrips.UnitTest
    name: UnitTest
    href: MyTrips.UnitTest.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases
    name: UseCases
    href: MyTrips.UnitTest.UseCases.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases.ClientTests
    name: ClientTests
    href: MyTrips.UnitTest.UseCases.ClientTests.html
  spec.vb:
  - uid: MyTrips
    name: MyTrips
    href: MyTrips.html
  - name: .
  - uid: MyTrips.UnitTest
    name: UnitTest
    href: MyTrips.UnitTest.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases
    name: UseCases
    href: MyTrips.UnitTest.UseCases.html
  - name: .
  - uid: MyTrips.UnitTest.UseCases.ClientTests
    name: ClientTests
    href: MyTrips.UnitTest.UseCases.ClientTests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldReturnOkResultObjectWithUpdatedDto
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors_System_String_
  name: GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidName_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors_System_String_
  name: GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithInvalidEmail_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  name: GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithEmailOfOtherClient_ThenItShouldReturnFailResultObjectWithTheErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  name: GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  nameWithType: UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenNonExistingClient_WhenTryToUpdateIt_ThenItShouldReturnFailObjectResultWithErrors
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  name: GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  nameWithType: UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenUpdateRequest_WhenRepositoryThrowException_ThenItShouldThrowTheException
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  name: GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenUpdateWithValidData_ThenItShouldPersistIt
- uid: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt*
  commentId: Overload:MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  href: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.html#MyTrips_UnitTest_UseCases_ClientTests_UpdateClientUnitTests_GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  name: GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  nameWithType: UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
  fullName: MyTrips.UnitTest.UseCases.ClientTests.UpdateClientUnitTests.GivenAnExistingClient_WhenTryToUpdateItWithEmailOfOtherClient_ThenItShouldNotPersistIt
